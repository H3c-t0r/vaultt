### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache006-package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea-{{checksum ".buildcache/cache-keys/package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 80a384b6c1f18e6ae41e4ebfd69442a721a40cea
        name: Write package metadata for darwin_386_package
    - restore_cache:
        key: cache006-package-ac85b0f898691dab458c03e137efeeaf138d979d-{{checksum ".buildcache/cache-keys/package-ac85b0f898691dab458c03e137efeeaf138d979d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: ac85b0f898691dab458c03e137efeeaf138d979d
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache006-package-b730df90d4a19f6fc146615ec49e69f1640f1458-{{checksum ".buildcache/cache-keys/package-b730df90d4a19f6fc146615ec49e69f1640f1458"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: b730df90d4a19f6fc146615ec49e69f1640f1458
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache006-package-a1602c2136af03cb02ff741ebb4db084667431d0-{{checksum ".buildcache/cache-keys/package-a1602c2136af03cb02ff741ebb4db084667431d0"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: a1602c2136af03cb02ff741ebb4db084667431d0
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache006-package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981-{{checksum ".buildcache/cache-keys/package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache006-package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5-{{checksum ".buildcache/cache-keys/package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache006-package-97d6e4b36f95d74b0d953ed50498d41be5daceb4-{{checksum ".buildcache/cache-keys/package-97d6e4b36f95d74b0d953ed50498d41be5daceb4"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 97d6e4b36f95d74b0d953ed50498d41be5daceb4
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache006-package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399-{{checksum ".buildcache/cache-keys/package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: e3ed0b230d0ea063cb07a5b6762bd9b85553b399
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache006-package-db028467b51809deb079d125e831fd66e901f7e9-{{checksum ".buildcache/cache-keys/package-db028467b51809deb079d125e831fd66e901f7e9"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: db028467b51809deb079d125e831fd66e901f7e9
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache006-package-2ad05da49cb0279933cf062277b3cee7f860a652-{{checksum ".buildcache/cache-keys/package-2ad05da49cb0279933cf062277b3cee7f860a652"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 2ad05da49cb0279933cf062277b3cee7f860a652
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache006-package-dc4c69b05f01affb65efd80b56737f145696c68d-{{checksum ".buildcache/cache-keys/package-dc4c69b05f01affb65efd80b56737f145696c68d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: dc4c69b05f01affb65efd80b56737f145696c68d
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache006-package-d94bcaeeb36e4905c01d4329b71608ee88a80997-{{checksum ".buildcache/cache-keys/package-d94bcaeeb36e4905c01d4329b71608ee88a80997"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: d94bcaeeb36e4905c01d4329b71608ee88a80997
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache006-package-174997257733ef1e06b4d3775a27b4410cbf0809-{{checksum ".buildcache/cache-keys/package-174997257733ef1e06b4d3775a27b4410cbf0809"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 174997257733ef1e06b4d3775a27b4410cbf0809
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache006-package-06a1b68c0f891194aed67a555c3d945134db6f0d-{{checksum ".buildcache/cache-keys/package-06a1b68c0f891194aed67a555c3d945134db6f0d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 06a1b68c0f891194aed67a555c3d945134db6f0d
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache006-package-a10f9f39a165f743dc0cc67c328e2039b998b49d-{{checksum ".buildcache/cache-keys/package-a10f9f39a165f743dc0cc67c328e2039b998b49d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: a10f9f39a165f743dc0cc67c328e2039b998b49d
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache006-package-2c9855726f28bff82f3f9b7637452cc6de6b7a71-{{checksum ".buildcache/cache-keys/package-2c9855726f28bff82f3f9b7637452cc6de6b7a71"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 2c9855726f28bff82f3f9b7637452cc6de6b7a71
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: ac85b0f898691dab458c03e137efeeaf138d979d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-ac85b0f898691dab458c03e137efeeaf138d979d-{{checksum ".buildcache/cache-keys/package-ac85b0f898691dab458c03e137efeeaf138d979d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_4b5e_{{checksum ".buildcache/cache-keys/copy-source-4b5e3c82f07ccd4e872247b9559ea92fd0dca2e6"}}
        - cache006-warm-go-build-vendor-cache_6662_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-66621d0d8f3ae8645293dffb13247c78b2ce993d"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-ac85b0f898691dab458c03e137efeeaf138d979d-{{checksum ".buildcache/cache-keys/package-ac85b0f898691dab458c03e137efeeaf138d979d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-66621d0d8f3ae8645293dffb13247c78b2ce993d.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-66621d0d8f3ae8645293dffb13247c78b2ce993d-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_6662_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-66621d0d8f3ae8645293dffb13247c78b2ce993d"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-66621d0d8f3ae8645293dffb13247c78b2ce993d.tar.gz
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a10f9f39a165f743dc0cc67c328e2039b998b49d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-a10f9f39a165f743dc0cc67c328e2039b998b49d-{{checksum ".buildcache/cache-keys/package-a10f9f39a165f743dc0cc67c328e2039b998b49d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_bdc5_{{checksum ".buildcache/cache-keys/copy-source-bdc574ec63ac64b9b82ad920c42c78e346714c9f"}}
        - cache006-warm-go-build-vendor-cache_8d41_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-8d41748dd29878b595dfdefb90f3f95b5006c2cc"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-a10f9f39a165f743dc0cc67c328e2039b998b49d-{{checksum ".buildcache/cache-keys/package-a10f9f39a165f743dc0cc67c328e2039b998b49d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-8d41748dd29878b595dfdefb90f3f95b5006c2cc.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-8d41748dd29878b595dfdefb90f3f95b5006c2cc-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_8d41_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-8d41748dd29878b595dfdefb90f3f95b5006c2cc"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-8d41748dd29878b595dfdefb90f3f95b5006c2cc.tar.gz
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132 make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070-image
        name: Build base layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c-image
        name: Build install-go layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7-image
        name: Build install-go-tools layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5-image
        name: Build set-workdir layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 04-install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0-image
        name: Build install-yarn layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 05-ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671-image
        name: Build ui-dependencies layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132-image
        name: Build build-ui layer
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132-save
        name: Export builder image
    - save_cache:
        key: cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        name: Save layer build-ui to cache.
        paths:
        - .buildcache/archives/06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132.tar.gz
    - run:
        command: mv .buildcache/archives/06-build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132.tar.gz .buildcache/archives/05-ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671.tar.gz
        name: Prepare layer ui-dependencies for caching
    - save_cache:
        key: cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        name: Save layer ui-dependencies to cache.
        paths:
        - .buildcache/archives/05-ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671.tar.gz
    - run:
        command: mv .buildcache/archives/05-ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671.tar.gz .buildcache/archives/04-install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0.tar.gz
        name: Prepare layer install-yarn for caching
    - save_cache:
        key: cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        name: Save layer install-yarn to cache.
        paths:
        - .buildcache/archives/04-install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0.tar.gz
    - run:
        command: mv .buildcache/archives/04-install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0.tar.gz .buildcache/archives/03-set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5.tar.gz
        name: Prepare layer set-workdir for caching
    - save_cache:
        key: cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        name: Save layer set-workdir to cache.
        paths:
        - .buildcache/archives/03-set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5.tar.gz
    - run:
        command: mv .buildcache/archives/03-set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5.tar.gz .buildcache/archives/02-install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7.tar.gz
        name: Prepare layer install-go-tools for caching
    - save_cache:
        key: cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        name: Save layer install-go-tools to cache.
        paths:
        - .buildcache/archives/02-install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7.tar.gz
    - run:
        command: mv .buildcache/archives/02-install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7.tar.gz .buildcache/archives/01-install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c.tar.gz
        name: Prepare layer install-go for caching
    - save_cache:
        key: cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        name: Save layer install-go to cache.
        paths:
        - .buildcache/archives/01-install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c.tar.gz
    - run:
        command: mv .buildcache/archives/01-install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c.tar.gz .buildcache/archives/00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070.tar.gz
        name: Prepare layer base for caching
    - save_cache:
        key: cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Save layer base to cache.
        paths:
        - .buildcache/archives/00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: db028467b51809deb079d125e831fd66e901f7e9
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-db028467b51809deb079d125e831fd66e901f7e9-{{checksum ".buildcache/cache-keys/package-db028467b51809deb079d125e831fd66e901f7e9"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_1bf9_{{checksum ".buildcache/cache-keys/copy-source-1bf91667e1e4809d87f1e301026190da6639b7bf"}}
        - cache006-warm-go-build-vendor-cache_0e12_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0e12b7aba95a585257d57623f33884290100eb61"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-db028467b51809deb079d125e831fd66e901f7e9-{{checksum ".buildcache/cache-keys/package-db028467b51809deb079d125e831fd66e901f7e9"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-0e12b7aba95a585257d57623f33884290100eb61.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-0e12b7aba95a585257d57623f33884290100eb61-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_0e12_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0e12b7aba95a585257d57623f33884290100eb61"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-0e12b7aba95a585257d57623f33884290100eb61.tar.gz
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e3ed0b230d0ea063cb07a5b6762bd9b85553b399
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399-{{checksum ".buildcache/cache-keys/package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ee5b_{{checksum ".buildcache/cache-keys/copy-source-ee5b81ecf9782818cb140c2bdad9028d34bb7e7c"}}
        - cache006-warm-go-build-vendor-cache_4eea_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4eeaaee0a9bb5caa799537d7be63123284d656cb"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399-{{checksum ".buildcache/cache-keys/package-e3ed0b230d0ea063cb07a5b6762bd9b85553b399"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-4eeaaee0a9bb5caa799537d7be63123284d656cb.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-4eeaaee0a9bb5caa799537d7be63123284d656cb-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_4eea_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4eeaaee0a9bb5caa799537d7be63123284d656cb"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-4eeaaee0a9bb5caa799537d7be63123284d656cb.tar.gz
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 80a384b6c1f18e6ae41e4ebfd69442a721a40cea
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea-{{checksum ".buildcache/cache-keys/package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_f391_{{checksum ".buildcache/cache-keys/copy-source-f3916fdbed4a7836a7398dc2704a62af46d9436b"}}
        - cache006-warm-go-build-vendor-cache_8102_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-810212e0b33bdaeac9e010355b338b563b35c71b"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea-{{checksum ".buildcache/cache-keys/package-80a384b6c1f18e6ae41e4ebfd69442a721a40cea"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-810212e0b33bdaeac9e010355b338b563b35c71b.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-810212e0b33bdaeac9e010355b338b563b35c71b-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_8102_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-810212e0b33bdaeac9e010355b338b563b35c71b"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-810212e0b33bdaeac9e010355b338b563b35c71b.tar.gz
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5-{{checksum ".buildcache/cache-keys/package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_5811_{{checksum ".buildcache/cache-keys/copy-source-58111dc3c05c4303c26e968dec411bbf6a75fa97"}}
        - cache006-warm-go-build-vendor-cache_3f93_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-3f934210c81e075a8863c88f04c8e25285b26f87"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5-{{checksum ".buildcache/cache-keys/package-e40cb8bf154ca6d2e9f31a7e9e326e8818af83f5"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-3f934210c81e075a8863c88f04c8e25285b26f87.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-3f934210c81e075a8863c88f04c8e25285b26f87-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_3f93_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-3f934210c81e075a8863c88f04c8e25285b26f87"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-3f934210c81e075a8863c88f04c8e25285b26f87.tar.gz
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b730df90d4a19f6fc146615ec49e69f1640f1458
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-b730df90d4a19f6fc146615ec49e69f1640f1458-{{checksum ".buildcache/cache-keys/package-b730df90d4a19f6fc146615ec49e69f1640f1458"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_33ac_{{checksum ".buildcache/cache-keys/copy-source-33ac1d5ff4ed4394f8797d53fcac1cc8fe1c4208"}}
        - cache006-warm-go-build-vendor-cache_95d5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-95d5c3233fdf991f3d4ad8163c916fd6a265203c"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-b730df90d4a19f6fc146615ec49e69f1640f1458-{{checksum ".buildcache/cache-keys/package-b730df90d4a19f6fc146615ec49e69f1640f1458"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-95d5c3233fdf991f3d4ad8163c916fd6a265203c.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-95d5c3233fdf991f3d4ad8163c916fd6a265203c-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_95d5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-95d5c3233fdf991f3d4ad8163c916fd6a265203c"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-95d5c3233fdf991f3d4ad8163c916fd6a265203c.tar.gz
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a1602c2136af03cb02ff741ebb4db084667431d0
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-a1602c2136af03cb02ff741ebb4db084667431d0-{{checksum ".buildcache/cache-keys/package-a1602c2136af03cb02ff741ebb4db084667431d0"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_2922_{{checksum ".buildcache/cache-keys/copy-source-29222959f7e4b144e71f17c26edd212f0924716d"}}
        - cache006-warm-go-build-vendor-cache_de14_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de145f9a5d175fef07e5df9189f170072a8e993f"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-a1602c2136af03cb02ff741ebb4db084667431d0-{{checksum ".buildcache/cache-keys/package-a1602c2136af03cb02ff741ebb4db084667431d0"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-de145f9a5d175fef07e5df9189f170072a8e993f.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-de145f9a5d175fef07e5df9189f170072a8e993f-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_de14_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de145f9a5d175fef07e5df9189f170072a8e993f"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-de145f9a5d175fef07e5df9189f170072a8e993f.tar.gz
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d94bcaeeb36e4905c01d4329b71608ee88a80997
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-d94bcaeeb36e4905c01d4329b71608ee88a80997-{{checksum ".buildcache/cache-keys/package-d94bcaeeb36e4905c01d4329b71608ee88a80997"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_60ef_{{checksum ".buildcache/cache-keys/copy-source-60efd93c142e8bc3177617138dcf9768ef62bb80"}}
        - cache006-warm-go-build-vendor-cache_d955_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d955aefd0852187893d9cdcef3a6daae43053b4d"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-d94bcaeeb36e4905c01d4329b71608ee88a80997-{{checksum ".buildcache/cache-keys/package-d94bcaeeb36e4905c01d4329b71608ee88a80997"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-d955aefd0852187893d9cdcef3a6daae43053b4d.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-d955aefd0852187893d9cdcef3a6daae43053b4d-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_d955_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d955aefd0852187893d9cdcef3a6daae43053b4d"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-d955aefd0852187893d9cdcef3a6daae43053b4d.tar.gz
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 97d6e4b36f95d74b0d953ed50498d41be5daceb4
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-97d6e4b36f95d74b0d953ed50498d41be5daceb4-{{checksum ".buildcache/cache-keys/package-97d6e4b36f95d74b0d953ed50498d41be5daceb4"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_5536_{{checksum ".buildcache/cache-keys/copy-source-5536f3a813c3ce50e65cc293172f774cc29043b7"}}
        - cache006-warm-go-build-vendor-cache_ac7b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-ac7b3102a1606a25c654af0b2b7ca348b024daa9"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-97d6e4b36f95d74b0d953ed50498d41be5daceb4-{{checksum ".buildcache/cache-keys/package-97d6e4b36f95d74b0d953ed50498d41be5daceb4"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-ac7b3102a1606a25c654af0b2b7ca348b024daa9.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-ac7b3102a1606a25c654af0b2b7ca348b024daa9-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_ac7b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-ac7b3102a1606a25c654af0b2b7ca348b024daa9"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-ac7b3102a1606a25c654af0b2b7ca348b024daa9.tar.gz
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 06a1b68c0f891194aed67a555c3d945134db6f0d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-06a1b68c0f891194aed67a555c3d945134db6f0d-{{checksum ".buildcache/cache-keys/package-06a1b68c0f891194aed67a555c3d945134db6f0d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_1d6f_{{checksum ".buildcache/cache-keys/copy-source-1d6f47e9410ecda4ae58561ca79e480f24af908a"}}
        - cache006-warm-go-build-vendor-cache_6221_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62218b6d1b6044f2f8a8cc8ac17611ffa05b1089"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-06a1b68c0f891194aed67a555c3d945134db6f0d-{{checksum ".buildcache/cache-keys/package-06a1b68c0f891194aed67a555c3d945134db6f0d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-62218b6d1b6044f2f8a8cc8ac17611ffa05b1089.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-62218b6d1b6044f2f8a8cc8ac17611ffa05b1089-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_6221_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62218b6d1b6044f2f8a8cc8ac17611ffa05b1089"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-62218b6d1b6044f2f8a8cc8ac17611ffa05b1089.tar.gz
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: dc4c69b05f01affb65efd80b56737f145696c68d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-dc4c69b05f01affb65efd80b56737f145696c68d-{{checksum ".buildcache/cache-keys/package-dc4c69b05f01affb65efd80b56737f145696c68d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_88a2_{{checksum ".buildcache/cache-keys/copy-source-88a226c10d8d001981323452dcfcdfa5be8f1968"}}
        - cache006-warm-go-build-vendor-cache_3233_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-323374cac6ac36b5a6f9abeba89563301abf7a7c"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-dc4c69b05f01affb65efd80b56737f145696c68d-{{checksum ".buildcache/cache-keys/package-dc4c69b05f01affb65efd80b56737f145696c68d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-323374cac6ac36b5a6f9abeba89563301abf7a7c.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-323374cac6ac36b5a6f9abeba89563301abf7a7c-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_3233_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-323374cac6ac36b5a6f9abeba89563301abf7a7c"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-323374cac6ac36b5a6f9abeba89563301abf7a7c.tar.gz
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 174997257733ef1e06b4d3775a27b4410cbf0809
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-174997257733ef1e06b4d3775a27b4410cbf0809-{{checksum ".buildcache/cache-keys/package-174997257733ef1e06b4d3775a27b4410cbf0809"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_5ca9_{{checksum ".buildcache/cache-keys/copy-source-5ca99afc4e8099e8148640dec8d4f5404d9e71a1"}}
        - cache006-warm-go-build-vendor-cache_a50c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-a50c2f17efba81c93a64f8a5c46892fbda4e62d5"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-174997257733ef1e06b4d3775a27b4410cbf0809-{{checksum ".buildcache/cache-keys/package-174997257733ef1e06b4d3775a27b4410cbf0809"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-a50c2f17efba81c93a64f8a5c46892fbda4e62d5.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-a50c2f17efba81c93a64f8a5c46892fbda4e62d5-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_a50c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-a50c2f17efba81c93a64f8a5c46892fbda4e62d5"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-a50c2f17efba81c93a64f8a5c46892fbda4e62d5.tar.gz
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2ad05da49cb0279933cf062277b3cee7f860a652
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-2ad05da49cb0279933cf062277b3cee7f860a652-{{checksum ".buildcache/cache-keys/package-2ad05da49cb0279933cf062277b3cee7f860a652"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_33c9_{{checksum ".buildcache/cache-keys/copy-source-33c93025e7e8069313d34385b9cb70da988aeb02"}}
        - cache006-warm-go-build-vendor-cache_8bbe_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-8bbe9ec1c90b0b436610a3ec92eb70a976edeca9"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-2ad05da49cb0279933cf062277b3cee7f860a652-{{checksum ".buildcache/cache-keys/package-2ad05da49cb0279933cf062277b3cee7f860a652"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-8bbe9ec1c90b0b436610a3ec92eb70a976edeca9.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-8bbe9ec1c90b0b436610a3ec92eb70a976edeca9-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_8bbe_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-8bbe9ec1c90b0b436610a3ec92eb70a976edeca9"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-8bbe9ec1c90b0b436610a3ec92eb70a976edeca9.tar.gz
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981-{{checksum ".buildcache/cache-keys/package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_a0ca_{{checksum ".buildcache/cache-keys/copy-source-a0ca51a6a974734f17e4321bbeb7e21ef910925e"}}
        - cache006-warm-go-build-vendor-cache_e5d2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e5d226794c5380ee9f48a3b21c4f90b1ac5bd69f"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981-{{checksum ".buildcache/cache-keys/package-9ac4ce6f8c1c12c94cd99fbd42eb14783bd8c981"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-e5d226794c5380ee9f48a3b21c4f90b1ac5bd69f.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-e5d226794c5380ee9f48a3b21c4f90b1ac5bd69f-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_e5d2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e5d226794c5380ee9f48a3b21c4f90b1ac5bd69f"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-e5d226794c5380ee9f48a3b21c4f90b1ac5bd69f.tar.gz
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2c9855726f28bff82f3f9b7637452cc6de6b7a71
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-2c9855726f28bff82f3f9b7637452cc6de6b7a71-{{checksum ".buildcache/cache-keys/package-2c9855726f28bff82f3f9b7637452cc6de6b7a71"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_e7f0_{{checksum ".buildcache/cache-keys/copy-source-e7f03a84794d50544a9493ab757480836f3c5f45"}}
        - cache006-warm-go-build-vendor-cache_eccd_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-eccdafd09edfd9d33ed474a4ba8103e85877d755"}}
        - cache006-build-static-assets_72c2_{{checksum ".buildcache/cache-keys/build-static-assets-72c24b0c49867d1d629392ee9011d4a18b77b543"}}
        - cache006-build-ui_b186_{{checksum ".buildcache/cache-keys/build-ui-b186f8fb26b343e5a40b1aa87eba17df69364132"}}
        - cache006-ui-dependencies_a908_{{checksum ".buildcache/cache-keys/ui-dependencies-a908f25133e870fb8d17f93b60c519fa3a074671"}}
        - cache006-install-yarn_1ae5_{{checksum ".buildcache/cache-keys/install-yarn-1ae52e17d9c85a264fcaee5da7ee7d7cc78628b0"}}
        - cache006-set-workdir_f3b8_{{checksum ".buildcache/cache-keys/set-workdir-f3b8fd92935eb1204dfd1ea0f0ad6bfcd0d1e2c5"}}
        - cache006-install-go-tools_59fc_{{checksum ".buildcache/cache-keys/install-go-tools-59fc0fb051ef81e18565d2b5fc56c4e978b55fe7"}}
        - cache006-install-go_fe40_{{checksum ".buildcache/cache-keys/install-go-fe400c43f659aa0b15b17df8e56ccfff74e37a3c"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-2c9855726f28bff82f3f9b7637452cc6de6b7a71-{{checksum ".buildcache/cache-keys/package-2c9855726f28bff82f3f9b7637452cc6de6b7a71"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-eccdafd09edfd9d33ed474a4ba8103e85877d755.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-eccdafd09edfd9d33ed474a4ba8103e85877d755-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_eccd_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-eccdafd09edfd9d33ed474a4ba8103e85877d755"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-eccdafd09edfd9d33ed474a4ba8103e85877d755.tar.gz
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_386_package:
        requires:
        - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
