### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache006-package-97aaeffaea8afa54009c990666b5a037fe723756-{{checksum ".buildcache/cache-keys/package-97aaeffaea8afa54009c990666b5a037fe723756"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 97aaeffaea8afa54009c990666b5a037fe723756
        name: Write package metadata for darwin_386_package
    - restore_cache:
        key: cache006-package-626797b10fe151c0d3f369428a02faf4968e201d-{{checksum ".buildcache/cache-keys/package-626797b10fe151c0d3f369428a02faf4968e201d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 626797b10fe151c0d3f369428a02faf4968e201d
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache006-package-fc22138fc6179eaf469096ce6868a072acef1558-{{checksum ".buildcache/cache-keys/package-fc22138fc6179eaf469096ce6868a072acef1558"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: fc22138fc6179eaf469096ce6868a072acef1558
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache006-package-cd84134e7a100b09517c23d724af91f3f05a555e-{{checksum ".buildcache/cache-keys/package-cd84134e7a100b09517c23d724af91f3f05a555e"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: cd84134e7a100b09517c23d724af91f3f05a555e
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache006-package-459d67ee93174313d2bd707b98a42f8fa7ea1436-{{checksum ".buildcache/cache-keys/package-459d67ee93174313d2bd707b98a42f8fa7ea1436"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 459d67ee93174313d2bd707b98a42f8fa7ea1436
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache006-package-4f16ba48bb891d7a16287dbf9c1e55166daf1353-{{checksum ".buildcache/cache-keys/package-4f16ba48bb891d7a16287dbf9c1e55166daf1353"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 4f16ba48bb891d7a16287dbf9c1e55166daf1353
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache006-package-585f12d08eba4814d550507243f16fed548cd331-{{checksum ".buildcache/cache-keys/package-585f12d08eba4814d550507243f16fed548cd331"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 585f12d08eba4814d550507243f16fed548cd331
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache006-package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c-{{checksum ".buildcache/cache-keys/package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache006-package-ba2a7f32157da632e33d04c135ac913bfbf97674-{{checksum ".buildcache/cache-keys/package-ba2a7f32157da632e33d04c135ac913bfbf97674"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: ba2a7f32157da632e33d04c135ac913bfbf97674
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache006-package-acf66993b351b71b75abf628f59b6a0adbe35735-{{checksum ".buildcache/cache-keys/package-acf66993b351b71b75abf628f59b6a0adbe35735"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: acf66993b351b71b75abf628f59b6a0adbe35735
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache006-package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02-{{checksum ".buildcache/cache-keys/package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 7e4620a07ccb519431ab4fb676c2b35b4cc05a02
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache006-package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1-{{checksum ".buildcache/cache-keys/package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: bb2f2753373540cbf697c5d4a65bf3bfa92369d1
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache006-package-5011002475730ea163f1f0c477cc9470a25c1476-{{checksum ".buildcache/cache-keys/package-5011002475730ea163f1f0c477cc9470a25c1476"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 5011002475730ea163f1f0c477cc9470a25c1476
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache006-package-bbd093527e1d2b56d52f33defc209ec31a9a7b89-{{checksum ".buildcache/cache-keys/package-bbd093527e1d2b56d52f33defc209ec31a9a7b89"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: bbd093527e1d2b56d52f33defc209ec31a9a7b89
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache006-package-96a331405d5fb5a226e40c1de9be7fe56a00827c-{{checksum ".buildcache/cache-keys/package-96a331405d5fb5a226e40c1de9be7fe56a00827c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 96a331405d5fb5a226e40c1de9be7fe56a00827c
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache006-package-0bc21a7b8490f22c6f773a262f3a86313c7d5098-{{checksum ".buildcache/cache-keys/package-0bc21a7b8490f22c6f773a262f3a86313c7d5098"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 0bc21a7b8490f22c6f773a262f3a86313c7d5098
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 626797b10fe151c0d3f369428a02faf4968e201d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-626797b10fe151c0d3f369428a02faf4968e201d-{{checksum ".buildcache/cache-keys/package-626797b10fe151c0d3f369428a02faf4968e201d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_b663_{{checksum ".buildcache/cache-keys/copy-source-b663d808410161e2659dda0b3be295907c806bf1"}}
        - cache006-warm-go-build-vendor-cache_05bf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-05bfcc7c77c0f045fac4dd8e6f26ffc83a32eca8"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-626797b10fe151c0d3f369428a02faf4968e201d-{{checksum ".buildcache/cache-keys/package-626797b10fe151c0d3f369428a02faf4968e201d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-05bfcc7c77c0f045fac4dd8e6f26ffc83a32eca8.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-05bfcc7c77c0f045fac4dd8e6f26ffc83a32eca8-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_05bf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-05bfcc7c77c0f045fac4dd8e6f26ffc83a32eca8"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-05bfcc7c77c0f045fac4dd8e6f26ffc83a32eca8.tar.gz
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 96a331405d5fb5a226e40c1de9be7fe56a00827c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-96a331405d5fb5a226e40c1de9be7fe56a00827c-{{checksum ".buildcache/cache-keys/package-96a331405d5fb5a226e40c1de9be7fe56a00827c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_25b1_{{checksum ".buildcache/cache-keys/copy-source-25b1fd990feef6be36f9c2dd4b747fbabfcb5e23"}}
        - cache006-warm-go-build-vendor-cache_279d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-279d3f4a473cbc6fa30e24669bc7f7704868fd79"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-96a331405d5fb5a226e40c1de9be7fe56a00827c-{{checksum ".buildcache/cache-keys/package-96a331405d5fb5a226e40c1de9be7fe56a00827c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-279d3f4a473cbc6fa30e24669bc7f7704868fd79.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-279d3f4a473cbc6fa30e24669bc7f7704868fd79-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_279d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-279d3f4a473cbc6fa30e24669bc7f7704868fd79"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-279d3f4a473cbc6fa30e24669bc7f7704868fd79.tar.gz
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070-image
        name: Build base layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd-image
        name: Build install-go layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190-image
        name: Build install-go-tools layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf-image
        name: Build set-workdir layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 04-install-yarn-f21d45f72739fd438135a98de997583b80be9d7c-image
        name: Build install-yarn layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 05-ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc-image
        name: Build ui-dependencies layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db-image
        name: Build build-ui layer
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db-save
        name: Export builder image
    - save_cache:
        key: cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        name: Save layer build-ui to cache.
        paths:
        - .buildcache/archives/06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db.tar.gz
    - run:
        command: mv .buildcache/archives/06-build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db.tar.gz .buildcache/archives/05-ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc.tar.gz
        name: Prepare layer ui-dependencies for caching
    - save_cache:
        key: cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        name: Save layer ui-dependencies to cache.
        paths:
        - .buildcache/archives/05-ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc.tar.gz
    - run:
        command: mv .buildcache/archives/05-ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc.tar.gz .buildcache/archives/04-install-yarn-f21d45f72739fd438135a98de997583b80be9d7c.tar.gz
        name: Prepare layer install-yarn for caching
    - save_cache:
        key: cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        name: Save layer install-yarn to cache.
        paths:
        - .buildcache/archives/04-install-yarn-f21d45f72739fd438135a98de997583b80be9d7c.tar.gz
    - run:
        command: mv .buildcache/archives/04-install-yarn-f21d45f72739fd438135a98de997583b80be9d7c.tar.gz .buildcache/archives/03-set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf.tar.gz
        name: Prepare layer set-workdir for caching
    - save_cache:
        key: cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        name: Save layer set-workdir to cache.
        paths:
        - .buildcache/archives/03-set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf.tar.gz
    - run:
        command: mv .buildcache/archives/03-set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf.tar.gz .buildcache/archives/02-install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190.tar.gz
        name: Prepare layer install-go-tools for caching
    - save_cache:
        key: cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        name: Save layer install-go-tools to cache.
        paths:
        - .buildcache/archives/02-install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190.tar.gz
    - run:
        command: mv .buildcache/archives/02-install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190.tar.gz .buildcache/archives/01-install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd.tar.gz
        name: Prepare layer install-go for caching
    - save_cache:
        key: cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        name: Save layer install-go to cache.
        paths:
        - .buildcache/archives/01-install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd.tar.gz
    - run:
        command: mv .buildcache/archives/01-install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd.tar.gz .buildcache/archives/00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070.tar.gz
        name: Prepare layer base for caching
    - save_cache:
        key: cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Save layer base to cache.
        paths:
        - .buildcache/archives/00-base-cd50335c2217aa98d45d50d7ef941dfd1289b070.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: ba2a7f32157da632e33d04c135ac913bfbf97674
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-ba2a7f32157da632e33d04c135ac913bfbf97674-{{checksum ".buildcache/cache-keys/package-ba2a7f32157da632e33d04c135ac913bfbf97674"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_1f54_{{checksum ".buildcache/cache-keys/copy-source-1f540c010da1289d18e62fdbb6dc4229ea476865"}}
        - cache006-warm-go-build-vendor-cache_f663_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f663d0f37a7935c773d054999d6ee788f0e41eb3"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-ba2a7f32157da632e33d04c135ac913bfbf97674-{{checksum ".buildcache/cache-keys/package-ba2a7f32157da632e33d04c135ac913bfbf97674"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-f663d0f37a7935c773d054999d6ee788f0e41eb3.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-f663d0f37a7935c773d054999d6ee788f0e41eb3-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_f663_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f663d0f37a7935c773d054999d6ee788f0e41eb3"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-f663d0f37a7935c773d054999d6ee788f0e41eb3.tar.gz
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c-{{checksum ".buildcache/cache-keys/package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_d13e_{{checksum ".buildcache/cache-keys/copy-source-d13e5cd520598560c414f753adf460a5748443ef"}}
        - cache006-warm-go-build-vendor-cache_523a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-523a124b34fc376ae4bc28f3a40ebb4f95d1adc3"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c-{{checksum ".buildcache/cache-keys/package-8d5aed5a7e9bd53d573c34a4eda8dfa2f8506f7c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-523a124b34fc376ae4bc28f3a40ebb4f95d1adc3.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-523a124b34fc376ae4bc28f3a40ebb4f95d1adc3-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_523a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-523a124b34fc376ae4bc28f3a40ebb4f95d1adc3"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-523a124b34fc376ae4bc28f3a40ebb4f95d1adc3.tar.gz
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 97aaeffaea8afa54009c990666b5a037fe723756
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-97aaeffaea8afa54009c990666b5a037fe723756-{{checksum ".buildcache/cache-keys/package-97aaeffaea8afa54009c990666b5a037fe723756"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_5728_{{checksum ".buildcache/cache-keys/copy-source-57284b6df58410eba194e36cd372c447b4844257"}}
        - cache006-warm-go-build-vendor-cache_58d8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-58d87ebcf08421372fe32141940f45d44943ab5d"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-97aaeffaea8afa54009c990666b5a037fe723756-{{checksum ".buildcache/cache-keys/package-97aaeffaea8afa54009c990666b5a037fe723756"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-58d87ebcf08421372fe32141940f45d44943ab5d.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-58d87ebcf08421372fe32141940f45d44943ab5d-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_58d8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-58d87ebcf08421372fe32141940f45d44943ab5d"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-58d87ebcf08421372fe32141940f45d44943ab5d.tar.gz
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 4f16ba48bb891d7a16287dbf9c1e55166daf1353
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-4f16ba48bb891d7a16287dbf9c1e55166daf1353-{{checksum ".buildcache/cache-keys/package-4f16ba48bb891d7a16287dbf9c1e55166daf1353"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_1203_{{checksum ".buildcache/cache-keys/copy-source-120315208379113e6da1e4bb9aa7e61e425036bb"}}
        - cache006-warm-go-build-vendor-cache_310b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-310b1e9dd9993b09294ddf6a27024bab43172c16"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-4f16ba48bb891d7a16287dbf9c1e55166daf1353-{{checksum ".buildcache/cache-keys/package-4f16ba48bb891d7a16287dbf9c1e55166daf1353"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-310b1e9dd9993b09294ddf6a27024bab43172c16.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-310b1e9dd9993b09294ddf6a27024bab43172c16-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_310b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-310b1e9dd9993b09294ddf6a27024bab43172c16"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-310b1e9dd9993b09294ddf6a27024bab43172c16.tar.gz
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: fc22138fc6179eaf469096ce6868a072acef1558
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-fc22138fc6179eaf469096ce6868a072acef1558-{{checksum ".buildcache/cache-keys/package-fc22138fc6179eaf469096ce6868a072acef1558"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_70af_{{checksum ".buildcache/cache-keys/copy-source-70af88c24b207c2af2ac3aac5de08fdb7e8abcc1"}}
        - cache006-warm-go-build-vendor-cache_97f0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-97f0441811346aa761c5d6f900f195dc53b60411"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-fc22138fc6179eaf469096ce6868a072acef1558-{{checksum ".buildcache/cache-keys/package-fc22138fc6179eaf469096ce6868a072acef1558"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-97f0441811346aa761c5d6f900f195dc53b60411.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-97f0441811346aa761c5d6f900f195dc53b60411-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_97f0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-97f0441811346aa761c5d6f900f195dc53b60411"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-97f0441811346aa761c5d6f900f195dc53b60411.tar.gz
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: cd84134e7a100b09517c23d724af91f3f05a555e
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-cd84134e7a100b09517c23d724af91f3f05a555e-{{checksum ".buildcache/cache-keys/package-cd84134e7a100b09517c23d724af91f3f05a555e"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_6076_{{checksum ".buildcache/cache-keys/copy-source-6076425aa47c35f7c3f320d4341ecf1300391558"}}
        - cache006-warm-go-build-vendor-cache_c12d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c12d82b773c359728e731307c6a92fee29234be6"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-cd84134e7a100b09517c23d724af91f3f05a555e-{{checksum ".buildcache/cache-keys/package-cd84134e7a100b09517c23d724af91f3f05a555e"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-c12d82b773c359728e731307c6a92fee29234be6.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-c12d82b773c359728e731307c6a92fee29234be6-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_c12d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c12d82b773c359728e731307c6a92fee29234be6"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-c12d82b773c359728e731307c6a92fee29234be6.tar.gz
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: bb2f2753373540cbf697c5d4a65bf3bfa92369d1
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1-{{checksum ".buildcache/cache-keys/package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_fee1_{{checksum ".buildcache/cache-keys/copy-source-fee131f12ccf283ef03673417563d99475d94af5"}}
        - cache006-warm-go-build-vendor-cache_1db5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1db56753f53198213519c8216ba96a6016f3ef44"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1-{{checksum ".buildcache/cache-keys/package-bb2f2753373540cbf697c5d4a65bf3bfa92369d1"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-1db56753f53198213519c8216ba96a6016f3ef44.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-1db56753f53198213519c8216ba96a6016f3ef44-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_1db5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1db56753f53198213519c8216ba96a6016f3ef44"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-1db56753f53198213519c8216ba96a6016f3ef44.tar.gz
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 585f12d08eba4814d550507243f16fed548cd331
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-585f12d08eba4814d550507243f16fed548cd331-{{checksum ".buildcache/cache-keys/package-585f12d08eba4814d550507243f16fed548cd331"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_4447_{{checksum ".buildcache/cache-keys/copy-source-444740c18c6ab0689806e8aadf018959cfce4885"}}
        - cache006-warm-go-build-vendor-cache_6073_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-607337f170964a0c5046492ee6740ba0500b00ce"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-585f12d08eba4814d550507243f16fed548cd331-{{checksum ".buildcache/cache-keys/package-585f12d08eba4814d550507243f16fed548cd331"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-607337f170964a0c5046492ee6740ba0500b00ce.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-607337f170964a0c5046492ee6740ba0500b00ce-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_6073_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-607337f170964a0c5046492ee6740ba0500b00ce"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-607337f170964a0c5046492ee6740ba0500b00ce.tar.gz
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: bbd093527e1d2b56d52f33defc209ec31a9a7b89
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-bbd093527e1d2b56d52f33defc209ec31a9a7b89-{{checksum ".buildcache/cache-keys/package-bbd093527e1d2b56d52f33defc209ec31a9a7b89"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_2e07_{{checksum ".buildcache/cache-keys/copy-source-2e074b265dd6d3679bffa2d284441f1e4a2a00ed"}}
        - cache006-warm-go-build-vendor-cache_7bb5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7bb5db5a356cacbd39171bc564f46f20c010c340"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-bbd093527e1d2b56d52f33defc209ec31a9a7b89-{{checksum ".buildcache/cache-keys/package-bbd093527e1d2b56d52f33defc209ec31a9a7b89"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-7bb5db5a356cacbd39171bc564f46f20c010c340.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-7bb5db5a356cacbd39171bc564f46f20c010c340-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_7bb5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7bb5db5a356cacbd39171bc564f46f20c010c340"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-7bb5db5a356cacbd39171bc564f46f20c010c340.tar.gz
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 7e4620a07ccb519431ab4fb676c2b35b4cc05a02
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02-{{checksum ".buildcache/cache-keys/package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_7930_{{checksum ".buildcache/cache-keys/copy-source-7930139b4e26e452faeef0d96967785a70e67997"}}
        - cache006-warm-go-build-vendor-cache_5f73_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5f73f8631d81622577cc9b5d3cc0c9a594da77bd"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02-{{checksum ".buildcache/cache-keys/package-7e4620a07ccb519431ab4fb676c2b35b4cc05a02"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-5f73f8631d81622577cc9b5d3cc0c9a594da77bd.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-5f73f8631d81622577cc9b5d3cc0c9a594da77bd-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_5f73_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5f73f8631d81622577cc9b5d3cc0c9a594da77bd"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-5f73f8631d81622577cc9b5d3cc0c9a594da77bd.tar.gz
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 5011002475730ea163f1f0c477cc9470a25c1476
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-5011002475730ea163f1f0c477cc9470a25c1476-{{checksum ".buildcache/cache-keys/package-5011002475730ea163f1f0c477cc9470a25c1476"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ee4a_{{checksum ".buildcache/cache-keys/copy-source-ee4a5401ad7d322b449e4dc73f1b9052d50d3dd4"}}
        - cache006-warm-go-build-vendor-cache_d861_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d861eefd19c3674265ae30e507fa00420579fecc"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-5011002475730ea163f1f0c477cc9470a25c1476-{{checksum ".buildcache/cache-keys/package-5011002475730ea163f1f0c477cc9470a25c1476"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-d861eefd19c3674265ae30e507fa00420579fecc.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-d861eefd19c3674265ae30e507fa00420579fecc-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_d861_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d861eefd19c3674265ae30e507fa00420579fecc"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-d861eefd19c3674265ae30e507fa00420579fecc.tar.gz
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: acf66993b351b71b75abf628f59b6a0adbe35735
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-acf66993b351b71b75abf628f59b6a0adbe35735-{{checksum ".buildcache/cache-keys/package-acf66993b351b71b75abf628f59b6a0adbe35735"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_438f_{{checksum ".buildcache/cache-keys/copy-source-438f6069dc3e25b0f3f64cdbf69d00774e292437"}}
        - cache006-warm-go-build-vendor-cache_dcc0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-dcc0e9faaba43e794f26faaba5188647b14dfd91"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-acf66993b351b71b75abf628f59b6a0adbe35735-{{checksum ".buildcache/cache-keys/package-acf66993b351b71b75abf628f59b6a0adbe35735"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-dcc0e9faaba43e794f26faaba5188647b14dfd91.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-dcc0e9faaba43e794f26faaba5188647b14dfd91-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_dcc0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-dcc0e9faaba43e794f26faaba5188647b14dfd91"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-dcc0e9faaba43e794f26faaba5188647b14dfd91.tar.gz
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 459d67ee93174313d2bd707b98a42f8fa7ea1436
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-459d67ee93174313d2bd707b98a42f8fa7ea1436-{{checksum ".buildcache/cache-keys/package-459d67ee93174313d2bd707b98a42f8fa7ea1436"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_0699_{{checksum ".buildcache/cache-keys/copy-source-0699e4eb73502bd30438035ede5a7813d5b69938"}}
        - cache006-warm-go-build-vendor-cache_2be6_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2be6938f0779b9b0eae123b3f529d82d4b02278f"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-459d67ee93174313d2bd707b98a42f8fa7ea1436-{{checksum ".buildcache/cache-keys/package-459d67ee93174313d2bd707b98a42f8fa7ea1436"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-2be6938f0779b9b0eae123b3f529d82d4b02278f.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-2be6938f0779b9b0eae123b3f529d82d4b02278f-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_2be6_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2be6938f0779b9b0eae123b3f529d82d4b02278f"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-2be6938f0779b9b0eae123b3f529d82d4b02278f.tar.gz
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 0bc21a7b8490f22c6f773a262f3a86313c7d5098
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-0bc21a7b8490f22c6f773a262f3a86313c7d5098-{{checksum ".buildcache/cache-keys/package-0bc21a7b8490f22c6f773a262f3a86313c7d5098"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_1d61_{{checksum ".buildcache/cache-keys/copy-source-1d6121253590bbd17d0c75bd6451a556d8b132a8"}}
        - cache006-warm-go-build-vendor-cache_66a2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-66a2ae749375a717fb618533c83f901e01e29c3c"}}
        - cache006-build-static-assets_b653_{{checksum ".buildcache/cache-keys/build-static-assets-b6533a1816310fd18b62a0436d71f31db0824d4c"}}
        - cache006-build-ui_7390_{{checksum ".buildcache/cache-keys/build-ui-7390b42012f8b04bdd52e5b249ac71037e5535db"}}
        - cache006-ui-dependencies_7e13_{{checksum ".buildcache/cache-keys/ui-dependencies-7e13d62507af6ef9f11586449eb6176165d8eacc"}}
        - cache006-install-yarn_f21d_{{checksum ".buildcache/cache-keys/install-yarn-f21d45f72739fd438135a98de997583b80be9d7c"}}
        - cache006-set-workdir_a7ed_{{checksum ".buildcache/cache-keys/set-workdir-a7edd1d4e3987632f4d2287152c1e251f8b666cf"}}
        - cache006-install-go-tools_a445_{{checksum ".buildcache/cache-keys/install-go-tools-a445de2705cde1a205ad25da7d9705ccac1b8190"}}
        - cache006-install-go_6fd4_{{checksum ".buildcache/cache-keys/install-go-6fd4ceee133507fef05c61a90524e5d6bceb0ecd"}}
        - cache006-base_cd50_{{checksum ".buildcache/cache-keys/base-cd50335c2217aa98d45d50d7ef941dfd1289b070"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-0bc21a7b8490f22c6f773a262f3a86313c7d5098-{{checksum ".buildcache/cache-keys/package-0bc21a7b8490f22c6f773a262f3a86313c7d5098"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-66a2ae749375a717fb618533c83f901e01e29c3c.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-66a2ae749375a717fb618533c83f901e01e29c3c-save
        name: Prepare build layers for caching
    - save_cache:
        key: cache006-warm-go-build-vendor-cache_66a2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-66a2ae749375a717fb618533c83f901e01e29c3c"}}
        name: Save build layer cache
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-66a2ae749375a717fb618533c83f901e01e29c3c.tar.gz
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_386_package:
        requires:
        - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
