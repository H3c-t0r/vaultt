### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - run:
        command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
        name: Ignore .buildcache
    - restore_cache:
        key: package-507bba21718c72d617b2e7bcabdc22398549291a-{{checksum ".buildcache/cache-keys/package-507bba21718c72d617b2e7bcabdc22398549291a"}}
        name: Restore package cache
    - restore_cache:
        key: package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a-{{checksum ".buildcache/cache-keys/package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a"}}
        name: Restore package cache
    - restore_cache:
        key: package-b334458a06a1710a56347e8c6a2e5027c97547b3-{{checksum ".buildcache/cache-keys/package-b334458a06a1710a56347e8c6a2e5027c97547b3"}}
        name: Restore package cache
    - restore_cache:
        key: package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61-{{checksum ".buildcache/cache-keys/package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61"}}
        name: Restore package cache
    - restore_cache:
        key: package-b16b03bf92c2b1f57f807566e1933bd3b2930f35-{{checksum ".buildcache/cache-keys/package-b16b03bf92c2b1f57f807566e1933bd3b2930f35"}}
        name: Restore package cache
    - restore_cache:
        key: package-e1ededb224865be0eabc10cf31a247d790845b94-{{checksum ".buildcache/cache-keys/package-e1ededb224865be0eabc10cf31a247d790845b94"}}
        name: Restore package cache
    - restore_cache:
        key: package-82e61cba9f167f8bb16f397ea643d145282aefc4-{{checksum ".buildcache/cache-keys/package-82e61cba9f167f8bb16f397ea643d145282aefc4"}}
        name: Restore package cache
    - restore_cache:
        key: package-144b00da15b627b9eb009de1b292e4b0f44c26a4-{{checksum ".buildcache/cache-keys/package-144b00da15b627b9eb009de1b292e4b0f44c26a4"}}
        name: Restore package cache
    - restore_cache:
        key: package-816489802c2fb2468798b74c8896916b3b32bda9-{{checksum ".buildcache/cache-keys/package-816489802c2fb2468798b74c8896916b3b32bda9"}}
        name: Restore package cache
    - restore_cache:
        key: package-20b32139ea1264e69518e40dbb18f1731c18683c-{{checksum ".buildcache/cache-keys/package-20b32139ea1264e69518e40dbb18f1731c18683c"}}
        name: Restore package cache
    - restore_cache:
        key: package-289a49a3cc364d7b1138fc7b718c9f2105383795-{{checksum ".buildcache/cache-keys/package-289a49a3cc364d7b1138fc7b718c9f2105383795"}}
        name: Restore package cache
    - restore_cache:
        key: package-1e6b205c98b1f2e59ff14d59b222173254552aef-{{checksum ".buildcache/cache-keys/package-1e6b205c98b1f2e59ff14d59b222173254552aef"}}
        name: Restore package cache
    - restore_cache:
        key: package-5512fcfef16b1de3a527aba79c434c31e74e127e-{{checksum ".buildcache/cache-keys/package-5512fcfef16b1de3a527aba79c434c31e74e127e"}}
        name: Restore package cache
    - restore_cache:
        key: package-6b23b9cc2b387574570a5afcd541093d4a5288d1-{{checksum ".buildcache/cache-keys/package-6b23b9cc2b387574570a5afcd541093d4a5288d1"}}
        name: Restore package cache
    - restore_cache:
        key: package-a173fdc7065e748133e227cc2a415c1d73aa45ef-{{checksum ".buildcache/cache-keys/package-a173fdc7065e748133e227cc2a415c1d73aa45ef"}}
        name: Restore package cache
    - restore_cache:
        key: package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364-{{checksum ".buildcache/cache-keys/package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364"}}
        name: Restore package cache
    - run:
        command: make package-meta-all
        name: Write Package Metadata
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-384e6ec2189925a3.yml
        name: Update Lockfile Name
    - run:
        command: tar -czf packages-384e6ec2189925a3.tar.gz .buildcache/packages lockfile-384e6ec2189925a3.yml
        name: Create Raw Package Tarball
    - run:
        command: tar -czf meta-384e6ec2189925a3.tar.gz .buildcache/packages/store/*.json lockfile-384e6ec2189925a3.yml
        name: Create Metadata Tarball
    - store_artifacts:
        path: lockfile-384e6ec2189925a3.yml
    - store_artifacts:
        path: packages-384e6ec2189925a3.tar.gz
    - store_artifacts:
        path: meta-384e6ec2189925a3.tar.gz
    - store_artifacts:
        path: .buildcache/packages
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b7130586c2dd2b37a18c4b217437e0ecbdf8160a
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a-{{checksum ".buildcache/cache-keys/package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a-{{checksum ".buildcache/cache-keys/package-b7130586c2dd2b37a18c4b217437e0ecbdf8160a"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  windows_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a173fdc7065e748133e227cc2a415c1d73aa45ef
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-a173fdc7065e748133e227cc2a415c1d73aa45ef-{{checksum ".buildcache/cache-keys/package-a173fdc7065e748133e227cc2a415c1d73aa45ef"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-a173fdc7065e748133e227cc2a415c1d73aa45ef-{{checksum ".buildcache/cache-keys/package-a173fdc7065e748133e227cc2a415c1d73aa45ef"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  install-ui-dependencies:
    docker:
    - image: docker.mirror.hashicorp.services/node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        keys:
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Layer Cache: build-ui'
    - run:
        command: LAYER_SPEC_ID=06-build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
        name: Build base layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-install-go-7aa9c11556809c9c041da8359c1529272e7fc830-image
        name: Build install-go layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2-image
        name: Build install-go-tools layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52-image
        name: Build set-workdir layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 04-install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39-image
        name: Build install-yarn layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 05-ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe-image
        name: Build ui-dependencies layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 06-build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e-image
        name: Build build-ui layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 06-build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e-save
        name: Build build-ui layer
    - save_cache:
        key: build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        name: 'Save Layer Cache: build-ui'
        paths:
        - .buildcache/archives/06-build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 816489802c2fb2468798b74c8896916b3b32bda9
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-816489802c2fb2468798b74c8896916b3b32bda9-{{checksum ".buildcache/cache-keys/package-816489802c2fb2468798b74c8896916b3b32bda9"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-816489802c2fb2468798b74c8896916b3b32bda9-{{checksum ".buildcache/cache-keys/package-816489802c2fb2468798b74c8896916b3b32bda9"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  test-ui:
    docker:
    - image: docker.mirror.hashicorp.services/node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 144b00da15b627b9eb009de1b292e4b0f44c26a4
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-144b00da15b627b9eb009de1b292e4b0f44c26a4-{{checksum ".buildcache/cache-keys/package-144b00da15b627b9eb009de1b292e4b0f44c26a4"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-144b00da15b627b9eb009de1b292e4b0f44c26a4-{{checksum ".buildcache/cache-keys/package-144b00da15b627b9eb009de1b292e4b0f44c26a4"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  test-ui-browserstack:
    docker:
    - image: docker.mirror.hashicorp.services/node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 507bba21718c72d617b2e7bcabdc22398549291a
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-507bba21718c72d617b2e7bcabdc22398549291a-{{checksum ".buildcache/cache-keys/package-507bba21718c72d617b2e7bcabdc22398549291a"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-507bba21718c72d617b2e7bcabdc22398549291a-{{checksum ".buildcache/cache-keys/package-507bba21718c72d617b2e7bcabdc22398549291a"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e1ededb224865be0eabc10cf31a247d790845b94
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-e1ededb224865be0eabc10cf31a247d790845b94-{{checksum ".buildcache/cache-keys/package-e1ededb224865be0eabc10cf31a247d790845b94"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-e1ededb224865be0eabc10cf31a247d790845b94-{{checksum ".buildcache/cache-keys/package-e1ededb224865be0eabc10cf31a247d790845b94"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  freebsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b334458a06a1710a56347e8c6a2e5027c97547b3
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-b334458a06a1710a56347e8c6a2e5027c97547b3-{{checksum ".buildcache/cache-keys/package-b334458a06a1710a56347e8c6a2e5027c97547b3"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-b334458a06a1710a56347e8c6a2e5027c97547b3-{{checksum ".buildcache/cache-keys/package-b334458a06a1710a56347e8c6a2e5027c97547b3"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61-{{checksum ".buildcache/cache-keys/package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61-{{checksum ".buildcache/cache-keys/package-a2d5a92cd0dc4e780b6342f5f490b64b4f80ad61"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  openbsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 1e6b205c98b1f2e59ff14d59b222173254552aef
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-1e6b205c98b1f2e59ff14d59b222173254552aef-{{checksum ".buildcache/cache-keys/package-1e6b205c98b1f2e59ff14d59b222173254552aef"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-1e6b205c98b1f2e59ff14d59b222173254552aef-{{checksum ".buildcache/cache-keys/package-1e6b205c98b1f2e59ff14d59b222173254552aef"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 82e61cba9f167f8bb16f397ea643d145282aefc4
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-82e61cba9f167f8bb16f397ea643d145282aefc4-{{checksum ".buildcache/cache-keys/package-82e61cba9f167f8bb16f397ea643d145282aefc4"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-82e61cba9f167f8bb16f397ea643d145282aefc4-{{checksum ".buildcache/cache-keys/package-82e61cba9f167f8bb16f397ea643d145282aefc4"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 6b23b9cc2b387574570a5afcd541093d4a5288d1
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-6b23b9cc2b387574570a5afcd541093d4a5288d1-{{checksum ".buildcache/cache-keys/package-6b23b9cc2b387574570a5afcd541093d4a5288d1"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-6b23b9cc2b387574570a5afcd541093d4a5288d1-{{checksum ".buildcache/cache-keys/package-6b23b9cc2b387574570a5afcd541093d4a5288d1"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 289a49a3cc364d7b1138fc7b718c9f2105383795
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-289a49a3cc364d7b1138fc7b718c9f2105383795-{{checksum ".buildcache/cache-keys/package-289a49a3cc364d7b1138fc7b718c9f2105383795"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-289a49a3cc364d7b1138fc7b718c9f2105383795-{{checksum ".buildcache/cache-keys/package-289a49a3cc364d7b1138fc7b718c9f2105383795"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  openbsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 5512fcfef16b1de3a527aba79c434c31e74e127e
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-5512fcfef16b1de3a527aba79c434c31e74e127e-{{checksum ".buildcache/cache-keys/package-5512fcfef16b1de3a527aba79c434c31e74e127e"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-5512fcfef16b1de3a527aba79c434c31e74e127e-{{checksum ".buildcache/cache-keys/package-5512fcfef16b1de3a527aba79c434c31e74e127e"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  netbsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 20b32139ea1264e69518e40dbb18f1731c18683c
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-20b32139ea1264e69518e40dbb18f1731c18683c-{{checksum ".buildcache/cache-keys/package-20b32139ea1264e69518e40dbb18f1731c18683c"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-20b32139ea1264e69518e40dbb18f1731c18683c-{{checksum ".buildcache/cache-keys/package-20b32139ea1264e69518e40dbb18f1731c18683c"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  freebsd_arm_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b16b03bf92c2b1f57f807566e1933bd3b2930f35
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-b16b03bf92c2b1f57f807566e1933bd3b2930f35-{{checksum ".buildcache/cache-keys/package-b16b03bf92c2b1f57f807566e1933bd3b2930f35"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-b16b03bf92c2b1f57f807566e1933bd3b2930f35-{{checksum ".buildcache/cache-keys/package-b16b03bf92c2b1f57f807566e1933bd3b2930f35"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  windows_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364-{{checksum ".buildcache/cache-keys/package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_6835_{{checksum ".buildcache/cache-keys/copy-source-68351a141b16b671ce3b48ccfc669cd28440b089"}}
        keys:
        - warm-go-build-vendor-cache_7248_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7248bbc87dad5791859930536dc287b40b146b5f"}}
        - build-static-assets_9c1e_{{checksum ".buildcache/cache-keys/build-static-assets-9c1e8a980ac74e0052a7ba93377dbc83ff0a4f7b"}}
        - build-ui_a048_{{checksum ".buildcache/cache-keys/build-ui-a048989aac89e5d908ce70f720c63f2f7c1bed7e"}}
        - ui-dependencies_2f9d_{{checksum ".buildcache/cache-keys/ui-dependencies-2f9d2af1e907a2bdb0af9d3f82dccc14d15631fe"}}
        - install-yarn_73ff_{{checksum ".buildcache/cache-keys/install-yarn-73ff202a82a78103302e6e697fdef8681faf1d39"}}
        - set-workdir_a62a_{{checksum ".buildcache/cache-keys/set-workdir-a62acf87c85af33be469b01bb42b8b7812936b52"}}
        - install-go-tools_dcb0_{{checksum ".buildcache/cache-keys/install-go-tools-dcb0bba1215b5bf50db60aed6b67cf31cb915be2"}}
        - install-go_7aa9_{{checksum ".buildcache/cache-keys/install-go-7aa9c11556809c9c041da8359c1529272e7fc830"}}
        - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364-{{checksum ".buildcache/cache-keys/package-a81e84be3725f1bf81f09f5a5efc3b5a0f3b7364"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
workflows:
  build-384e6ec2189925a3:
    jobs:
    - build-common-layers
    - darwin_386_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
