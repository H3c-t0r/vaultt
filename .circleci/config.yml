### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write package cache key
    - restore_cache:
        key: cache001-package-a2f269fc428fa49333d7b079dfc4a49026f6ff18-{{checksum ".buildcache/cache-keys/package-a2f269fc428fa49333d7b079dfc4a49026f6ff18"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: a2f269fc428fa49333d7b079dfc4a49026f6ff18
        name: Write package metadata for darwin_386_package
    - restore_cache:
        key: cache001-package-ab83955b5822c3637b309bf135c09ce7a688dc1b-{{checksum ".buildcache/cache-keys/package-ab83955b5822c3637b309bf135c09ce7a688dc1b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: ab83955b5822c3637b309bf135c09ce7a688dc1b
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache001-package-a6a55b81b13358490c6b490546cd3ade99560443-{{checksum ".buildcache/cache-keys/package-a6a55b81b13358490c6b490546cd3ade99560443"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: a6a55b81b13358490c6b490546cd3ade99560443
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache001-package-1e2c23a5196b07fab93531379c9a2b417f67e15c-{{checksum ".buildcache/cache-keys/package-1e2c23a5196b07fab93531379c9a2b417f67e15c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 1e2c23a5196b07fab93531379c9a2b417f67e15c
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache001-package-10ea06819030e15dc72b5a751b801b51e77da8e5-{{checksum ".buildcache/cache-keys/package-10ea06819030e15dc72b5a751b801b51e77da8e5"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 10ea06819030e15dc72b5a751b801b51e77da8e5
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache001-package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5-{{checksum ".buildcache/cache-keys/package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 7350ee3f2d2c47ddab4dfe114d8eaa605c495db5
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache001-package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7-{{checksum ".buildcache/cache-keys/package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache001-package-080d86f2faebd4578bcf9171977af7a902b1423d-{{checksum ".buildcache/cache-keys/package-080d86f2faebd4578bcf9171977af7a902b1423d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 080d86f2faebd4578bcf9171977af7a902b1423d
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache001-package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7-{{checksum ".buildcache/cache-keys/package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 92f77e86a08e38fa778eae7e9cebac1e32a25bc7
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache001-package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f-{{checksum ".buildcache/cache-keys/package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache001-package-9cc74e431b634e1ab1128e75d9eb10e63de8a017-{{checksum ".buildcache/cache-keys/package-9cc74e431b634e1ab1128e75d9eb10e63de8a017"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 9cc74e431b634e1ab1128e75d9eb10e63de8a017
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache001-package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d-{{checksum ".buildcache/cache-keys/package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: fa500e17386e4ba6dedcad39be9c2b0feadf4b8d
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache001-package-9436f7ce8f51a89cbf21e920fa19e31efe8db152-{{checksum ".buildcache/cache-keys/package-9436f7ce8f51a89cbf21e920fa19e31efe8db152"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 9436f7ce8f51a89cbf21e920fa19e31efe8db152
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache001-package-bb196288ee9db74470fa2b4eb150a99d73467069-{{checksum ".buildcache/cache-keys/package-bb196288ee9db74470fa2b4eb150a99d73467069"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: bb196288ee9db74470fa2b4eb150a99d73467069
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache001-package-85af23516e12eeffa35c24d9e70b433056fc9421-{{checksum ".buildcache/cache-keys/package-85af23516e12eeffa35c24d9e70b433056fc9421"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 85af23516e12eeffa35c24d9e70b433056fc9421
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache001-package-732866bee1f8cd570c93571881d0e2dfec61b163-{{checksum ".buildcache/cache-keys/package-732866bee1f8cd570c93571881d0e2dfec61b163"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 732866bee1f8cd570c93571881d0e2dfec61b163
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: ab83955b5822c3637b309bf135c09ce7a688dc1b
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-ab83955b5822c3637b309bf135c09ce7a688dc1b-{{checksum ".buildcache/cache-keys/package-ab83955b5822c3637b309bf135c09ce7a688dc1b"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_2672_{{checksum ".buildcache/cache-keys/copy-source-2672ca9f14ccd90a34bd082462a14593b5d332cc"}}
        - cache001-warm-go-build-vendor-cache_2f55_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2f555c899d5b1c87aa883547f01c6288d56a1165"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-ab83955b5822c3637b309bf135c09ce7a688dc1b-{{checksum ".buildcache/cache-keys/package-ab83955b5822c3637b309bf135c09ce7a688dc1b"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-2f555c899d5b1c87aa883547f01c6288d56a1165.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-2f555c899d5b1c87aa883547f01c6288d56a1165-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_2f55_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2f555c899d5b1c87aa883547f01c6288d56a1165"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-2f555c899d5b1c87aa883547f01c6288d56a1165.tar.gz
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 85af23516e12eeffa35c24d9e70b433056fc9421
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-85af23516e12eeffa35c24d9e70b433056fc9421-{{checksum ".buildcache/cache-keys/package-85af23516e12eeffa35c24d9e70b433056fc9421"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_a782_{{checksum ".buildcache/cache-keys/copy-source-a782c3ca214650d50838512f32a02e40bc0a3da0"}}
        - cache001-warm-go-build-vendor-cache_0ec3_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0ec362849fed6116b8c5ba4488f206b8d6de6a96"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-85af23516e12eeffa35c24d9e70b433056fc9421-{{checksum ".buildcache/cache-keys/package-85af23516e12eeffa35c24d9e70b433056fc9421"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-0ec362849fed6116b8c5ba4488f206b8d6de6a96.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-0ec362849fed6116b8c5ba4488f206b8d6de6a96-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_0ec3_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0ec362849fed6116b8c5ba4488f206b8d6de6a96"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-0ec362849fed6116b8c5ba4488f206b8d6de6a96.tar.gz
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 92f77e86a08e38fa778eae7e9cebac1e32a25bc7
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7-{{checksum ".buildcache/cache-keys/package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_ce6b_{{checksum ".buildcache/cache-keys/copy-source-ce6b682f01ddcb468b6f1951d95ba574e151789d"}}
        - cache001-warm-go-build-vendor-cache_cd0e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-cd0e40b5a4be3260ddb9e0ab2d78e2e61926e506"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7-{{checksum ".buildcache/cache-keys/package-92f77e86a08e38fa778eae7e9cebac1e32a25bc7"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-cd0e40b5a4be3260ddb9e0ab2d78e2e61926e506.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-cd0e40b5a4be3260ddb9e0ab2d78e2e61926e506-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_cd0e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-cd0e40b5a4be3260ddb9e0ab2d78e2e61926e506"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-cd0e40b5a4be3260ddb9e0ab2d78e2e61926e506.tar.gz
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 080d86f2faebd4578bcf9171977af7a902b1423d
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-080d86f2faebd4578bcf9171977af7a902b1423d-{{checksum ".buildcache/cache-keys/package-080d86f2faebd4578bcf9171977af7a902b1423d"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_3605_{{checksum ".buildcache/cache-keys/copy-source-3605c989bed76fbc065448076073fee6c6f1a948"}}
        - cache001-warm-go-build-vendor-cache_312c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-312c77dae140444ec203a96c9a904816ea523ea1"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-080d86f2faebd4578bcf9171977af7a902b1423d-{{checksum ".buildcache/cache-keys/package-080d86f2faebd4578bcf9171977af7a902b1423d"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-312c77dae140444ec203a96c9a904816ea523ea1.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-312c77dae140444ec203a96c9a904816ea523ea1-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_312c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-312c77dae140444ec203a96c9a904816ea523ea1"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-312c77dae140444ec203a96c9a904816ea523ea1.tar.gz
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a2f269fc428fa49333d7b079dfc4a49026f6ff18
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-a2f269fc428fa49333d7b079dfc4a49026f6ff18-{{checksum ".buildcache/cache-keys/package-a2f269fc428fa49333d7b079dfc4a49026f6ff18"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_72f1_{{checksum ".buildcache/cache-keys/copy-source-72f1214dff2bf108a0d2f945b1a096224d821f8a"}}
        - cache001-warm-go-build-vendor-cache_e218_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e2188ce5faa15f50f7191c4ced0f86691b921771"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-a2f269fc428fa49333d7b079dfc4a49026f6ff18-{{checksum ".buildcache/cache-keys/package-a2f269fc428fa49333d7b079dfc4a49026f6ff18"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-e2188ce5faa15f50f7191c4ced0f86691b921771.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-e2188ce5faa15f50f7191c4ced0f86691b921771-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_e218_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e2188ce5faa15f50f7191c4ced0f86691b921771"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-e2188ce5faa15f50f7191c4ced0f86691b921771.tar.gz
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 7350ee3f2d2c47ddab4dfe114d8eaa605c495db5
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5-{{checksum ".buildcache/cache-keys/package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_f619_{{checksum ".buildcache/cache-keys/copy-source-f619d0dc767792f3f8f1b7e6b99635ad9415c9e8"}}
        - cache001-warm-go-build-vendor-cache_7829_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7829182941a9e2432ff9e6aa2c54fcf330c281a4"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5-{{checksum ".buildcache/cache-keys/package-7350ee3f2d2c47ddab4dfe114d8eaa605c495db5"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-7829182941a9e2432ff9e6aa2c54fcf330c281a4.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-7829182941a9e2432ff9e6aa2c54fcf330c281a4-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_7829_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7829182941a9e2432ff9e6aa2c54fcf330c281a4"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-7829182941a9e2432ff9e6aa2c54fcf330c281a4.tar.gz
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a6a55b81b13358490c6b490546cd3ade99560443
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-a6a55b81b13358490c6b490546cd3ade99560443-{{checksum ".buildcache/cache-keys/package-a6a55b81b13358490c6b490546cd3ade99560443"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_9ee2_{{checksum ".buildcache/cache-keys/copy-source-9ee2fbf8ba7b6642839563692b9576e8fecbff41"}}
        - cache001-warm-go-build-vendor-cache_7493_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7493c2619eaada406120ddd01816042f7fc64e71"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-a6a55b81b13358490c6b490546cd3ade99560443-{{checksum ".buildcache/cache-keys/package-a6a55b81b13358490c6b490546cd3ade99560443"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-7493c2619eaada406120ddd01816042f7fc64e71.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-7493c2619eaada406120ddd01816042f7fc64e71-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_7493_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7493c2619eaada406120ddd01816042f7fc64e71"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-7493c2619eaada406120ddd01816042f7fc64e71.tar.gz
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 1e2c23a5196b07fab93531379c9a2b417f67e15c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-1e2c23a5196b07fab93531379c9a2b417f67e15c-{{checksum ".buildcache/cache-keys/package-1e2c23a5196b07fab93531379c9a2b417f67e15c"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_6cc6_{{checksum ".buildcache/cache-keys/copy-source-6cc64f6b4976474a16bbfc318a49710a83becd47"}}
        - cache001-warm-go-build-vendor-cache_5c2d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5c2d03ccea6013ff91350d069259396ffe7ce5ab"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-1e2c23a5196b07fab93531379c9a2b417f67e15c-{{checksum ".buildcache/cache-keys/package-1e2c23a5196b07fab93531379c9a2b417f67e15c"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-5c2d03ccea6013ff91350d069259396ffe7ce5ab.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-5c2d03ccea6013ff91350d069259396ffe7ce5ab-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_5c2d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5c2d03ccea6013ff91350d069259396ffe7ce5ab"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-5c2d03ccea6013ff91350d069259396ffe7ce5ab.tar.gz
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: fa500e17386e4ba6dedcad39be9c2b0feadf4b8d
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d-{{checksum ".buildcache/cache-keys/package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_1a5d_{{checksum ".buildcache/cache-keys/copy-source-1a5dcc5573cbe4f80b8ec0961a88fe248c36f8a5"}}
        - cache001-warm-go-build-vendor-cache_2a4d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2a4d3498359e3ef045c6bf6375297fbf46c37b52"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d-{{checksum ".buildcache/cache-keys/package-fa500e17386e4ba6dedcad39be9c2b0feadf4b8d"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-2a4d3498359e3ef045c6bf6375297fbf46c37b52.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-2a4d3498359e3ef045c6bf6375297fbf46c37b52-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_2a4d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2a4d3498359e3ef045c6bf6375297fbf46c37b52"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-2a4d3498359e3ef045c6bf6375297fbf46c37b52.tar.gz
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7-{{checksum ".buildcache/cache-keys/package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_93f0_{{checksum ".buildcache/cache-keys/copy-source-93f073c0f96ef82c487420226c49fc688cca23d1"}}
        - cache001-warm-go-build-vendor-cache_e38b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e38bbfd43b103b8c021b1b2ebb91aa458a354a3e"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7-{{checksum ".buildcache/cache-keys/package-6ea2fffb3fdf0f8d97fcbdffcbad986e06075be7"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-e38bbfd43b103b8c021b1b2ebb91aa458a354a3e.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-e38bbfd43b103b8c021b1b2ebb91aa458a354a3e-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_e38b_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e38bbfd43b103b8c021b1b2ebb91aa458a354a3e"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-e38bbfd43b103b8c021b1b2ebb91aa458a354a3e.tar.gz
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: bb196288ee9db74470fa2b4eb150a99d73467069
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-bb196288ee9db74470fa2b4eb150a99d73467069-{{checksum ".buildcache/cache-keys/package-bb196288ee9db74470fa2b4eb150a99d73467069"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_98f3_{{checksum ".buildcache/cache-keys/copy-source-98f31d78f447dc5ae07857e1e7dfc2566e703484"}}
        - cache001-warm-go-build-vendor-cache_b86f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-b86ff9ab5fe53bdb79f51407f9c1ba8fc22a0542"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-bb196288ee9db74470fa2b4eb150a99d73467069-{{checksum ".buildcache/cache-keys/package-bb196288ee9db74470fa2b4eb150a99d73467069"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-b86ff9ab5fe53bdb79f51407f9c1ba8fc22a0542.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-b86ff9ab5fe53bdb79f51407f9c1ba8fc22a0542-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_b86f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-b86ff9ab5fe53bdb79f51407f9c1ba8fc22a0542"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-b86ff9ab5fe53bdb79f51407f9c1ba8fc22a0542.tar.gz
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.12.17
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 9cc74e431b634e1ab1128e75d9eb10e63de8a017
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-9cc74e431b634e1ab1128e75d9eb10e63de8a017-{{checksum ".buildcache/cache-keys/package-9cc74e431b634e1ab1128e75d9eb10e63de8a017"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_ec0d_{{checksum ".buildcache/cache-keys/copy-source-ec0d02c2aa437892b04beaed7ad000b5bff22548"}}
        - cache001-warm-go-build-vendor-cache_f9bf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f9bfe9e60286d7620cbf007aaf9f7ca90f304def"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-9cc74e431b634e1ab1128e75d9eb10e63de8a017-{{checksum ".buildcache/cache-keys/package-9cc74e431b634e1ab1128e75d9eb10e63de8a017"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-f9bfe9e60286d7620cbf007aaf9f7ca90f304def.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-f9bfe9e60286d7620cbf007aaf9f7ca90f304def-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_f9bf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f9bfe9e60286d7620cbf007aaf9f7ca90f304def"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-f9bfe9e60286d7620cbf007aaf9f7ca90f304def.tar.gz
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 9436f7ce8f51a89cbf21e920fa19e31efe8db152
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-9436f7ce8f51a89cbf21e920fa19e31efe8db152-{{checksum ".buildcache/cache-keys/package-9436f7ce8f51a89cbf21e920fa19e31efe8db152"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_e77e_{{checksum ".buildcache/cache-keys/copy-source-e77e2864a98dda0e3be70684b4eae8cc8400b27e"}}
        - cache001-warm-go-build-vendor-cache_83e8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-83e84a5f4e93dc9a196f76728eabf0eca07d16b9"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-9436f7ce8f51a89cbf21e920fa19e31efe8db152-{{checksum ".buildcache/cache-keys/package-9436f7ce8f51a89cbf21e920fa19e31efe8db152"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-83e84a5f4e93dc9a196f76728eabf0eca07d16b9.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-83e84a5f4e93dc9a196f76728eabf0eca07d16b9-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_83e8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-83e84a5f4e93dc9a196f76728eabf0eca07d16b9"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-83e84a5f4e93dc9a196f76728eabf0eca07d16b9.tar.gz
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f-{{checksum ".buildcache/cache-keys/package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_c2d3_{{checksum ".buildcache/cache-keys/copy-source-c2d33028c24f45c7f99c87cfbad90b36c8bf7afe"}}
        - cache001-warm-go-build-vendor-cache_42bd_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-42bdf54c524860152449edd60fff67c948adb419"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f-{{checksum ".buildcache/cache-keys/package-3a37cf4e46ebd55cc665f5e96f9c2236f8e7924f"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-42bdf54c524860152449edd60fff67c948adb419.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-42bdf54c524860152449edd60fff67c948adb419-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_42bd_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-42bdf54c524860152449edd60fff67c948adb419"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-42bdf54c524860152449edd60fff67c948adb419.tar.gz
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 10ea06819030e15dc72b5a751b801b51e77da8e5
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-10ea06819030e15dc72b5a751b801b51e77da8e5-{{checksum ".buildcache/cache-keys/package-10ea06819030e15dc72b5a751b801b51e77da8e5"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_18d3_{{checksum ".buildcache/cache-keys/copy-source-18d36ce4758ab06763674f1a7c09f01f6a8513ce"}}
        - cache001-warm-go-build-vendor-cache_01bc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01bcfcd75bfaad88eb78c1307dda9c0223b05650"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-10ea06819030e15dc72b5a751b801b51e77da8e5-{{checksum ".buildcache/cache-keys/package-10ea06819030e15dc72b5a751b801b51e77da8e5"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-01bcfcd75bfaad88eb78c1307dda9c0223b05650.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-01bcfcd75bfaad88eb78c1307dda9c0223b05650-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_01bc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01bcfcd75bfaad88eb78c1307dda9c0223b05650"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-01bcfcd75bfaad88eb78c1307dda9c0223b05650.tar.gz
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 732866bee1f8cd570c93571881d0e2dfec61b163
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-732866bee1f8cd570c93571881d0e2dfec61b163-{{checksum ".buildcache/cache-keys/package-732866bee1f8cd570c93571881d0e2dfec61b163"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_160a_{{checksum ".buildcache/cache-keys/copy-source-160a14fab5abc897c180fe361d7d5940db53960b"}}
        - cache001-warm-go-build-vendor-cache_010a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-010a4449643e9546ac50b5a3c20b9d007d1cc6a0"}}
        - cache001-build-static-assets_8cd9_{{checksum ".buildcache/cache-keys/build-static-assets-8cd9996410d9fabd04f4492e46267f8d050b86c9"}}
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-732866bee1f8cd570c93571881d0e2dfec61b163-{{checksum ".buildcache/cache-keys/package-732866bee1f8cd570c93571881d0e2dfec61b163"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-010a4449643e9546ac50b5a3c20b9d007d1cc6a0.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-010a4449643e9546ac50b5a3c20b9d007d1cc6a0-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_010a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-010a4449643e9546ac50b5a3c20b9d007d1cc6a0"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-010a4449643e9546ac50b5a3c20b9d007d1cc6a0.tar.gz
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
  cache-builder-images:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        - cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        - cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        - cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        - cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        - cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          if [ -f .buildcache/archives/06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90 make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -f packages*.lock/layer.mk 00-base-31734631257b3779d02665ecc77e06482f6104e8-image
    - run:
        command: make -f packages*.lock/layer.mk 01-install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640-image
    - run:
        command: make -f packages*.lock/layer.mk 02-install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2-image
    - run:
        command: make -f packages*.lock/layer.mk 03-set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e-image
    - run:
        command: make -f packages*.lock/layer.mk 04-install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd-image
    - run:
        command: make -f packages*.lock/layer.mk 05-ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873-image
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90-image
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90-save
    - save_cache:
        key: cache001-build-ui_d1b1_{{checksum ".buildcache/cache-keys/build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90"}}
        paths:
        - .buildcache/archives/06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90.tar.gz
    - run:
        command: mv .buildcache/archives/06-build-ui-d1b19ede2e9e93ce933fdf0b478431cabd025d90.tar.gz .buildcache/archives/05-ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873.tar.gz
    - save_cache:
        key: cache001-ui-dependencies_db53_{{checksum ".buildcache/cache-keys/ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873"}}
        paths:
        - .buildcache/archives/05-ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873.tar.gz
    - run:
        command: mv .buildcache/archives/05-ui-dependencies-db537e5c6442d4efa1c7df1bc123bffd5fa88873.tar.gz .buildcache/archives/04-install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd.tar.gz
    - save_cache:
        key: cache001-install-yarn_7b37_{{checksum ".buildcache/cache-keys/install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd"}}
        paths:
        - .buildcache/archives/04-install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd.tar.gz
    - run:
        command: mv .buildcache/archives/04-install-yarn-7b37c5d96e7ff94e29b981b1efccd5f2fe6861cd.tar.gz .buildcache/archives/03-set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e.tar.gz
    - save_cache:
        key: cache001-set-workdir_cdfe_{{checksum ".buildcache/cache-keys/set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e"}}
        paths:
        - .buildcache/archives/03-set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e.tar.gz
    - run:
        command: mv .buildcache/archives/03-set-workdir-cdfef4442dd3f6ccfd1661d940543749f4715b7e.tar.gz .buildcache/archives/02-install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2.tar.gz
    - save_cache:
        key: cache001-install-go-tools_74ba_{{checksum ".buildcache/cache-keys/install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2"}}
        paths:
        - .buildcache/archives/02-install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2.tar.gz
    - run:
        command: mv .buildcache/archives/02-install-go-tools-74ba8a2d77eb3970e7952d163143359521dbb2d2.tar.gz .buildcache/archives/01-install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640.tar.gz
    - save_cache:
        key: cache001-install-go_fbcf_{{checksum ".buildcache/cache-keys/install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640"}}
        paths:
        - .buildcache/archives/01-install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640.tar.gz
    - run:
        command: mv .buildcache/archives/01-install-go-fbcf458c9f828d52a70be049d4fe10ecb4bf0640.tar.gz .buildcache/archives/00-base-31734631257b3779d02665ecc77e06482f6104e8.tar.gz
    - save_cache:
        key: cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
        paths:
        - .buildcache/archives/00-base-31734631257b3779d02665ecc77e06482f6104e8.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
workflows:
  build-standalone:
    jobs:
    - cache-builder-images
    - darwin_386_package:
        requires:
        - cache-builder-images
    - darwin_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_386_package:
        requires:
        - cache-builder-images
    - freebsd_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_arm_package:
        requires:
        - cache-builder-images
    - linux_386_package:
        requires:
        - cache-builder-images
    - linux_amd64_package:
        requires:
        - cache-builder-images
    - linux_arm_package:
        requires:
        - cache-builder-images
    - linux_arm64_package:
        requires:
        - cache-builder-images
    - netbsd_386_package:
        requires:
        - cache-builder-images
    - netbsd_amd64_package:
        requires:
        - cache-builder-images
    - openbsd_386_package:
        requires:
        - cache-builder-images
    - openbsd_amd64_package:
        requires:
        - cache-builder-images
    - solaris_amd64_package:
        requires:
        - cache-builder-images
    - windows_386_package:
        requires:
        - cache-builder-images
    - windows_amd64_package:
        requires:
        - cache-builder-images
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
