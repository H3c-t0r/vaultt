version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
          keys:
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-211877846cfaed52439943f37a49b817ae0fceaf-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2.tar.gz
          key: build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-23dc8ec53f2462860f170fe89efc10972213e9c6-{{checksum ".buildcache/cache-keys/package-23dc8ec53f2462860f170fe89efc10972213e9c6"}}
          name: Restore package cache
      - restore_cache:
          key: package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3-{{checksum ".buildcache/cache-keys/package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3"}}
          name: Restore package cache
      - restore_cache:
          key: package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4-{{checksum ".buildcache/cache-keys/package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4"}}
          name: Restore package cache
      - restore_cache:
          key: package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362-{{checksum ".buildcache/cache-keys/package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362"}}
          name: Restore package cache
      - restore_cache:
          key: package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e-{{checksum ".buildcache/cache-keys/package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e"}}
          name: Restore package cache
      - restore_cache:
          key: package-55a7246b20438f81fb68efade76e95118e2f433c-{{checksum ".buildcache/cache-keys/package-55a7246b20438f81fb68efade76e95118e2f433c"}}
          name: Restore package cache
      - restore_cache:
          key: package-8cac09eae2589fdcc5f3f4cd0616e56203382868-{{checksum ".buildcache/cache-keys/package-8cac09eae2589fdcc5f3f4cd0616e56203382868"}}
          name: Restore package cache
      - restore_cache:
          key: package-a8e5e02f420139429d9e8e70015a54d646595efb-{{checksum ".buildcache/cache-keys/package-a8e5e02f420139429d9e8e70015a54d646595efb"}}
          name: Restore package cache
      - restore_cache:
          key: package-8d3604b78a92670a46fa6c00fc9cb74844c39a16-{{checksum ".buildcache/cache-keys/package-8d3604b78a92670a46fa6c00fc9cb74844c39a16"}}
          name: Restore package cache
      - restore_cache:
          key: package-cbc4912544d4c3b40bd75c240067ad78ff94aff1-{{checksum ".buildcache/cache-keys/package-cbc4912544d4c3b40bd75c240067ad78ff94aff1"}}
          name: Restore package cache
      - restore_cache:
          key: package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f-{{checksum ".buildcache/cache-keys/package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f"}}
          name: Restore package cache
      - restore_cache:
          key: package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a-{{checksum ".buildcache/cache-keys/package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a"}}
          name: Restore package cache
      - restore_cache:
          key: package-ccc6fa07f2308441393d772185ca479d39cfb704-{{checksum ".buildcache/cache-keys/package-ccc6fa07f2308441393d772185ca479d39cfb704"}}
          name: Restore package cache
      - restore_cache:
          key: package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e-{{checksum ".buildcache/cache-keys/package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e"}}
          name: Restore package cache
      - restore_cache:
          key: package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d-{{checksum ".buildcache/cache-keys/package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d"}}
          name: Restore package cache
      - restore_cache:
          key: package-5b58d4c36d675a37826bd6799e6dc35a35ef3861-{{checksum ".buildcache/cache-keys/package-5b58d4c36d675a37826bd6799e6dc35a35ef3861"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-83e1435dbd4515cd.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-83e1435dbd4515cd.tar.gz .buildcache/packages lockfile-83e1435dbd4515cd.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-83e1435dbd4515cd.tar.gz .buildcache/packages/store/*.json lockfile-83e1435dbd4515cd.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-83e1435dbd4515cd.yml
      - store_artifacts:
          path: packages-83e1435dbd4515cd.tar.gz
      - store_artifacts:
          path: meta-83e1435dbd4515cd.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-23dc8ec53f2462860f170fe89efc10972213e9c6-{{checksum ".buildcache/cache-keys/package-23dc8ec53f2462860f170fe89efc10972213e9c6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-23dc8ec53f2462860f170fe89efc10972213e9c6-{{checksum ".buildcache/cache-keys/package-23dc8ec53f2462860f170fe89efc10972213e9c6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 23dc8ec53f2462860f170fe89efc10972213e9c6
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3-{{checksum ".buildcache/cache-keys/package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3-{{checksum ".buildcache/cache-keys/package-270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 270b7de0f1cae8ba9384a6a16c5dcc8de228c1b3
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4-{{checksum ".buildcache/cache-keys/package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4-{{checksum ".buildcache/cache-keys/package-d1c8fe0cbdd220d31d9a257469930fcfbf7373f4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d1c8fe0cbdd220d31d9a257469930fcfbf7373f4
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362-{{checksum ".buildcache/cache-keys/package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362-{{checksum ".buildcache/cache-keys/package-7de5f912b4925a2c9fad8d28daf9d9e41c8a3362"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7de5f912b4925a2c9fad8d28daf9d9e41c8a3362
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e-{{checksum ".buildcache/cache-keys/package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e-{{checksum ".buildcache/cache-keys/package-d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d66b415c8fe70b1aeabc06ee43c157a8bcd26b8e
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-55a7246b20438f81fb68efade76e95118e2f433c-{{checksum ".buildcache/cache-keys/package-55a7246b20438f81fb68efade76e95118e2f433c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-55a7246b20438f81fb68efade76e95118e2f433c-{{checksum ".buildcache/cache-keys/package-55a7246b20438f81fb68efade76e95118e2f433c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 55a7246b20438f81fb68efade76e95118e2f433c
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8cac09eae2589fdcc5f3f4cd0616e56203382868-{{checksum ".buildcache/cache-keys/package-8cac09eae2589fdcc5f3f4cd0616e56203382868"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8cac09eae2589fdcc5f3f4cd0616e56203382868-{{checksum ".buildcache/cache-keys/package-8cac09eae2589fdcc5f3f4cd0616e56203382868"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8cac09eae2589fdcc5f3f4cd0616e56203382868
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a8e5e02f420139429d9e8e70015a54d646595efb-{{checksum ".buildcache/cache-keys/package-a8e5e02f420139429d9e8e70015a54d646595efb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a8e5e02f420139429d9e8e70015a54d646595efb-{{checksum ".buildcache/cache-keys/package-a8e5e02f420139429d9e8e70015a54d646595efb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a8e5e02f420139429d9e8e70015a54d646595efb
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8d3604b78a92670a46fa6c00fc9cb74844c39a16-{{checksum ".buildcache/cache-keys/package-8d3604b78a92670a46fa6c00fc9cb74844c39a16"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8d3604b78a92670a46fa6c00fc9cb74844c39a16-{{checksum ".buildcache/cache-keys/package-8d3604b78a92670a46fa6c00fc9cb74844c39a16"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8d3604b78a92670a46fa6c00fc9cb74844c39a16
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cbc4912544d4c3b40bd75c240067ad78ff94aff1-{{checksum ".buildcache/cache-keys/package-cbc4912544d4c3b40bd75c240067ad78ff94aff1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cbc4912544d4c3b40bd75c240067ad78ff94aff1-{{checksum ".buildcache/cache-keys/package-cbc4912544d4c3b40bd75c240067ad78ff94aff1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cbc4912544d4c3b40bd75c240067ad78ff94aff1
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f-{{checksum ".buildcache/cache-keys/package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f-{{checksum ".buildcache/cache-keys/package-76444208bff5d6fbaa1c2414f32cb9f7a203ce1f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 76444208bff5d6fbaa1c2414f32cb9f7a203ce1f
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a-{{checksum ".buildcache/cache-keys/package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a-{{checksum ".buildcache/cache-keys/package-fb6b8aba7e28fa4fa1686c7d9af459442210ef7a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fb6b8aba7e28fa4fa1686c7d9af459442210ef7a
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ccc6fa07f2308441393d772185ca479d39cfb704-{{checksum ".buildcache/cache-keys/package-ccc6fa07f2308441393d772185ca479d39cfb704"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ccc6fa07f2308441393d772185ca479d39cfb704-{{checksum ".buildcache/cache-keys/package-ccc6fa07f2308441393d772185ca479d39cfb704"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ccc6fa07f2308441393d772185ca479d39cfb704
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e-{{checksum ".buildcache/cache-keys/package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e-{{checksum ".buildcache/cache-keys/package-a8efe6fa7c9e083e88122f122bbf714ed57ab29e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a8efe6fa7c9e083e88122f122bbf714ed57ab29e
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d-{{checksum ".buildcache/cache-keys/package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d-{{checksum ".buildcache/cache-keys/package-df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: df7e8b311c2465764fc6f8eaa31d6c9cc1f1f05d
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5b58d4c36d675a37826bd6799e6dc35a35ef3861-{{checksum ".buildcache/cache-keys/package-5b58d4c36d675a37826bd6799e6dc35a35ef3861"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_fee3_{{checksum ".buildcache/cache-keys/copy-source-fee3e9ae293481da1c20ce97546b3b8751d636fb"}}
          keys:
            - warm-go-build-vendor-cache_1e6f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1e6f9bac3b619d96c05b2085920060e7637a3b55"}}
            - build-static-assets_aa02_{{checksum ".buildcache/cache-keys/build-static-assets-aa026166dcc5a4273c7003aae00ec9040e84c443"}}
            - build-ui_2527_{{checksum ".buildcache/cache-keys/build-ui-25272f1b9d9569e0b0fd4fe503bc4f4cfb1a59d2"}}
            - ui-dependencies_0fdb_{{checksum ".buildcache/cache-keys/ui-dependencies-0fdbdc16f9e94141040a827d03ca653a60ca7ae3"}}
            - install-yarn_4aec_{{checksum ".buildcache/cache-keys/install-yarn-4aec70f4651142abeec09a468d907c30ddf46fbd"}}
            - set-workdir_2118_{{checksum ".buildcache/cache-keys/set-workdir-211877846cfaed52439943f37a49b817ae0fceaf"}}
            - install-go-tools_812d_{{checksum ".buildcache/cache-keys/install-go-tools-812d96adc90c57c2b108e6f2d3a0e559c52cb967"}}
            - install-go_3e1b_{{checksum ".buildcache/cache-keys/install-go-3e1bde065b1b93415ed248fa3d5c1c05cc69584a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5b58d4c36d675a37826bd6799e6dc35a35ef3861-{{checksum ".buildcache/cache-keys/package-5b58d4c36d675a37826bd6799e6dc35a35ef3861"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5b58d4c36d675a37826bd6799e6dc35a35ef3861
workflows:
  build-83e1435dbd4515cd:
    jobs:
      - build-common-layers: {}
      - darwin_386_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_386_package
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
