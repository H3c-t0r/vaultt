### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write package cache key
    - restore_cache:
        key: cache001-package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0-{{checksum ".buildcache/cache-keys/package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 74e35a843da34c7e123cbe4493c5f6ea32ef80e0
        name: Write package metadata for darwin_386_package
    - restore_cache:
        key: cache001-package-4cc75838c20922c6b0bc75addbf582c29f5c862e-{{checksum ".buildcache/cache-keys/package-4cc75838c20922c6b0bc75addbf582c29f5c862e"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 4cc75838c20922c6b0bc75addbf582c29f5c862e
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache001-package-3e47d362249836a34f212ff606483ce6666570fe-{{checksum ".buildcache/cache-keys/package-3e47d362249836a34f212ff606483ce6666570fe"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 3e47d362249836a34f212ff606483ce6666570fe
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache001-package-276f959862114603179564bab97d3a3f70113142-{{checksum ".buildcache/cache-keys/package-276f959862114603179564bab97d3a3f70113142"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 276f959862114603179564bab97d3a3f70113142
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache001-package-44b3acac480a7fd60444568c9a36839c9c91512a-{{checksum ".buildcache/cache-keys/package-44b3acac480a7fd60444568c9a36839c9c91512a"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 44b3acac480a7fd60444568c9a36839c9c91512a
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache001-package-f8535b687e0341ac8f1571a66938d874540f0e2b-{{checksum ".buildcache/cache-keys/package-f8535b687e0341ac8f1571a66938d874540f0e2b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: f8535b687e0341ac8f1571a66938d874540f0e2b
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache001-package-98213865640b2ca6fe7401af678f7617baa252ef-{{checksum ".buildcache/cache-keys/package-98213865640b2ca6fe7401af678f7617baa252ef"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 98213865640b2ca6fe7401af678f7617baa252ef
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache001-package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6-{{checksum ".buildcache/cache-keys/package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: e71871abb82dc8323e0ff92c1a9fc62d687a95b6
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache001-package-fbf4e851fabcb67e0675a9829410defc133ce0b7-{{checksum ".buildcache/cache-keys/package-fbf4e851fabcb67e0675a9829410defc133ce0b7"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: fbf4e851fabcb67e0675a9829410defc133ce0b7
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache001-package-4982c3b0795245e08be4e754005baa7d1fb0106b-{{checksum ".buildcache/cache-keys/package-4982c3b0795245e08be4e754005baa7d1fb0106b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 4982c3b0795245e08be4e754005baa7d1fb0106b
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache001-package-08e79909590dd867b0490dd5fe74e18c32acde06-{{checksum ".buildcache/cache-keys/package-08e79909590dd867b0490dd5fe74e18c32acde06"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 08e79909590dd867b0490dd5fe74e18c32acde06
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache001-package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428-{{checksum ".buildcache/cache-keys/package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 2e3283f8a4ba1b203dc8ab3723a57b885eef1428
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache001-package-79f895b97a779a039892f3c8d831936475be87f7-{{checksum ".buildcache/cache-keys/package-79f895b97a779a039892f3c8d831936475be87f7"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 79f895b97a779a039892f3c8d831936475be87f7
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache001-package-0150b3bb74c700fda68ab58b54745e34824c3b19-{{checksum ".buildcache/cache-keys/package-0150b3bb74c700fda68ab58b54745e34824c3b19"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 0150b3bb74c700fda68ab58b54745e34824c3b19
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache001-package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9-{{checksum ".buildcache/cache-keys/package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 98a4e672ca8fae8a87cde5d947b81cea1f982fd9
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache001-package-d18af84f33b3616839ef5da1aa9358e817004ae8-{{checksum ".buildcache/cache-keys/package-d18af84f33b3616839ef5da1aa9358e817004ae8"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: d18af84f33b3616839ef5da1aa9358e817004ae8
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 4cc75838c20922c6b0bc75addbf582c29f5c862e
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-4cc75838c20922c6b0bc75addbf582c29f5c862e-{{checksum ".buildcache/cache-keys/package-4cc75838c20922c6b0bc75addbf582c29f5c862e"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_8457_{{checksum ".buildcache/cache-keys/copy-source-8457b55e1875717c955cc074598fcb246719502c"}}
        - cache001-warm-go-build-vendor-cache_eda7_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-eda77c6db6429311cc765973294eb320f999293a"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-4cc75838c20922c6b0bc75addbf582c29f5c862e-{{checksum ".buildcache/cache-keys/package-4cc75838c20922c6b0bc75addbf582c29f5c862e"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-eda77c6db6429311cc765973294eb320f999293a.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-eda77c6db6429311cc765973294eb320f999293a-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_eda7_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-eda77c6db6429311cc765973294eb320f999293a"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-eda77c6db6429311cc765973294eb320f999293a.tar.gz
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 98a4e672ca8fae8a87cde5d947b81cea1f982fd9
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9-{{checksum ".buildcache/cache-keys/package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_d0bb_{{checksum ".buildcache/cache-keys/copy-source-d0bb0092a59dd4ee9a322487ca0bfa508f52af93"}}
        - cache001-warm-go-build-vendor-cache_ff1a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-ff1a1943fada4c359ebc9b28712c16fd156079be"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9-{{checksum ".buildcache/cache-keys/package-98a4e672ca8fae8a87cde5d947b81cea1f982fd9"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-ff1a1943fada4c359ebc9b28712c16fd156079be.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-ff1a1943fada4c359ebc9b28712c16fd156079be-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_ff1a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-ff1a1943fada4c359ebc9b28712c16fd156079be"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-ff1a1943fada4c359ebc9b28712c16fd156079be.tar.gz
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: fbf4e851fabcb67e0675a9829410defc133ce0b7
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-fbf4e851fabcb67e0675a9829410defc133ce0b7-{{checksum ".buildcache/cache-keys/package-fbf4e851fabcb67e0675a9829410defc133ce0b7"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_ff32_{{checksum ".buildcache/cache-keys/copy-source-ff3276fdfa968089037b52e7d315ba6ec482f3d4"}}
        - cache001-warm-go-build-vendor-cache_7d14_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7d14820c4f30e09ae75546a8fab6110748498396"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-fbf4e851fabcb67e0675a9829410defc133ce0b7-{{checksum ".buildcache/cache-keys/package-fbf4e851fabcb67e0675a9829410defc133ce0b7"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-7d14820c4f30e09ae75546a8fab6110748498396.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-7d14820c4f30e09ae75546a8fab6110748498396-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_7d14_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7d14820c4f30e09ae75546a8fab6110748498396"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-7d14820c4f30e09ae75546a8fab6110748498396.tar.gz
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e71871abb82dc8323e0ff92c1a9fc62d687a95b6
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6-{{checksum ".buildcache/cache-keys/package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_08cf_{{checksum ".buildcache/cache-keys/copy-source-08cf746bc500a2cf77af80bc19e6c04001379045"}}
        - cache001-warm-go-build-vendor-cache_df74_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-df74768c57aae3d470d5d13936cdd856240755ca"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6-{{checksum ".buildcache/cache-keys/package-e71871abb82dc8323e0ff92c1a9fc62d687a95b6"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-df74768c57aae3d470d5d13936cdd856240755ca.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-df74768c57aae3d470d5d13936cdd856240755ca-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_df74_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-df74768c57aae3d470d5d13936cdd856240755ca"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-df74768c57aae3d470d5d13936cdd856240755ca.tar.gz
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 74e35a843da34c7e123cbe4493c5f6ea32ef80e0
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0-{{checksum ".buildcache/cache-keys/package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_bd9f_{{checksum ".buildcache/cache-keys/copy-source-bd9ff3cba9650b1291cddbdbd14fef692056dcd1"}}
        - cache001-warm-go-build-vendor-cache_12d0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-12d08d14319ec066948be3f52ea356733e45a18e"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0-{{checksum ".buildcache/cache-keys/package-74e35a843da34c7e123cbe4493c5f6ea32ef80e0"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-12d08d14319ec066948be3f52ea356733e45a18e.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-12d08d14319ec066948be3f52ea356733e45a18e-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_12d0_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-12d08d14319ec066948be3f52ea356733e45a18e"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-12d08d14319ec066948be3f52ea356733e45a18e.tar.gz
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: f8535b687e0341ac8f1571a66938d874540f0e2b
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-f8535b687e0341ac8f1571a66938d874540f0e2b-{{checksum ".buildcache/cache-keys/package-f8535b687e0341ac8f1571a66938d874540f0e2b"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_6fc1_{{checksum ".buildcache/cache-keys/copy-source-6fc1e42c2cd8e14a6ac6985ca63ed962afe0c826"}}
        - cache001-warm-go-build-vendor-cache_530e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-530ee104d36251fe72aff23ea12d3ade1871a04f"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-f8535b687e0341ac8f1571a66938d874540f0e2b-{{checksum ".buildcache/cache-keys/package-f8535b687e0341ac8f1571a66938d874540f0e2b"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-530ee104d36251fe72aff23ea12d3ade1871a04f.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-530ee104d36251fe72aff23ea12d3ade1871a04f-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_530e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-530ee104d36251fe72aff23ea12d3ade1871a04f"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-530ee104d36251fe72aff23ea12d3ade1871a04f.tar.gz
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 3e47d362249836a34f212ff606483ce6666570fe
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-3e47d362249836a34f212ff606483ce6666570fe-{{checksum ".buildcache/cache-keys/package-3e47d362249836a34f212ff606483ce6666570fe"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_7d5c_{{checksum ".buildcache/cache-keys/copy-source-7d5cb3be9d83255a033973f93ab521365dd43ef1"}}
        - cache001-warm-go-build-vendor-cache_e38d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e38dcb114581a2ff4669c98d204515b566f2264c"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-3e47d362249836a34f212ff606483ce6666570fe-{{checksum ".buildcache/cache-keys/package-3e47d362249836a34f212ff606483ce6666570fe"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-e38dcb114581a2ff4669c98d204515b566f2264c.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-e38dcb114581a2ff4669c98d204515b566f2264c-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_e38d_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-e38dcb114581a2ff4669c98d204515b566f2264c"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-e38dcb114581a2ff4669c98d204515b566f2264c.tar.gz
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 276f959862114603179564bab97d3a3f70113142
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-276f959862114603179564bab97d3a3f70113142-{{checksum ".buildcache/cache-keys/package-276f959862114603179564bab97d3a3f70113142"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_25e4_{{checksum ".buildcache/cache-keys/copy-source-25e42ab971e2d32abd67e367a689a66c2265d969"}}
        - cache001-warm-go-build-vendor-cache_37b1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-37b12dc37e6630b2f1b3f888e8ccade056753eaf"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-276f959862114603179564bab97d3a3f70113142-{{checksum ".buildcache/cache-keys/package-276f959862114603179564bab97d3a3f70113142"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-37b12dc37e6630b2f1b3f888e8ccade056753eaf.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-37b12dc37e6630b2f1b3f888e8ccade056753eaf-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_37b1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-37b12dc37e6630b2f1b3f888e8ccade056753eaf"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-37b12dc37e6630b2f1b3f888e8ccade056753eaf.tar.gz
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2e3283f8a4ba1b203dc8ab3723a57b885eef1428
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428-{{checksum ".buildcache/cache-keys/package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_083a_{{checksum ".buildcache/cache-keys/copy-source-083a861a9c4d18b39971df4bf05c419664de8aaa"}}
        - cache001-warm-go-build-vendor-cache_15cf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-15cf4fbc7504a045dbf141bdeebdb26f4345b767"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428-{{checksum ".buildcache/cache-keys/package-2e3283f8a4ba1b203dc8ab3723a57b885eef1428"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-15cf4fbc7504a045dbf141bdeebdb26f4345b767.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-15cf4fbc7504a045dbf141bdeebdb26f4345b767-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_15cf_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-15cf4fbc7504a045dbf141bdeebdb26f4345b767"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-15cf4fbc7504a045dbf141bdeebdb26f4345b767.tar.gz
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 98213865640b2ca6fe7401af678f7617baa252ef
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-98213865640b2ca6fe7401af678f7617baa252ef-{{checksum ".buildcache/cache-keys/package-98213865640b2ca6fe7401af678f7617baa252ef"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_aff2_{{checksum ".buildcache/cache-keys/copy-source-aff2467ac1b886f22f121ef788d7abae0538324b"}}
        - cache001-warm-go-build-vendor-cache_1824_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1824ae9813fe98bb683b9a31ae491780bc360039"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-98213865640b2ca6fe7401af678f7617baa252ef-{{checksum ".buildcache/cache-keys/package-98213865640b2ca6fe7401af678f7617baa252ef"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-1824ae9813fe98bb683b9a31ae491780bc360039.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-1824ae9813fe98bb683b9a31ae491780bc360039-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_1824_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1824ae9813fe98bb683b9a31ae491780bc360039"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-1824ae9813fe98bb683b9a31ae491780bc360039.tar.gz
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 0150b3bb74c700fda68ab58b54745e34824c3b19
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-0150b3bb74c700fda68ab58b54745e34824c3b19-{{checksum ".buildcache/cache-keys/package-0150b3bb74c700fda68ab58b54745e34824c3b19"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_259d_{{checksum ".buildcache/cache-keys/copy-source-259d06c1a542b4ae004dda9f59965b52cd54b0c7"}}
        - cache001-warm-go-build-vendor-cache_bc28_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-bc286fa90d40bdd107f59e5f659d065ca1f2fbbb"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-0150b3bb74c700fda68ab58b54745e34824c3b19-{{checksum ".buildcache/cache-keys/package-0150b3bb74c700fda68ab58b54745e34824c3b19"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-bc286fa90d40bdd107f59e5f659d065ca1f2fbbb.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-bc286fa90d40bdd107f59e5f659d065ca1f2fbbb-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_bc28_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-bc286fa90d40bdd107f59e5f659d065ca1f2fbbb"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-bc286fa90d40bdd107f59e5f659d065ca1f2fbbb.tar.gz
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.13.15
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 08e79909590dd867b0490dd5fe74e18c32acde06
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-08e79909590dd867b0490dd5fe74e18c32acde06-{{checksum ".buildcache/cache-keys/package-08e79909590dd867b0490dd5fe74e18c32acde06"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_f04b_{{checksum ".buildcache/cache-keys/copy-source-f04b0f7a2882a173ff450deeeb7a1802359e3e40"}}
        - cache001-warm-go-build-vendor-cache_2b3e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2b3e5488ba75163524962214a8c7a4324bc714ba"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-08e79909590dd867b0490dd5fe74e18c32acde06-{{checksum ".buildcache/cache-keys/package-08e79909590dd867b0490dd5fe74e18c32acde06"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-2b3e5488ba75163524962214a8c7a4324bc714ba.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-2b3e5488ba75163524962214a8c7a4324bc714ba-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_2b3e_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-2b3e5488ba75163524962214a8c7a4324bc714ba"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-2b3e5488ba75163524962214a8c7a4324bc714ba.tar.gz
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 79f895b97a779a039892f3c8d831936475be87f7
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-79f895b97a779a039892f3c8d831936475be87f7-{{checksum ".buildcache/cache-keys/package-79f895b97a779a039892f3c8d831936475be87f7"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_de84_{{checksum ".buildcache/cache-keys/copy-source-de849be8874e18cff9b9885b3c1d53a77a2a615a"}}
        - cache001-warm-go-build-vendor-cache_81d1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-81d11a0b8fe9ba4d4a1309a03a6801799173accd"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-79f895b97a779a039892f3c8d831936475be87f7-{{checksum ".buildcache/cache-keys/package-79f895b97a779a039892f3c8d831936475be87f7"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-81d11a0b8fe9ba4d4a1309a03a6801799173accd.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-81d11a0b8fe9ba4d4a1309a03a6801799173accd-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_81d1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-81d11a0b8fe9ba4d4a1309a03a6801799173accd"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-81d11a0b8fe9ba4d4a1309a03a6801799173accd.tar.gz
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 4982c3b0795245e08be4e754005baa7d1fb0106b
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-4982c3b0795245e08be4e754005baa7d1fb0106b-{{checksum ".buildcache/cache-keys/package-4982c3b0795245e08be4e754005baa7d1fb0106b"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_3241_{{checksum ".buildcache/cache-keys/copy-source-324184493c07435cbfa0fc762ccb265541c8aa17"}}
        - cache001-warm-go-build-vendor-cache_5e88_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5e88ec9a846b1348b401677b43ea39d0d8d7df57"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-4982c3b0795245e08be4e754005baa7d1fb0106b-{{checksum ".buildcache/cache-keys/package-4982c3b0795245e08be4e754005baa7d1fb0106b"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-5e88ec9a846b1348b401677b43ea39d0d8d7df57.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-5e88ec9a846b1348b401677b43ea39d0d8d7df57-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_5e88_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5e88ec9a846b1348b401677b43ea39d0d8d7df57"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-5e88ec9a846b1348b401677b43ea39d0d8d7df57.tar.gz
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 44b3acac480a7fd60444568c9a36839c9c91512a
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-44b3acac480a7fd60444568c9a36839c9c91512a-{{checksum ".buildcache/cache-keys/package-44b3acac480a7fd60444568c9a36839c9c91512a"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_c8f8_{{checksum ".buildcache/cache-keys/copy-source-c8f8332b6719a176bb2df16f44f34a61c9b38cbf"}}
        - cache001-warm-go-build-vendor-cache_c393_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c39383654903aab6fda6840b96f8bfdc85159c1b"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-44b3acac480a7fd60444568c9a36839c9c91512a-{{checksum ".buildcache/cache-keys/package-44b3acac480a7fd60444568c9a36839c9c91512a"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-c39383654903aab6fda6840b96f8bfdc85159c1b.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-c39383654903aab6fda6840b96f8bfdc85159c1b-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_c393_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c39383654903aab6fda6840b96f8bfdc85159c1b"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-c39383654903aab6fda6840b96f8bfdc85159c1b.tar.gz
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d18af84f33b3616839ef5da1aa9358e817004ae8
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache001-package-d18af84f33b3616839ef5da1aa9358e817004ae8-{{checksum ".buildcache/cache-keys/package-d18af84f33b3616839ef5da1aa9358e817004ae8"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-copy-source_3b23_{{checksum ".buildcache/cache-keys/copy-source-3b2311b879ea9abc915993c4412269f439969033"}}
        - cache001-warm-go-build-vendor-cache_7836_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7836de890494cbdf49dadaf03d33c0ba6e7e39e1"}}
        - cache001-build-static-assets_1e7f_{{checksum ".buildcache/cache-keys/build-static-assets-1e7fdcaf3ce9d5062566cc08a232a34b7d4eda61"}}
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache001-package-d18af84f33b3616839ef5da1aa9358e817004ae8-{{checksum ".buildcache/cache-keys/package-d18af84f33b3616839ef5da1aa9358e817004ae8"}}
        paths:
        - .buildcache/packages/store
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-7836de890494cbdf49dadaf03d33c0ba6e7e39e1.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-7836de890494cbdf49dadaf03d33c0ba6e7e39e1-save
    - save_cache:
        key: cache001-warm-go-build-vendor-cache_7836_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-7836de890494cbdf49dadaf03d33c0ba6e7e39e1"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-7836de890494cbdf49dadaf03d33c0ba6e7e39e1.tar.gz
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
  cache-builder-images:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        - cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        - cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        - cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        - cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        - cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        - cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
    - run:
        command: |
          if [ -f .buildcache/archives/06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: make -f packages*.lock/layer.mk 00-base-31734631257b3779d02665ecc77e06482f6104e8-image
    - run:
        command: make -f packages*.lock/layer.mk 01-install-go-9746fa3758fb195d56f9629e73905f988d161594-image
    - run:
        command: make -f packages*.lock/layer.mk 02-install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0-image
    - run:
        command: make -f packages*.lock/layer.mk 03-set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a-image
    - run:
        command: make -f packages*.lock/layer.mk 04-install-yarn-10fb9a2751528de745056deba395f0f9581bd189-image
    - run:
        command: make -f packages*.lock/layer.mk 05-ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499-image
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c-image
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c-save
    - save_cache:
        key: cache001-build-ui_1a75_{{checksum ".buildcache/cache-keys/build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c"}}
        paths:
        - .buildcache/archives/06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c.tar.gz
    - run:
        command: mv .buildcache/archives/06-build-ui-1a7571280c13a806009c6b0a3dcb1f50b97a3a9c.tar.gz .buildcache/archives/05-ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499.tar.gz
    - save_cache:
        key: cache001-ui-dependencies_9d27_{{checksum ".buildcache/cache-keys/ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499"}}
        paths:
        - .buildcache/archives/05-ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499.tar.gz
    - run:
        command: mv .buildcache/archives/05-ui-dependencies-9d2747f7a765dd002fc45a23994a1348fcf80499.tar.gz .buildcache/archives/04-install-yarn-10fb9a2751528de745056deba395f0f9581bd189.tar.gz
    - save_cache:
        key: cache001-install-yarn_10fb_{{checksum ".buildcache/cache-keys/install-yarn-10fb9a2751528de745056deba395f0f9581bd189"}}
        paths:
        - .buildcache/archives/04-install-yarn-10fb9a2751528de745056deba395f0f9581bd189.tar.gz
    - run:
        command: mv .buildcache/archives/04-install-yarn-10fb9a2751528de745056deba395f0f9581bd189.tar.gz .buildcache/archives/03-set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a.tar.gz
    - save_cache:
        key: cache001-set-workdir_036e_{{checksum ".buildcache/cache-keys/set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a"}}
        paths:
        - .buildcache/archives/03-set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a.tar.gz
    - run:
        command: mv .buildcache/archives/03-set-workdir-036e2ce508bbb07e41a6eec925ead993cbaaee8a.tar.gz .buildcache/archives/02-install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0.tar.gz
    - save_cache:
        key: cache001-install-go-tools_f5cd_{{checksum ".buildcache/cache-keys/install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0"}}
        paths:
        - .buildcache/archives/02-install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0.tar.gz
    - run:
        command: mv .buildcache/archives/02-install-go-tools-f5cd45b9f2a25d201bd0bf608c5e424e8d8632c0.tar.gz .buildcache/archives/01-install-go-9746fa3758fb195d56f9629e73905f988d161594.tar.gz
    - save_cache:
        key: cache001-install-go_9746_{{checksum ".buildcache/cache-keys/install-go-9746fa3758fb195d56f9629e73905f988d161594"}}
        paths:
        - .buildcache/archives/01-install-go-9746fa3758fb195d56f9629e73905f988d161594.tar.gz
    - run:
        command: mv .buildcache/archives/01-install-go-9746fa3758fb195d56f9629e73905f988d161594.tar.gz .buildcache/archives/00-base-31734631257b3779d02665ecc77e06482f6104e8.tar.gz
    - save_cache:
        key: cache001-base_3173_{{checksum ".buildcache/cache-keys/base-31734631257b3779d02665ecc77e06482f6104e8"}}
        paths:
        - .buildcache/archives/00-base-31734631257b3779d02665ecc77e06482f6104e8.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
workflows:
  build-standalone:
    jobs:
    - cache-builder-images
    - darwin_386_package:
        requires:
        - cache-builder-images
    - darwin_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_386_package:
        requires:
        - cache-builder-images
    - freebsd_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_arm_package:
        requires:
        - cache-builder-images
    - linux_386_package:
        requires:
        - cache-builder-images
    - linux_amd64_package:
        requires:
        - cache-builder-images
    - linux_arm_package:
        requires:
        - cache-builder-images
    - linux_arm64_package:
        requires:
        - cache-builder-images
    - netbsd_386_package:
        requires:
        - cache-builder-images
    - netbsd_amd64_package:
        requires:
        - cache-builder-images
    - openbsd_386_package:
        requires:
        - cache-builder-images
    - openbsd_amd64_package:
        requires:
        - cache-builder-images
    - solaris_amd64_package:
        requires:
        - cache-builder-images
    - windows_386_package:
        requires:
        - cache-builder-images
    - windows_amd64_package:
        requires:
        - cache-builder-images
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
