version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
          keys:
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-d4103be58748b6e071db728cbd54220aa1e4326e make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-8dde98d41082e5612aa95b0984d75c52c11c2802-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-d4103be58748b6e071db728cbd54220aa1e4326e-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-d4103be58748b6e071db728cbd54220aa1e4326e-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-d4103be58748b6e071db728cbd54220aa1e4326e.tar.gz
          key: build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1-{{checksum ".buildcache/cache-keys/package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1"}}
          name: Restore package cache
      - restore_cache:
          key: package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6-{{checksum ".buildcache/cache-keys/package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6"}}
          name: Restore package cache
      - restore_cache:
          key: package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3-{{checksum ".buildcache/cache-keys/package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3"}}
          name: Restore package cache
      - restore_cache:
          key: package-4ee502a4b97ff101017ea1960bd6227412c377fd-{{checksum ".buildcache/cache-keys/package-4ee502a4b97ff101017ea1960bd6227412c377fd"}}
          name: Restore package cache
      - restore_cache:
          key: package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62-{{checksum ".buildcache/cache-keys/package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62"}}
          name: Restore package cache
      - restore_cache:
          key: package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e-{{checksum ".buildcache/cache-keys/package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e"}}
          name: Restore package cache
      - restore_cache:
          key: package-eb9624410547ae13b947829605b4a69f4e2355cf-{{checksum ".buildcache/cache-keys/package-eb9624410547ae13b947829605b4a69f4e2355cf"}}
          name: Restore package cache
      - restore_cache:
          key: package-52a4092a18c67dacc6e2132f451231d3c0ad5350-{{checksum ".buildcache/cache-keys/package-52a4092a18c67dacc6e2132f451231d3c0ad5350"}}
          name: Restore package cache
      - restore_cache:
          key: package-5eda110323a6276136c3a32f79d69463852f91d7-{{checksum ".buildcache/cache-keys/package-5eda110323a6276136c3a32f79d69463852f91d7"}}
          name: Restore package cache
      - restore_cache:
          key: package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5-{{checksum ".buildcache/cache-keys/package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5"}}
          name: Restore package cache
      - restore_cache:
          key: package-288879a49947b0156f67341dfa2e52d65d4d63fe-{{checksum ".buildcache/cache-keys/package-288879a49947b0156f67341dfa2e52d65d4d63fe"}}
          name: Restore package cache
      - restore_cache:
          key: package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26-{{checksum ".buildcache/cache-keys/package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26"}}
          name: Restore package cache
      - restore_cache:
          key: package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77-{{checksum ".buildcache/cache-keys/package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77"}}
          name: Restore package cache
      - restore_cache:
          key: package-54ebb851411a86b0f05499d1275f45b64b74c032-{{checksum ".buildcache/cache-keys/package-54ebb851411a86b0f05499d1275f45b64b74c032"}}
          name: Restore package cache
      - restore_cache:
          key: package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721-{{checksum ".buildcache/cache-keys/package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-439e958000af378a.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-439e958000af378a.tar.gz .buildcache/packages lockfile-439e958000af378a.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-439e958000af378a.tar.gz .buildcache/packages/store/*.json lockfile-439e958000af378a.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-439e958000af378a.yml
      - store_artifacts:
          path: packages-439e958000af378a.tar.gz
      - store_artifacts:
          path: meta-439e958000af378a.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1-{{checksum ".buildcache/cache-keys/package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1-{{checksum ".buildcache/cache-keys/package-83aaf1a9b14f45042b699ab313455cd2b4ee9fb1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 83aaf1a9b14f45042b699ab313455cd2b4ee9fb1
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6-{{checksum ".buildcache/cache-keys/package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6-{{checksum ".buildcache/cache-keys/package-3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3c4c0cb1790bac5865da0757a8c3c87ac65eb5a6
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3-{{checksum ".buildcache/cache-keys/package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3-{{checksum ".buildcache/cache-keys/package-bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bf03c8c1695d649ed9d6cb3f1f8bb250b81c38c3
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4ee502a4b97ff101017ea1960bd6227412c377fd-{{checksum ".buildcache/cache-keys/package-4ee502a4b97ff101017ea1960bd6227412c377fd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4ee502a4b97ff101017ea1960bd6227412c377fd-{{checksum ".buildcache/cache-keys/package-4ee502a4b97ff101017ea1960bd6227412c377fd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4ee502a4b97ff101017ea1960bd6227412c377fd
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62-{{checksum ".buildcache/cache-keys/package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62-{{checksum ".buildcache/cache-keys/package-48ce5c746842cfb9ae9dcad50fa1bab08b863d62"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 48ce5c746842cfb9ae9dcad50fa1bab08b863d62
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e-{{checksum ".buildcache/cache-keys/package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e-{{checksum ".buildcache/cache-keys/package-e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e1dbfb4cbd89fa9b6009bffa7733c6e22cebb88e
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eb9624410547ae13b947829605b4a69f4e2355cf-{{checksum ".buildcache/cache-keys/package-eb9624410547ae13b947829605b4a69f4e2355cf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eb9624410547ae13b947829605b4a69f4e2355cf-{{checksum ".buildcache/cache-keys/package-eb9624410547ae13b947829605b4a69f4e2355cf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eb9624410547ae13b947829605b4a69f4e2355cf
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-52a4092a18c67dacc6e2132f451231d3c0ad5350-{{checksum ".buildcache/cache-keys/package-52a4092a18c67dacc6e2132f451231d3c0ad5350"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-52a4092a18c67dacc6e2132f451231d3c0ad5350-{{checksum ".buildcache/cache-keys/package-52a4092a18c67dacc6e2132f451231d3c0ad5350"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 52a4092a18c67dacc6e2132f451231d3c0ad5350
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5eda110323a6276136c3a32f79d69463852f91d7-{{checksum ".buildcache/cache-keys/package-5eda110323a6276136c3a32f79d69463852f91d7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5eda110323a6276136c3a32f79d69463852f91d7-{{checksum ".buildcache/cache-keys/package-5eda110323a6276136c3a32f79d69463852f91d7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5eda110323a6276136c3a32f79d69463852f91d7
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5-{{checksum ".buildcache/cache-keys/package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5-{{checksum ".buildcache/cache-keys/package-45fa55a76efbe60e12a7e950e86b5a8b9101f0a5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 45fa55a76efbe60e12a7e950e86b5a8b9101f0a5
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-288879a49947b0156f67341dfa2e52d65d4d63fe-{{checksum ".buildcache/cache-keys/package-288879a49947b0156f67341dfa2e52d65d4d63fe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-288879a49947b0156f67341dfa2e52d65d4d63fe-{{checksum ".buildcache/cache-keys/package-288879a49947b0156f67341dfa2e52d65d4d63fe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 288879a49947b0156f67341dfa2e52d65d4d63fe
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26-{{checksum ".buildcache/cache-keys/package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26-{{checksum ".buildcache/cache-keys/package-a7d37f46fa8a266d4fcc5e257d939c457d2c1c26"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a7d37f46fa8a266d4fcc5e257d939c457d2c1c26
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77-{{checksum ".buildcache/cache-keys/package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77-{{checksum ".buildcache/cache-keys/package-9e98262d3fcde7a4f5343f7fe25e21756ded9a77"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9e98262d3fcde7a4f5343f7fe25e21756ded9a77
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-54ebb851411a86b0f05499d1275f45b64b74c032-{{checksum ".buildcache/cache-keys/package-54ebb851411a86b0f05499d1275f45b64b74c032"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-54ebb851411a86b0f05499d1275f45b64b74c032-{{checksum ".buildcache/cache-keys/package-54ebb851411a86b0f05499d1275f45b64b74c032"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 54ebb851411a86b0f05499d1275f45b64b74c032
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721-{{checksum ".buildcache/cache-keys/package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_06ef_{{checksum ".buildcache/cache-keys/copy-source-06ef506e66bbcb20bd02ee09a472afa30f5f1fdc"}}
          keys:
            - warm-go-build-vendor-cache_934a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-934adbf0c61d08f133350a0d6a25bb0d173fea84"}}
            - build-static-assets_c16c_{{checksum ".buildcache/cache-keys/build-static-assets-c16c92ba6efaac1d8ce78e253494d5990e673532"}}
            - build-ui_d410_{{checksum ".buildcache/cache-keys/build-ui-d4103be58748b6e071db728cbd54220aa1e4326e"}}
            - ui-dependencies_91f5_{{checksum ".buildcache/cache-keys/ui-dependencies-91f59cc67fec4697ade6f0c892970ba7bd23e0a8"}}
            - install-yarn_bbaf_{{checksum ".buildcache/cache-keys/install-yarn-bbaf7b58ff71fac3d054dba364ea5aa9169cf9f7"}}
            - set-workdir_f573_{{checksum ".buildcache/cache-keys/set-workdir-f57397d33d7a62ba66ebcc200ecf774e5b8bda25"}}
            - install-go-tools_93ff_{{checksum ".buildcache/cache-keys/install-go-tools-93ff4bda3b82e8d26d9ed37fb2b8843639dd4761"}}
            - install-go_8dde_{{checksum ".buildcache/cache-keys/install-go-8dde98d41082e5612aa95b0984d75c52c11c2802"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721-{{checksum ".buildcache/cache-keys/package-ad5e8d34df02b5ad2dd18d56208d1806c3f2a721"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ad5e8d34df02b5ad2dd18d56208d1806c3f2a721
workflows:
  build-439e958000af378a:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
