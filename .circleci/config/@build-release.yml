version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
          keys:
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-788d40400c735b43608543ea45bd71af80a15539 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-24041173bb3db182ef43fbc56adf0ed684038a10-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-788d40400c735b43608543ea45bd71af80a15539-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-788d40400c735b43608543ea45bd71af80a15539-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-788d40400c735b43608543ea45bd71af80a15539.tar.gz
          key: build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-39186437f4db04ca19e2b3ded122b4a2867f0831-{{checksum ".buildcache/cache-keys/package-39186437f4db04ca19e2b3ded122b4a2867f0831"}}
          name: Restore package cache
      - restore_cache:
          key: package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f-{{checksum ".buildcache/cache-keys/package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f"}}
          name: Restore package cache
      - restore_cache:
          key: package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68-{{checksum ".buildcache/cache-keys/package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68"}}
          name: Restore package cache
      - restore_cache:
          key: package-8077c39fa166f84e0151326b16a0c2b12701006c-{{checksum ".buildcache/cache-keys/package-8077c39fa166f84e0151326b16a0c2b12701006c"}}
          name: Restore package cache
      - restore_cache:
          key: package-f33b3a59b7691094c2826ee62d8a1c540668407f-{{checksum ".buildcache/cache-keys/package-f33b3a59b7691094c2826ee62d8a1c540668407f"}}
          name: Restore package cache
      - restore_cache:
          key: package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2-{{checksum ".buildcache/cache-keys/package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2"}}
          name: Restore package cache
      - restore_cache:
          key: package-fc351c4649598124c832ae48e235ec161cd51496-{{checksum ".buildcache/cache-keys/package-fc351c4649598124c832ae48e235ec161cd51496"}}
          name: Restore package cache
      - restore_cache:
          key: package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765-{{checksum ".buildcache/cache-keys/package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765"}}
          name: Restore package cache
      - restore_cache:
          key: package-311329c9fe5683d2a16fcc66915b36739eca29af-{{checksum ".buildcache/cache-keys/package-311329c9fe5683d2a16fcc66915b36739eca29af"}}
          name: Restore package cache
      - restore_cache:
          key: package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2-{{checksum ".buildcache/cache-keys/package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2"}}
          name: Restore package cache
      - restore_cache:
          key: package-7475fffc4395ae6941f0ee13893b202ac8b58336-{{checksum ".buildcache/cache-keys/package-7475fffc4395ae6941f0ee13893b202ac8b58336"}}
          name: Restore package cache
      - restore_cache:
          key: package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf-{{checksum ".buildcache/cache-keys/package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf"}}
          name: Restore package cache
      - restore_cache:
          key: package-186186f4adf5d99c44c2a9cda71234a4fafe3391-{{checksum ".buildcache/cache-keys/package-186186f4adf5d99c44c2a9cda71234a4fafe3391"}}
          name: Restore package cache
      - restore_cache:
          key: package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c-{{checksum ".buildcache/cache-keys/package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c"}}
          name: Restore package cache
      - restore_cache:
          key: package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635-{{checksum ".buildcache/cache-keys/package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-696dfd3c40ef1f05.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-696dfd3c40ef1f05.tar.gz .buildcache/packages lockfile-696dfd3c40ef1f05.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-696dfd3c40ef1f05.tar.gz .buildcache/packages/store/*.json lockfile-696dfd3c40ef1f05.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-696dfd3c40ef1f05.yml
      - store_artifacts:
          path: packages-696dfd3c40ef1f05.tar.gz
      - store_artifacts:
          path: meta-696dfd3c40ef1f05.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-39186437f4db04ca19e2b3ded122b4a2867f0831-{{checksum ".buildcache/cache-keys/package-39186437f4db04ca19e2b3ded122b4a2867f0831"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-39186437f4db04ca19e2b3ded122b4a2867f0831-{{checksum ".buildcache/cache-keys/package-39186437f4db04ca19e2b3ded122b4a2867f0831"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 39186437f4db04ca19e2b3ded122b4a2867f0831
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f-{{checksum ".buildcache/cache-keys/package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f-{{checksum ".buildcache/cache-keys/package-0f8899d8c9dad431fe2e07a04d8aeb014c28083f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0f8899d8c9dad431fe2e07a04d8aeb014c28083f
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68-{{checksum ".buildcache/cache-keys/package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68-{{checksum ".buildcache/cache-keys/package-4a4d02a64e4a9b9c761acf5e57bdd4329defdb68"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4a4d02a64e4a9b9c761acf5e57bdd4329defdb68
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8077c39fa166f84e0151326b16a0c2b12701006c-{{checksum ".buildcache/cache-keys/package-8077c39fa166f84e0151326b16a0c2b12701006c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8077c39fa166f84e0151326b16a0c2b12701006c-{{checksum ".buildcache/cache-keys/package-8077c39fa166f84e0151326b16a0c2b12701006c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8077c39fa166f84e0151326b16a0c2b12701006c
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f33b3a59b7691094c2826ee62d8a1c540668407f-{{checksum ".buildcache/cache-keys/package-f33b3a59b7691094c2826ee62d8a1c540668407f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f33b3a59b7691094c2826ee62d8a1c540668407f-{{checksum ".buildcache/cache-keys/package-f33b3a59b7691094c2826ee62d8a1c540668407f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f33b3a59b7691094c2826ee62d8a1c540668407f
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2-{{checksum ".buildcache/cache-keys/package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2-{{checksum ".buildcache/cache-keys/package-4833a29faf2adb5bdf754cf949d072da6ba1f3e2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4833a29faf2adb5bdf754cf949d072da6ba1f3e2
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fc351c4649598124c832ae48e235ec161cd51496-{{checksum ".buildcache/cache-keys/package-fc351c4649598124c832ae48e235ec161cd51496"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fc351c4649598124c832ae48e235ec161cd51496-{{checksum ".buildcache/cache-keys/package-fc351c4649598124c832ae48e235ec161cd51496"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fc351c4649598124c832ae48e235ec161cd51496
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765-{{checksum ".buildcache/cache-keys/package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765-{{checksum ".buildcache/cache-keys/package-a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a0ed38cf3a45aa0402cc6ea6634ae3e3f3820765
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-311329c9fe5683d2a16fcc66915b36739eca29af-{{checksum ".buildcache/cache-keys/package-311329c9fe5683d2a16fcc66915b36739eca29af"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-311329c9fe5683d2a16fcc66915b36739eca29af-{{checksum ".buildcache/cache-keys/package-311329c9fe5683d2a16fcc66915b36739eca29af"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 311329c9fe5683d2a16fcc66915b36739eca29af
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2-{{checksum ".buildcache/cache-keys/package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2-{{checksum ".buildcache/cache-keys/package-c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c8eb082b1539ca0f454461cfdd1cb2e3a1e49ae2
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7475fffc4395ae6941f0ee13893b202ac8b58336-{{checksum ".buildcache/cache-keys/package-7475fffc4395ae6941f0ee13893b202ac8b58336"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7475fffc4395ae6941f0ee13893b202ac8b58336-{{checksum ".buildcache/cache-keys/package-7475fffc4395ae6941f0ee13893b202ac8b58336"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7475fffc4395ae6941f0ee13893b202ac8b58336
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf-{{checksum ".buildcache/cache-keys/package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf-{{checksum ".buildcache/cache-keys/package-bd8908079fc2097964c7c0d090a63f2ee4c5b4cf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bd8908079fc2097964c7c0d090a63f2ee4c5b4cf
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-186186f4adf5d99c44c2a9cda71234a4fafe3391-{{checksum ".buildcache/cache-keys/package-186186f4adf5d99c44c2a9cda71234a4fafe3391"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-186186f4adf5d99c44c2a9cda71234a4fafe3391-{{checksum ".buildcache/cache-keys/package-186186f4adf5d99c44c2a9cda71234a4fafe3391"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 186186f4adf5d99c44c2a9cda71234a4fafe3391
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c-{{checksum ".buildcache/cache-keys/package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c-{{checksum ".buildcache/cache-keys/package-b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b8ccf878bcdb6d6dcdd27c0f572fef2ec542168c
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635-{{checksum ".buildcache/cache-keys/package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bac_{{checksum ".buildcache/cache-keys/copy-source-7bac14460024898b8f246d139290ab887bd769c5"}}
          keys:
            - warm-go-build-vendor-cache_78b2_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-78b23efbd71d7e1183ff881d09f40ed8075510cb"}}
            - build-static-assets_fce2_{{checksum ".buildcache/cache-keys/build-static-assets-fce2bdfb77479885b0da7cf86fb54271abea1bc6"}}
            - build-ui_788d_{{checksum ".buildcache/cache-keys/build-ui-788d40400c735b43608543ea45bd71af80a15539"}}
            - ui-dependencies_8172_{{checksum ".buildcache/cache-keys/ui-dependencies-8172f65df2f8ea8483c8a0bf9fd4174f862e6a9c"}}
            - install-yarn_c312_{{checksum ".buildcache/cache-keys/install-yarn-c312927417aa95e305383b43ef58cd1fd1789fe3"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635-{{checksum ".buildcache/cache-keys/package-1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1f1adc1f35b61a9a136b60dfb3d2a03f58bb5635
workflows:
  build-696dfd3c40ef1f05:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
