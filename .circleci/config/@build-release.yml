version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
          keys:
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-1e9ce00414e9ccf6463786c1cd3856597500a804-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442.tar.gz
          key: build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8-{{checksum ".buildcache/cache-keys/package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8"}}
          name: Restore package cache
      - restore_cache:
          key: package-256ad4389939ee8d5cd28d2460922e6a9a9213b9-{{checksum ".buildcache/cache-keys/package-256ad4389939ee8d5cd28d2460922e6a9a9213b9"}}
          name: Restore package cache
      - restore_cache:
          key: package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca-{{checksum ".buildcache/cache-keys/package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca"}}
          name: Restore package cache
      - restore_cache:
          key: package-6a82c503d5bc62334e07c271d56751ec5c5e0296-{{checksum ".buildcache/cache-keys/package-6a82c503d5bc62334e07c271d56751ec5c5e0296"}}
          name: Restore package cache
      - restore_cache:
          key: package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c-{{checksum ".buildcache/cache-keys/package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c"}}
          name: Restore package cache
      - restore_cache:
          key: package-2ff3f2d2f2b735bcb63829d18c8668debb21b324-{{checksum ".buildcache/cache-keys/package-2ff3f2d2f2b735bcb63829d18c8668debb21b324"}}
          name: Restore package cache
      - restore_cache:
          key: package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad-{{checksum ".buildcache/cache-keys/package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad"}}
          name: Restore package cache
      - restore_cache:
          key: package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e-{{checksum ".buildcache/cache-keys/package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e"}}
          name: Restore package cache
      - restore_cache:
          key: package-93abd818868d18be374d5b59170e9c911d9c458e-{{checksum ".buildcache/cache-keys/package-93abd818868d18be374d5b59170e9c911d9c458e"}}
          name: Restore package cache
      - restore_cache:
          key: package-52d31ca0522c9d1d9e1e91e188b2da8785042803-{{checksum ".buildcache/cache-keys/package-52d31ca0522c9d1d9e1e91e188b2da8785042803"}}
          name: Restore package cache
      - restore_cache:
          key: package-df05bba7d184b360274950a86ec386d8c94c25d4-{{checksum ".buildcache/cache-keys/package-df05bba7d184b360274950a86ec386d8c94c25d4"}}
          name: Restore package cache
      - restore_cache:
          key: package-217eece797c0cf3f3efc9e4678b419927054baa3-{{checksum ".buildcache/cache-keys/package-217eece797c0cf3f3efc9e4678b419927054baa3"}}
          name: Restore package cache
      - restore_cache:
          key: package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f-{{checksum ".buildcache/cache-keys/package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f"}}
          name: Restore package cache
      - restore_cache:
          key: package-5645004a89e076e5f75ce1c0409a21169d44b5a1-{{checksum ".buildcache/cache-keys/package-5645004a89e076e5f75ce1c0409a21169d44b5a1"}}
          name: Restore package cache
      - restore_cache:
          key: package-adcbfdfbf98920715a2a35b77442385a6f8e58e4-{{checksum ".buildcache/cache-keys/package-adcbfdfbf98920715a2a35b77442385a6f8e58e4"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-ba9c722cad6509fb.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-ba9c722cad6509fb.tar.gz .buildcache/packages lockfile-ba9c722cad6509fb.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-ba9c722cad6509fb.tar.gz .buildcache/packages/store/*.json lockfile-ba9c722cad6509fb.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-ba9c722cad6509fb.yml
      - store_artifacts:
          path: packages-ba9c722cad6509fb.tar.gz
      - store_artifacts:
          path: meta-ba9c722cad6509fb.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8-{{checksum ".buildcache/cache-keys/package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8-{{checksum ".buildcache/cache-keys/package-b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b713a96fe1bc6026b12ec946eba8a7e2ca23eeb8
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-256ad4389939ee8d5cd28d2460922e6a9a9213b9-{{checksum ".buildcache/cache-keys/package-256ad4389939ee8d5cd28d2460922e6a9a9213b9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-256ad4389939ee8d5cd28d2460922e6a9a9213b9-{{checksum ".buildcache/cache-keys/package-256ad4389939ee8d5cd28d2460922e6a9a9213b9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 256ad4389939ee8d5cd28d2460922e6a9a9213b9
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca-{{checksum ".buildcache/cache-keys/package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca-{{checksum ".buildcache/cache-keys/package-d5378484a7dbe01b4ec392f26ef51b3f235a48ca"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d5378484a7dbe01b4ec392f26ef51b3f235a48ca
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6a82c503d5bc62334e07c271d56751ec5c5e0296-{{checksum ".buildcache/cache-keys/package-6a82c503d5bc62334e07c271d56751ec5c5e0296"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6a82c503d5bc62334e07c271d56751ec5c5e0296-{{checksum ".buildcache/cache-keys/package-6a82c503d5bc62334e07c271d56751ec5c5e0296"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6a82c503d5bc62334e07c271d56751ec5c5e0296
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c-{{checksum ".buildcache/cache-keys/package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c-{{checksum ".buildcache/cache-keys/package-f1a8d769fe41d931b8fbc2608a652c0c62948a4c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f1a8d769fe41d931b8fbc2608a652c0c62948a4c
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2ff3f2d2f2b735bcb63829d18c8668debb21b324-{{checksum ".buildcache/cache-keys/package-2ff3f2d2f2b735bcb63829d18c8668debb21b324"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2ff3f2d2f2b735bcb63829d18c8668debb21b324-{{checksum ".buildcache/cache-keys/package-2ff3f2d2f2b735bcb63829d18c8668debb21b324"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2ff3f2d2f2b735bcb63829d18c8668debb21b324
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad-{{checksum ".buildcache/cache-keys/package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad-{{checksum ".buildcache/cache-keys/package-8ea594287a1e524b0251dc0802fc3d2b6f01c5ad"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8ea594287a1e524b0251dc0802fc3d2b6f01c5ad
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e-{{checksum ".buildcache/cache-keys/package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e-{{checksum ".buildcache/cache-keys/package-4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4759beb6bbd8743d0cbc0dfdb7a0cf4f3a20513e
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-93abd818868d18be374d5b59170e9c911d9c458e-{{checksum ".buildcache/cache-keys/package-93abd818868d18be374d5b59170e9c911d9c458e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-93abd818868d18be374d5b59170e9c911d9c458e-{{checksum ".buildcache/cache-keys/package-93abd818868d18be374d5b59170e9c911d9c458e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 93abd818868d18be374d5b59170e9c911d9c458e
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-52d31ca0522c9d1d9e1e91e188b2da8785042803-{{checksum ".buildcache/cache-keys/package-52d31ca0522c9d1d9e1e91e188b2da8785042803"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-52d31ca0522c9d1d9e1e91e188b2da8785042803-{{checksum ".buildcache/cache-keys/package-52d31ca0522c9d1d9e1e91e188b2da8785042803"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 52d31ca0522c9d1d9e1e91e188b2da8785042803
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-df05bba7d184b360274950a86ec386d8c94c25d4-{{checksum ".buildcache/cache-keys/package-df05bba7d184b360274950a86ec386d8c94c25d4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-df05bba7d184b360274950a86ec386d8c94c25d4-{{checksum ".buildcache/cache-keys/package-df05bba7d184b360274950a86ec386d8c94c25d4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: df05bba7d184b360274950a86ec386d8c94c25d4
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-217eece797c0cf3f3efc9e4678b419927054baa3-{{checksum ".buildcache/cache-keys/package-217eece797c0cf3f3efc9e4678b419927054baa3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-217eece797c0cf3f3efc9e4678b419927054baa3-{{checksum ".buildcache/cache-keys/package-217eece797c0cf3f3efc9e4678b419927054baa3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 217eece797c0cf3f3efc9e4678b419927054baa3
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f-{{checksum ".buildcache/cache-keys/package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f-{{checksum ".buildcache/cache-keys/package-b3aa69f4882e666f6b2e0f02bba1fd7b1772812f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b3aa69f4882e666f6b2e0f02bba1fd7b1772812f
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5645004a89e076e5f75ce1c0409a21169d44b5a1-{{checksum ".buildcache/cache-keys/package-5645004a89e076e5f75ce1c0409a21169d44b5a1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5645004a89e076e5f75ce1c0409a21169d44b5a1-{{checksum ".buildcache/cache-keys/package-5645004a89e076e5f75ce1c0409a21169d44b5a1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5645004a89e076e5f75ce1c0409a21169d44b5a1
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-adcbfdfbf98920715a2a35b77442385a6f8e58e4-{{checksum ".buildcache/cache-keys/package-adcbfdfbf98920715a2a35b77442385a6f8e58e4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b338_{{checksum ".buildcache/cache-keys/copy-source-b3387f89c41d887a1275565b84f7eb9fa6f700c8"}}
          keys:
            - warm-go-build-vendor-cache_fda8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fda8fa774fbd41bb0cce362d3292628dc9f2b7d0"}}
            - build-static-assets_6dd8_{{checksum ".buildcache/cache-keys/build-static-assets-6dd82bd83ea2f41a311b54d9f07ca377027fed88"}}
            - build-ui_1ca8_{{checksum ".buildcache/cache-keys/build-ui-1ca8a36858a0b9ce0b1dada47863943cd7e8a442"}}
            - ui-dependencies_d925_{{checksum ".buildcache/cache-keys/ui-dependencies-d925367222dabe7aa28ea117751f8f65116c6f82"}}
            - install-yarn_b293_{{checksum ".buildcache/cache-keys/install-yarn-b293b4b5e3c9c42ea19ffa24383e4263b28c6e7d"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-adcbfdfbf98920715a2a35b77442385a6f8e58e4-{{checksum ".buildcache/cache-keys/package-adcbfdfbf98920715a2a35b77442385a6f8e58e4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: adcbfdfbf98920715a2a35b77442385a6f8e58e4
workflows:
  build-ba9c722cad6509fb:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
