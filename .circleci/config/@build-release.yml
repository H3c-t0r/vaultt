version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
          keys:
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-10cc75637e47bac27ebae14868e705e6c04da8de make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-24041173bb3db182ef43fbc56adf0ed684038a10-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-10cc75637e47bac27ebae14868e705e6c04da8de-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-10cc75637e47bac27ebae14868e705e6c04da8de-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-10cc75637e47bac27ebae14868e705e6c04da8de.tar.gz
          key: build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-a960db9bd476b3f5435b349a138a77774a53f2f2-{{checksum ".buildcache/cache-keys/package-a960db9bd476b3f5435b349a138a77774a53f2f2"}}
          name: Restore package cache
      - restore_cache:
          key: package-a28aef55709308e674861b53dcbde1d726e85a39-{{checksum ".buildcache/cache-keys/package-a28aef55709308e674861b53dcbde1d726e85a39"}}
          name: Restore package cache
      - restore_cache:
          key: package-e7c71028fca5caaefc233f9498a2efc793d5e6d7-{{checksum ".buildcache/cache-keys/package-e7c71028fca5caaefc233f9498a2efc793d5e6d7"}}
          name: Restore package cache
      - restore_cache:
          key: package-96c5f2744ef865543ebc8f4ed2549db607c75e60-{{checksum ".buildcache/cache-keys/package-96c5f2744ef865543ebc8f4ed2549db607c75e60"}}
          name: Restore package cache
      - restore_cache:
          key: package-404a80cc8f786e6ba90891f5aed43ac406f1bea7-{{checksum ".buildcache/cache-keys/package-404a80cc8f786e6ba90891f5aed43ac406f1bea7"}}
          name: Restore package cache
      - restore_cache:
          key: package-cd29159274df7393c282d72cd22cadd1fa41e416-{{checksum ".buildcache/cache-keys/package-cd29159274df7393c282d72cd22cadd1fa41e416"}}
          name: Restore package cache
      - restore_cache:
          key: package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b-{{checksum ".buildcache/cache-keys/package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b"}}
          name: Restore package cache
      - restore_cache:
          key: package-ef5f93558f1e2a438721e32be00845f0cc0c1e84-{{checksum ".buildcache/cache-keys/package-ef5f93558f1e2a438721e32be00845f0cc0c1e84"}}
          name: Restore package cache
      - restore_cache:
          key: package-87e96392588f086a723c045dc3d9a54c5a36770c-{{checksum ".buildcache/cache-keys/package-87e96392588f086a723c045dc3d9a54c5a36770c"}}
          name: Restore package cache
      - restore_cache:
          key: package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8-{{checksum ".buildcache/cache-keys/package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8"}}
          name: Restore package cache
      - restore_cache:
          key: package-490b129071c1beb8891be159779a44fb3f4df281-{{checksum ".buildcache/cache-keys/package-490b129071c1beb8891be159779a44fb3f4df281"}}
          name: Restore package cache
      - restore_cache:
          key: package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a-{{checksum ".buildcache/cache-keys/package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a"}}
          name: Restore package cache
      - restore_cache:
          key: package-347ec597e01e292e396cb2ed9770e2fd0ed990e7-{{checksum ".buildcache/cache-keys/package-347ec597e01e292e396cb2ed9770e2fd0ed990e7"}}
          name: Restore package cache
      - restore_cache:
          key: package-20184d34b52202792aa7f70c682f362eb3f4157c-{{checksum ".buildcache/cache-keys/package-20184d34b52202792aa7f70c682f362eb3f4157c"}}
          name: Restore package cache
      - restore_cache:
          key: package-3ffd0997a152d00669034bc41533909d5999b75f-{{checksum ".buildcache/cache-keys/package-3ffd0997a152d00669034bc41533909d5999b75f"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-e6fa38e6274cfc7b.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-e6fa38e6274cfc7b.tar.gz .buildcache/packages lockfile-e6fa38e6274cfc7b.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-e6fa38e6274cfc7b.tar.gz .buildcache/packages/store/*.json lockfile-e6fa38e6274cfc7b.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-e6fa38e6274cfc7b.yml
      - store_artifacts:
          path: packages-e6fa38e6274cfc7b.tar.gz
      - store_artifacts:
          path: meta-e6fa38e6274cfc7b.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a960db9bd476b3f5435b349a138a77774a53f2f2-{{checksum ".buildcache/cache-keys/package-a960db9bd476b3f5435b349a138a77774a53f2f2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a960db9bd476b3f5435b349a138a77774a53f2f2-{{checksum ".buildcache/cache-keys/package-a960db9bd476b3f5435b349a138a77774a53f2f2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a960db9bd476b3f5435b349a138a77774a53f2f2
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a28aef55709308e674861b53dcbde1d726e85a39-{{checksum ".buildcache/cache-keys/package-a28aef55709308e674861b53dcbde1d726e85a39"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a28aef55709308e674861b53dcbde1d726e85a39-{{checksum ".buildcache/cache-keys/package-a28aef55709308e674861b53dcbde1d726e85a39"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a28aef55709308e674861b53dcbde1d726e85a39
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e7c71028fca5caaefc233f9498a2efc793d5e6d7-{{checksum ".buildcache/cache-keys/package-e7c71028fca5caaefc233f9498a2efc793d5e6d7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e7c71028fca5caaefc233f9498a2efc793d5e6d7-{{checksum ".buildcache/cache-keys/package-e7c71028fca5caaefc233f9498a2efc793d5e6d7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e7c71028fca5caaefc233f9498a2efc793d5e6d7
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96c5f2744ef865543ebc8f4ed2549db607c75e60-{{checksum ".buildcache/cache-keys/package-96c5f2744ef865543ebc8f4ed2549db607c75e60"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96c5f2744ef865543ebc8f4ed2549db607c75e60-{{checksum ".buildcache/cache-keys/package-96c5f2744ef865543ebc8f4ed2549db607c75e60"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96c5f2744ef865543ebc8f4ed2549db607c75e60
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-404a80cc8f786e6ba90891f5aed43ac406f1bea7-{{checksum ".buildcache/cache-keys/package-404a80cc8f786e6ba90891f5aed43ac406f1bea7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-404a80cc8f786e6ba90891f5aed43ac406f1bea7-{{checksum ".buildcache/cache-keys/package-404a80cc8f786e6ba90891f5aed43ac406f1bea7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 404a80cc8f786e6ba90891f5aed43ac406f1bea7
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cd29159274df7393c282d72cd22cadd1fa41e416-{{checksum ".buildcache/cache-keys/package-cd29159274df7393c282d72cd22cadd1fa41e416"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cd29159274df7393c282d72cd22cadd1fa41e416-{{checksum ".buildcache/cache-keys/package-cd29159274df7393c282d72cd22cadd1fa41e416"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cd29159274df7393c282d72cd22cadd1fa41e416
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b-{{checksum ".buildcache/cache-keys/package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b-{{checksum ".buildcache/cache-keys/package-4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4ddbd5adc14e7e472d944f3d7d73cc4c3304a76b
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ef5f93558f1e2a438721e32be00845f0cc0c1e84-{{checksum ".buildcache/cache-keys/package-ef5f93558f1e2a438721e32be00845f0cc0c1e84"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ef5f93558f1e2a438721e32be00845f0cc0c1e84-{{checksum ".buildcache/cache-keys/package-ef5f93558f1e2a438721e32be00845f0cc0c1e84"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ef5f93558f1e2a438721e32be00845f0cc0c1e84
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-87e96392588f086a723c045dc3d9a54c5a36770c-{{checksum ".buildcache/cache-keys/package-87e96392588f086a723c045dc3d9a54c5a36770c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-87e96392588f086a723c045dc3d9a54c5a36770c-{{checksum ".buildcache/cache-keys/package-87e96392588f086a723c045dc3d9a54c5a36770c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 87e96392588f086a723c045dc3d9a54c5a36770c
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8-{{checksum ".buildcache/cache-keys/package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8-{{checksum ".buildcache/cache-keys/package-bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bb877a7e24db3e053de6e7fd67ef72d0ba2aa6f8
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-490b129071c1beb8891be159779a44fb3f4df281-{{checksum ".buildcache/cache-keys/package-490b129071c1beb8891be159779a44fb3f4df281"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-490b129071c1beb8891be159779a44fb3f4df281-{{checksum ".buildcache/cache-keys/package-490b129071c1beb8891be159779a44fb3f4df281"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 490b129071c1beb8891be159779a44fb3f4df281
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a-{{checksum ".buildcache/cache-keys/package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a-{{checksum ".buildcache/cache-keys/package-c6912e1f959fe4ed8074b8931cf7d979aac3b79a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c6912e1f959fe4ed8074b8931cf7d979aac3b79a
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-347ec597e01e292e396cb2ed9770e2fd0ed990e7-{{checksum ".buildcache/cache-keys/package-347ec597e01e292e396cb2ed9770e2fd0ed990e7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-347ec597e01e292e396cb2ed9770e2fd0ed990e7-{{checksum ".buildcache/cache-keys/package-347ec597e01e292e396cb2ed9770e2fd0ed990e7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 347ec597e01e292e396cb2ed9770e2fd0ed990e7
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-20184d34b52202792aa7f70c682f362eb3f4157c-{{checksum ".buildcache/cache-keys/package-20184d34b52202792aa7f70c682f362eb3f4157c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-20184d34b52202792aa7f70c682f362eb3f4157c-{{checksum ".buildcache/cache-keys/package-20184d34b52202792aa7f70c682f362eb3f4157c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 20184d34b52202792aa7f70c682f362eb3f4157c
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3ffd0997a152d00669034bc41533909d5999b75f-{{checksum ".buildcache/cache-keys/package-3ffd0997a152d00669034bc41533909d5999b75f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0d6d_{{checksum ".buildcache/cache-keys/copy-source-0d6dfdfdb3cbecf4c038808bcf1f4ddee1480e1a"}}
          keys:
            - warm-go-build-vendor-cache_62c9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-62c95384204ac8894d1e186a23883a661605d8eb"}}
            - build-static-assets_5574_{{checksum ".buildcache/cache-keys/build-static-assets-5574d48efa749df534cb3fbcf48ac95453530185"}}
            - build-ui_10cc_{{checksum ".buildcache/cache-keys/build-ui-10cc75637e47bac27ebae14868e705e6c04da8de"}}
            - ui-dependencies_7f52_{{checksum ".buildcache/cache-keys/ui-dependencies-7f52f3a66ef76423b3e6b1f7dfdb29ed4d5091d2"}}
            - install-yarn_7e1d_{{checksum ".buildcache/cache-keys/install-yarn-7e1d47005473bf961fd7cb783f2cd63bb1b20b91"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3ffd0997a152d00669034bc41533909d5999b75f-{{checksum ".buildcache/cache-keys/package-3ffd0997a152d00669034bc41533909d5999b75f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3ffd0997a152d00669034bc41533909d5999b75f
workflows:
  build-e6fa38e6274cfc7b:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
