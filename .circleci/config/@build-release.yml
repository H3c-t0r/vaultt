version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
          keys:
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d.tar.gz
          key: build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-b6acbf162125be5bde34d789472737bb1281954e-{{checksum ".buildcache/cache-keys/package-b6acbf162125be5bde34d789472737bb1281954e"}}
          name: Restore package cache
      - restore_cache:
          key: package-4638170b1ceced9bbcb23106aef8e69ac805f411-{{checksum ".buildcache/cache-keys/package-4638170b1ceced9bbcb23106aef8e69ac805f411"}}
          name: Restore package cache
      - restore_cache:
          key: package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159-{{checksum ".buildcache/cache-keys/package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159"}}
          name: Restore package cache
      - restore_cache:
          key: package-1447809c98e9aabf228b97005bf86dfb110c4b15-{{checksum ".buildcache/cache-keys/package-1447809c98e9aabf228b97005bf86dfb110c4b15"}}
          name: Restore package cache
      - restore_cache:
          key: package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82-{{checksum ".buildcache/cache-keys/package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82"}}
          name: Restore package cache
      - restore_cache:
          key: package-884b4c3a19249586a67342399318b25108bb6c84-{{checksum ".buildcache/cache-keys/package-884b4c3a19249586a67342399318b25108bb6c84"}}
          name: Restore package cache
      - restore_cache:
          key: package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402-{{checksum ".buildcache/cache-keys/package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402"}}
          name: Restore package cache
      - restore_cache:
          key: package-fb63a2673f78007c23ae1102f19e432e79adf675-{{checksum ".buildcache/cache-keys/package-fb63a2673f78007c23ae1102f19e432e79adf675"}}
          name: Restore package cache
      - restore_cache:
          key: package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165-{{checksum ".buildcache/cache-keys/package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165"}}
          name: Restore package cache
      - restore_cache:
          key: package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21-{{checksum ".buildcache/cache-keys/package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21"}}
          name: Restore package cache
      - restore_cache:
          key: package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6-{{checksum ".buildcache/cache-keys/package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6"}}
          name: Restore package cache
      - restore_cache:
          key: package-e254bd2c950fa9fe69451c9efe1927a561a6be2a-{{checksum ".buildcache/cache-keys/package-e254bd2c950fa9fe69451c9efe1927a561a6be2a"}}
          name: Restore package cache
      - restore_cache:
          key: package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b-{{checksum ".buildcache/cache-keys/package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b"}}
          name: Restore package cache
      - restore_cache:
          key: package-ada8e94370ee2fcfac71f6edab28a2242a9b9550-{{checksum ".buildcache/cache-keys/package-ada8e94370ee2fcfac71f6edab28a2242a9b9550"}}
          name: Restore package cache
      - restore_cache:
          key: package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4-{{checksum ".buildcache/cache-keys/package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-aa6453ca09bd1244.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-aa6453ca09bd1244.tar.gz .buildcache/packages lockfile-aa6453ca09bd1244.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-aa6453ca09bd1244.tar.gz .buildcache/packages/store/*.json lockfile-aa6453ca09bd1244.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-aa6453ca09bd1244.yml
      - store_artifacts:
          path: packages-aa6453ca09bd1244.tar.gz
      - store_artifacts:
          path: meta-aa6453ca09bd1244.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b6acbf162125be5bde34d789472737bb1281954e-{{checksum ".buildcache/cache-keys/package-b6acbf162125be5bde34d789472737bb1281954e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b6acbf162125be5bde34d789472737bb1281954e-{{checksum ".buildcache/cache-keys/package-b6acbf162125be5bde34d789472737bb1281954e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b6acbf162125be5bde34d789472737bb1281954e
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4638170b1ceced9bbcb23106aef8e69ac805f411-{{checksum ".buildcache/cache-keys/package-4638170b1ceced9bbcb23106aef8e69ac805f411"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4638170b1ceced9bbcb23106aef8e69ac805f411-{{checksum ".buildcache/cache-keys/package-4638170b1ceced9bbcb23106aef8e69ac805f411"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4638170b1ceced9bbcb23106aef8e69ac805f411
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159-{{checksum ".buildcache/cache-keys/package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159-{{checksum ".buildcache/cache-keys/package-97b2ec1e77a6b9552ba52f3c56673e8c07f58159"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 97b2ec1e77a6b9552ba52f3c56673e8c07f58159
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1447809c98e9aabf228b97005bf86dfb110c4b15-{{checksum ".buildcache/cache-keys/package-1447809c98e9aabf228b97005bf86dfb110c4b15"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1447809c98e9aabf228b97005bf86dfb110c4b15-{{checksum ".buildcache/cache-keys/package-1447809c98e9aabf228b97005bf86dfb110c4b15"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1447809c98e9aabf228b97005bf86dfb110c4b15
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82-{{checksum ".buildcache/cache-keys/package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82-{{checksum ".buildcache/cache-keys/package-4bc0f6a5a1443fb0607670a56ebea40327fc0f82"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4bc0f6a5a1443fb0607670a56ebea40327fc0f82
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-884b4c3a19249586a67342399318b25108bb6c84-{{checksum ".buildcache/cache-keys/package-884b4c3a19249586a67342399318b25108bb6c84"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-884b4c3a19249586a67342399318b25108bb6c84-{{checksum ".buildcache/cache-keys/package-884b4c3a19249586a67342399318b25108bb6c84"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 884b4c3a19249586a67342399318b25108bb6c84
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402-{{checksum ".buildcache/cache-keys/package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402-{{checksum ".buildcache/cache-keys/package-f6e970174f4ebfc66bcd0832d3e5a7e8618a4402"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f6e970174f4ebfc66bcd0832d3e5a7e8618a4402
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fb63a2673f78007c23ae1102f19e432e79adf675-{{checksum ".buildcache/cache-keys/package-fb63a2673f78007c23ae1102f19e432e79adf675"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fb63a2673f78007c23ae1102f19e432e79adf675-{{checksum ".buildcache/cache-keys/package-fb63a2673f78007c23ae1102f19e432e79adf675"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fb63a2673f78007c23ae1102f19e432e79adf675
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165-{{checksum ".buildcache/cache-keys/package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165-{{checksum ".buildcache/cache-keys/package-70e98eb4029a79b54da1a2c45dcd0ef22ce89165"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 70e98eb4029a79b54da1a2c45dcd0ef22ce89165
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21-{{checksum ".buildcache/cache-keys/package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21-{{checksum ".buildcache/cache-keys/package-d34a0aabe4ec290779eaff0b5a48759ce2d5cf21"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d34a0aabe4ec290779eaff0b5a48759ce2d5cf21
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6-{{checksum ".buildcache/cache-keys/package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6-{{checksum ".buildcache/cache-keys/package-6f424a2f4f41544ff99fc5961520c14d9a7c7aa6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6f424a2f4f41544ff99fc5961520c14d9a7c7aa6
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e254bd2c950fa9fe69451c9efe1927a561a6be2a-{{checksum ".buildcache/cache-keys/package-e254bd2c950fa9fe69451c9efe1927a561a6be2a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e254bd2c950fa9fe69451c9efe1927a561a6be2a-{{checksum ".buildcache/cache-keys/package-e254bd2c950fa9fe69451c9efe1927a561a6be2a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e254bd2c950fa9fe69451c9efe1927a561a6be2a
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b-{{checksum ".buildcache/cache-keys/package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b-{{checksum ".buildcache/cache-keys/package-fc4fc2e4e9df834e605e39ed150797ba2ddd426b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fc4fc2e4e9df834e605e39ed150797ba2ddd426b
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ada8e94370ee2fcfac71f6edab28a2242a9b9550-{{checksum ".buildcache/cache-keys/package-ada8e94370ee2fcfac71f6edab28a2242a9b9550"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ada8e94370ee2fcfac71f6edab28a2242a9b9550-{{checksum ".buildcache/cache-keys/package-ada8e94370ee2fcfac71f6edab28a2242a9b9550"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ada8e94370ee2fcfac71f6edab28a2242a9b9550
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4-{{checksum ".buildcache/cache-keys/package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f148_{{checksum ".buildcache/cache-keys/copy-source-f14862132af3df6fda30fdbeb4d4c28dd24f77de"}}
          keys:
            - warm-go-build-vendor-cache_9e56_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9e56ede7217911e1a8a1da0733f2f9042047ba76"}}
            - build-static-assets_04e7_{{checksum ".buildcache/cache-keys/build-static-assets-04e7a0778d2a55d0b23824ba38ebf51fd5a8744c"}}
            - build-ui_3390_{{checksum ".buildcache/cache-keys/build-ui-3390a573e64491b1d035ebe58bb57798facc7d0d"}}
            - ui-dependencies_ac8b_{{checksum ".buildcache/cache-keys/ui-dependencies-ac8be120c6d5a16da43fee57c2cecb19a70f8098"}}
            - install-yarn_3ec0_{{checksum ".buildcache/cache-keys/install-yarn-3ec09455a50e67ce0e6b9f03e2cefa3e97333a5b"}}
            - set-workdir_3310_{{checksum ".buildcache/cache-keys/set-workdir-331006d1434fd1975dad2affbf71fdbf845d22d6"}}
            - install-go-tools_dcaa_{{checksum ".buildcache/cache-keys/install-go-tools-dcaa9bb2de49ba79e84aa2ec9e02018c05e62950"}}
            - install-go_d552_{{checksum ".buildcache/cache-keys/install-go-d55278f9cd49b917d025adaeed3032cc8b0dc7d7"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4-{{checksum ".buildcache/cache-keys/package-8e0fcfcfb1754e931da9fb45089fa0172fa450c4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8e0fcfcfb1754e931da9fb45089fa0172fa450c4
workflows:
  build-aa6453ca09bd1244:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
