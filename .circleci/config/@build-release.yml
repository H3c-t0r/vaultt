version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
          keys:
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-24041173bb3db182ef43fbc56adf0ed684038a10-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9.tar.gz
          key: build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-0af0c0212c00780152f727d18e038ef6d2ea590e-{{checksum ".buildcache/cache-keys/package-0af0c0212c00780152f727d18e038ef6d2ea590e"}}
          name: Restore package cache
      - restore_cache:
          key: package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43-{{checksum ".buildcache/cache-keys/package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43"}}
          name: Restore package cache
      - restore_cache:
          key: package-f5233775317bbafa345f35dd195b6e136ae916ba-{{checksum ".buildcache/cache-keys/package-f5233775317bbafa345f35dd195b6e136ae916ba"}}
          name: Restore package cache
      - restore_cache:
          key: package-00d4adce5d928f071925ea5f095b35c6a8f94f7f-{{checksum ".buildcache/cache-keys/package-00d4adce5d928f071925ea5f095b35c6a8f94f7f"}}
          name: Restore package cache
      - restore_cache:
          key: package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f-{{checksum ".buildcache/cache-keys/package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f"}}
          name: Restore package cache
      - restore_cache:
          key: package-f24794993a2db6ee0fe57b6a3df91e2425d38c13-{{checksum ".buildcache/cache-keys/package-f24794993a2db6ee0fe57b6a3df91e2425d38c13"}}
          name: Restore package cache
      - restore_cache:
          key: package-0c36b15cc3024ef0a0fac9f5557876a2707930ee-{{checksum ".buildcache/cache-keys/package-0c36b15cc3024ef0a0fac9f5557876a2707930ee"}}
          name: Restore package cache
      - restore_cache:
          key: package-9f75a67cfba6688ca980527020e168ee99c46680-{{checksum ".buildcache/cache-keys/package-9f75a67cfba6688ca980527020e168ee99c46680"}}
          name: Restore package cache
      - restore_cache:
          key: package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa-{{checksum ".buildcache/cache-keys/package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa"}}
          name: Restore package cache
      - restore_cache:
          key: package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d-{{checksum ".buildcache/cache-keys/package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d"}}
          name: Restore package cache
      - restore_cache:
          key: package-a63aa8a22a00661bae73af66191ece669f8a648b-{{checksum ".buildcache/cache-keys/package-a63aa8a22a00661bae73af66191ece669f8a648b"}}
          name: Restore package cache
      - restore_cache:
          key: package-18169207a3b09457469c1c75380b145577775094-{{checksum ".buildcache/cache-keys/package-18169207a3b09457469c1c75380b145577775094"}}
          name: Restore package cache
      - restore_cache:
          key: package-07d05a7299a5a27d5bedeecf5536e08c00162593-{{checksum ".buildcache/cache-keys/package-07d05a7299a5a27d5bedeecf5536e08c00162593"}}
          name: Restore package cache
      - restore_cache:
          key: package-662271d85625683cadf0aeac0804b44c9e13f64c-{{checksum ".buildcache/cache-keys/package-662271d85625683cadf0aeac0804b44c9e13f64c"}}
          name: Restore package cache
      - restore_cache:
          key: package-9fb473648220a12ef92d36fe2204e2bbd391da3e-{{checksum ".buildcache/cache-keys/package-9fb473648220a12ef92d36fe2204e2bbd391da3e"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-d82725ec25481bfe.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-d82725ec25481bfe.tar.gz .buildcache/packages lockfile-d82725ec25481bfe.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-d82725ec25481bfe.tar.gz .buildcache/packages/store/*.json lockfile-d82725ec25481bfe.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-d82725ec25481bfe.yml
      - store_artifacts:
          path: packages-d82725ec25481bfe.tar.gz
      - store_artifacts:
          path: meta-d82725ec25481bfe.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0af0c0212c00780152f727d18e038ef6d2ea590e-{{checksum ".buildcache/cache-keys/package-0af0c0212c00780152f727d18e038ef6d2ea590e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0af0c0212c00780152f727d18e038ef6d2ea590e-{{checksum ".buildcache/cache-keys/package-0af0c0212c00780152f727d18e038ef6d2ea590e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0af0c0212c00780152f727d18e038ef6d2ea590e
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43-{{checksum ".buildcache/cache-keys/package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43-{{checksum ".buildcache/cache-keys/package-fbe2f2b79f6fa6c1209ee7a70f5b264400665a43"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fbe2f2b79f6fa6c1209ee7a70f5b264400665a43
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f5233775317bbafa345f35dd195b6e136ae916ba-{{checksum ".buildcache/cache-keys/package-f5233775317bbafa345f35dd195b6e136ae916ba"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f5233775317bbafa345f35dd195b6e136ae916ba-{{checksum ".buildcache/cache-keys/package-f5233775317bbafa345f35dd195b6e136ae916ba"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f5233775317bbafa345f35dd195b6e136ae916ba
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-00d4adce5d928f071925ea5f095b35c6a8f94f7f-{{checksum ".buildcache/cache-keys/package-00d4adce5d928f071925ea5f095b35c6a8f94f7f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-00d4adce5d928f071925ea5f095b35c6a8f94f7f-{{checksum ".buildcache/cache-keys/package-00d4adce5d928f071925ea5f095b35c6a8f94f7f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 00d4adce5d928f071925ea5f095b35c6a8f94f7f
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f-{{checksum ".buildcache/cache-keys/package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f-{{checksum ".buildcache/cache-keys/package-cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cd6b4186e39ba9bf74a77b0a6aa6473b39c04a4f
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f24794993a2db6ee0fe57b6a3df91e2425d38c13-{{checksum ".buildcache/cache-keys/package-f24794993a2db6ee0fe57b6a3df91e2425d38c13"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f24794993a2db6ee0fe57b6a3df91e2425d38c13-{{checksum ".buildcache/cache-keys/package-f24794993a2db6ee0fe57b6a3df91e2425d38c13"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f24794993a2db6ee0fe57b6a3df91e2425d38c13
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0c36b15cc3024ef0a0fac9f5557876a2707930ee-{{checksum ".buildcache/cache-keys/package-0c36b15cc3024ef0a0fac9f5557876a2707930ee"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0c36b15cc3024ef0a0fac9f5557876a2707930ee-{{checksum ".buildcache/cache-keys/package-0c36b15cc3024ef0a0fac9f5557876a2707930ee"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0c36b15cc3024ef0a0fac9f5557876a2707930ee
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9f75a67cfba6688ca980527020e168ee99c46680-{{checksum ".buildcache/cache-keys/package-9f75a67cfba6688ca980527020e168ee99c46680"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9f75a67cfba6688ca980527020e168ee99c46680-{{checksum ".buildcache/cache-keys/package-9f75a67cfba6688ca980527020e168ee99c46680"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9f75a67cfba6688ca980527020e168ee99c46680
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa-{{checksum ".buildcache/cache-keys/package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa-{{checksum ".buildcache/cache-keys/package-9b1a28ff393148df3edc0e6c0b3237e88e36f6aa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9b1a28ff393148df3edc0e6c0b3237e88e36f6aa
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d-{{checksum ".buildcache/cache-keys/package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d-{{checksum ".buildcache/cache-keys/package-5d61ed8e9505f32c5a8274970a04ee3c08da2f7d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5d61ed8e9505f32c5a8274970a04ee3c08da2f7d
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a63aa8a22a00661bae73af66191ece669f8a648b-{{checksum ".buildcache/cache-keys/package-a63aa8a22a00661bae73af66191ece669f8a648b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a63aa8a22a00661bae73af66191ece669f8a648b-{{checksum ".buildcache/cache-keys/package-a63aa8a22a00661bae73af66191ece669f8a648b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a63aa8a22a00661bae73af66191ece669f8a648b
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-18169207a3b09457469c1c75380b145577775094-{{checksum ".buildcache/cache-keys/package-18169207a3b09457469c1c75380b145577775094"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-18169207a3b09457469c1c75380b145577775094-{{checksum ".buildcache/cache-keys/package-18169207a3b09457469c1c75380b145577775094"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 18169207a3b09457469c1c75380b145577775094
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-07d05a7299a5a27d5bedeecf5536e08c00162593-{{checksum ".buildcache/cache-keys/package-07d05a7299a5a27d5bedeecf5536e08c00162593"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-07d05a7299a5a27d5bedeecf5536e08c00162593-{{checksum ".buildcache/cache-keys/package-07d05a7299a5a27d5bedeecf5536e08c00162593"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 07d05a7299a5a27d5bedeecf5536e08c00162593
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-662271d85625683cadf0aeac0804b44c9e13f64c-{{checksum ".buildcache/cache-keys/package-662271d85625683cadf0aeac0804b44c9e13f64c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-662271d85625683cadf0aeac0804b44c9e13f64c-{{checksum ".buildcache/cache-keys/package-662271d85625683cadf0aeac0804b44c9e13f64c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 662271d85625683cadf0aeac0804b44c9e13f64c
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9fb473648220a12ef92d36fe2204e2bbd391da3e-{{checksum ".buildcache/cache-keys/package-9fb473648220a12ef92d36fe2204e2bbd391da3e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_0bfb_{{checksum ".buildcache/cache-keys/copy-source-0bfb0d127c9deee2d6c71e875934a3a8b1bc5023"}}
          keys:
            - warm-go-build-vendor-cache_823f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-823fb1bc4377ecdac66e39cb78c8ddcf8c900323"}}
            - build-static-assets_11ca_{{checksum ".buildcache/cache-keys/build-static-assets-11ca0b82f001584c01bccb39e2bef88c38956424"}}
            - build-ui_ee92_{{checksum ".buildcache/cache-keys/build-ui-ee92279d30b5c795fe706bfceb5495b377b766a9"}}
            - ui-dependencies_af7f_{{checksum ".buildcache/cache-keys/ui-dependencies-af7ff025ec182ab7936e36c673454a000f34ba26"}}
            - install-yarn_f293_{{checksum ".buildcache/cache-keys/install-yarn-f2930248b76b552bd8a4c9a00d88a5c2205ca17d"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9fb473648220a12ef92d36fe2204e2bbd391da3e-{{checksum ".buildcache/cache-keys/package-9fb473648220a12ef92d36fe2204e2bbd391da3e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9fb473648220a12ef92d36fe2204e2bbd391da3e
workflows:
  build-d82725ec25481bfe:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
