version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
          keys:
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475.tar.gz
          key: build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-91563bf6b7dc10bbd5864ce15306b7669e851511-{{checksum ".buildcache/cache-keys/package-91563bf6b7dc10bbd5864ce15306b7669e851511"}}
          name: Restore package cache
      - restore_cache:
          key: package-9611c4887b2f546958ca8a899c710e22fbd70098-{{checksum ".buildcache/cache-keys/package-9611c4887b2f546958ca8a899c710e22fbd70098"}}
          name: Restore package cache
      - restore_cache:
          key: package-93163edbb722ab27e7da17409c13d2d196487372-{{checksum ".buildcache/cache-keys/package-93163edbb722ab27e7da17409c13d2d196487372"}}
          name: Restore package cache
      - restore_cache:
          key: package-488fbc6236e3a2c7f3a1afcb070d69979380c430-{{checksum ".buildcache/cache-keys/package-488fbc6236e3a2c7f3a1afcb070d69979380c430"}}
          name: Restore package cache
      - restore_cache:
          key: package-5ff2fed0e03958f25c02fc29c495527e5b922411-{{checksum ".buildcache/cache-keys/package-5ff2fed0e03958f25c02fc29c495527e5b922411"}}
          name: Restore package cache
      - restore_cache:
          key: package-47fb4dc60f518f8b81e790c7a04488a792e86ae6-{{checksum ".buildcache/cache-keys/package-47fb4dc60f518f8b81e790c7a04488a792e86ae6"}}
          name: Restore package cache
      - restore_cache:
          key: package-6b86c041716354840e84c637a927a768825623ac-{{checksum ".buildcache/cache-keys/package-6b86c041716354840e84c637a927a768825623ac"}}
          name: Restore package cache
      - restore_cache:
          key: package-9bd682cd3026e0955df689ae78de077069e3abf5-{{checksum ".buildcache/cache-keys/package-9bd682cd3026e0955df689ae78de077069e3abf5"}}
          name: Restore package cache
      - restore_cache:
          key: package-cdde31e1687a268592c8c9ae35aaeab543beb9b5-{{checksum ".buildcache/cache-keys/package-cdde31e1687a268592c8c9ae35aaeab543beb9b5"}}
          name: Restore package cache
      - restore_cache:
          key: package-d5520ac91b4bf1daa41b4dadd487a1f801894fed-{{checksum ".buildcache/cache-keys/package-d5520ac91b4bf1daa41b4dadd487a1f801894fed"}}
          name: Restore package cache
      - restore_cache:
          key: package-644ed7e56a14991be8d51196e41ff0ce12dff508-{{checksum ".buildcache/cache-keys/package-644ed7e56a14991be8d51196e41ff0ce12dff508"}}
          name: Restore package cache
      - restore_cache:
          key: package-34e36b80e4821e545e8aa65d64de58510ebc9700-{{checksum ".buildcache/cache-keys/package-34e36b80e4821e545e8aa65d64de58510ebc9700"}}
          name: Restore package cache
      - restore_cache:
          key: package-edbd7c386c6aaf4f89937024d594f884e83ca556-{{checksum ".buildcache/cache-keys/package-edbd7c386c6aaf4f89937024d594f884e83ca556"}}
          name: Restore package cache
      - restore_cache:
          key: package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a-{{checksum ".buildcache/cache-keys/package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a"}}
          name: Restore package cache
      - restore_cache:
          key: package-9370d49a3666f49dd320cae2756f14d76fd7df7c-{{checksum ".buildcache/cache-keys/package-9370d49a3666f49dd320cae2756f14d76fd7df7c"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-8f18c6426eaa9ca1.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-8f18c6426eaa9ca1.tar.gz .buildcache/packages lockfile-8f18c6426eaa9ca1.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-8f18c6426eaa9ca1.tar.gz .buildcache/packages/store/*.json lockfile-8f18c6426eaa9ca1.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-8f18c6426eaa9ca1.yml
      - store_artifacts:
          path: packages-8f18c6426eaa9ca1.tar.gz
      - store_artifacts:
          path: meta-8f18c6426eaa9ca1.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-91563bf6b7dc10bbd5864ce15306b7669e851511-{{checksum ".buildcache/cache-keys/package-91563bf6b7dc10bbd5864ce15306b7669e851511"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-91563bf6b7dc10bbd5864ce15306b7669e851511-{{checksum ".buildcache/cache-keys/package-91563bf6b7dc10bbd5864ce15306b7669e851511"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 91563bf6b7dc10bbd5864ce15306b7669e851511
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9611c4887b2f546958ca8a899c710e22fbd70098-{{checksum ".buildcache/cache-keys/package-9611c4887b2f546958ca8a899c710e22fbd70098"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9611c4887b2f546958ca8a899c710e22fbd70098-{{checksum ".buildcache/cache-keys/package-9611c4887b2f546958ca8a899c710e22fbd70098"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9611c4887b2f546958ca8a899c710e22fbd70098
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-93163edbb722ab27e7da17409c13d2d196487372-{{checksum ".buildcache/cache-keys/package-93163edbb722ab27e7da17409c13d2d196487372"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-93163edbb722ab27e7da17409c13d2d196487372-{{checksum ".buildcache/cache-keys/package-93163edbb722ab27e7da17409c13d2d196487372"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 93163edbb722ab27e7da17409c13d2d196487372
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-488fbc6236e3a2c7f3a1afcb070d69979380c430-{{checksum ".buildcache/cache-keys/package-488fbc6236e3a2c7f3a1afcb070d69979380c430"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-488fbc6236e3a2c7f3a1afcb070d69979380c430-{{checksum ".buildcache/cache-keys/package-488fbc6236e3a2c7f3a1afcb070d69979380c430"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 488fbc6236e3a2c7f3a1afcb070d69979380c430
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5ff2fed0e03958f25c02fc29c495527e5b922411-{{checksum ".buildcache/cache-keys/package-5ff2fed0e03958f25c02fc29c495527e5b922411"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5ff2fed0e03958f25c02fc29c495527e5b922411-{{checksum ".buildcache/cache-keys/package-5ff2fed0e03958f25c02fc29c495527e5b922411"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5ff2fed0e03958f25c02fc29c495527e5b922411
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-47fb4dc60f518f8b81e790c7a04488a792e86ae6-{{checksum ".buildcache/cache-keys/package-47fb4dc60f518f8b81e790c7a04488a792e86ae6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-47fb4dc60f518f8b81e790c7a04488a792e86ae6-{{checksum ".buildcache/cache-keys/package-47fb4dc60f518f8b81e790c7a04488a792e86ae6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 47fb4dc60f518f8b81e790c7a04488a792e86ae6
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6b86c041716354840e84c637a927a768825623ac-{{checksum ".buildcache/cache-keys/package-6b86c041716354840e84c637a927a768825623ac"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6b86c041716354840e84c637a927a768825623ac-{{checksum ".buildcache/cache-keys/package-6b86c041716354840e84c637a927a768825623ac"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6b86c041716354840e84c637a927a768825623ac
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9bd682cd3026e0955df689ae78de077069e3abf5-{{checksum ".buildcache/cache-keys/package-9bd682cd3026e0955df689ae78de077069e3abf5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9bd682cd3026e0955df689ae78de077069e3abf5-{{checksum ".buildcache/cache-keys/package-9bd682cd3026e0955df689ae78de077069e3abf5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9bd682cd3026e0955df689ae78de077069e3abf5
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cdde31e1687a268592c8c9ae35aaeab543beb9b5-{{checksum ".buildcache/cache-keys/package-cdde31e1687a268592c8c9ae35aaeab543beb9b5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cdde31e1687a268592c8c9ae35aaeab543beb9b5-{{checksum ".buildcache/cache-keys/package-cdde31e1687a268592c8c9ae35aaeab543beb9b5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cdde31e1687a268592c8c9ae35aaeab543beb9b5
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d5520ac91b4bf1daa41b4dadd487a1f801894fed-{{checksum ".buildcache/cache-keys/package-d5520ac91b4bf1daa41b4dadd487a1f801894fed"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d5520ac91b4bf1daa41b4dadd487a1f801894fed-{{checksum ".buildcache/cache-keys/package-d5520ac91b4bf1daa41b4dadd487a1f801894fed"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d5520ac91b4bf1daa41b4dadd487a1f801894fed
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-644ed7e56a14991be8d51196e41ff0ce12dff508-{{checksum ".buildcache/cache-keys/package-644ed7e56a14991be8d51196e41ff0ce12dff508"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-644ed7e56a14991be8d51196e41ff0ce12dff508-{{checksum ".buildcache/cache-keys/package-644ed7e56a14991be8d51196e41ff0ce12dff508"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 644ed7e56a14991be8d51196e41ff0ce12dff508
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-34e36b80e4821e545e8aa65d64de58510ebc9700-{{checksum ".buildcache/cache-keys/package-34e36b80e4821e545e8aa65d64de58510ebc9700"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-34e36b80e4821e545e8aa65d64de58510ebc9700-{{checksum ".buildcache/cache-keys/package-34e36b80e4821e545e8aa65d64de58510ebc9700"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 34e36b80e4821e545e8aa65d64de58510ebc9700
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-edbd7c386c6aaf4f89937024d594f884e83ca556-{{checksum ".buildcache/cache-keys/package-edbd7c386c6aaf4f89937024d594f884e83ca556"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-edbd7c386c6aaf4f89937024d594f884e83ca556-{{checksum ".buildcache/cache-keys/package-edbd7c386c6aaf4f89937024d594f884e83ca556"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: edbd7c386c6aaf4f89937024d594f884e83ca556
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a-{{checksum ".buildcache/cache-keys/package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a-{{checksum ".buildcache/cache-keys/package-b144d0c1832cdf471fb2de0a3eb4b433cd80098a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b144d0c1832cdf471fb2de0a3eb4b433cd80098a
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9370d49a3666f49dd320cae2756f14d76fd7df7c-{{checksum ".buildcache/cache-keys/package-9370d49a3666f49dd320cae2756f14d76fd7df7c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7d6d_{{checksum ".buildcache/cache-keys/copy-source-7d6d49a31bff976d3d1f60b3a802f6c033c06409"}}
          keys:
            - warm-go-build-vendor-cache_db8f_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-db8fad12d43a5eb414dfa5d0a8175110ac440683"}}
            - build-static-assets_c0e0_{{checksum ".buildcache/cache-keys/build-static-assets-c0e086b222c55fc6b5c0d85d3619a3c08288a3cf"}}
            - build-ui_ef1b_{{checksum ".buildcache/cache-keys/build-ui-ef1b5ce0721bd23ab599d97b3595f8a673da0475"}}
            - ui-dependencies_1f51_{{checksum ".buildcache/cache-keys/ui-dependencies-1f51fb0ec2ce699e5ad46162e0db5ce5b342b831"}}
            - install-yarn_f872_{{checksum ".buildcache/cache-keys/install-yarn-f872a6f46d43608286d85b2ea439c0549d673c14"}}
            - set-workdir_68ef_{{checksum ".buildcache/cache-keys/set-workdir-68ef45c6e0a1b684c4b8848a6ab43ff29e2c6415"}}
            - install-go-tools_2bad_{{checksum ".buildcache/cache-keys/install-go-tools-2bad43e80574eb63d34058634e6b21f52acf6f18"}}
            - install-go_1ee1_{{checksum ".buildcache/cache-keys/install-go-1ee115f861a81f23ea27252c9f4ed1380cac978a"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9370d49a3666f49dd320cae2756f14d76fd7df7c-{{checksum ".buildcache/cache-keys/package-9370d49a3666f49dd320cae2756f14d76fd7df7c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9370d49a3666f49dd320cae2756f14d76fd7df7c
workflows:
  build-8f18c6426eaa9ca1:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
