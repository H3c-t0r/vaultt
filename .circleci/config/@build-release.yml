version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
          keys:
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b.tar.gz
          key: build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-bf60e5a6c92bbac09e36727581a45718b6d4fca5-{{checksum ".buildcache/cache-keys/package-bf60e5a6c92bbac09e36727581a45718b6d4fca5"}}
          name: Restore package cache
      - restore_cache:
          key: package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146-{{checksum ".buildcache/cache-keys/package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146"}}
          name: Restore package cache
      - restore_cache:
          key: package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7-{{checksum ".buildcache/cache-keys/package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7"}}
          name: Restore package cache
      - restore_cache:
          key: package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc-{{checksum ".buildcache/cache-keys/package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc"}}
          name: Restore package cache
      - restore_cache:
          key: package-d600a41d58daf3775f219d449cff454f55cc3315-{{checksum ".buildcache/cache-keys/package-d600a41d58daf3775f219d449cff454f55cc3315"}}
          name: Restore package cache
      - restore_cache:
          key: package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6-{{checksum ".buildcache/cache-keys/package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6"}}
          name: Restore package cache
      - restore_cache:
          key: package-3ad0d065981f50f480fc8779d7f97342c8001c04-{{checksum ".buildcache/cache-keys/package-3ad0d065981f50f480fc8779d7f97342c8001c04"}}
          name: Restore package cache
      - restore_cache:
          key: package-1190f3163378179e6f91caad54cb4957600065a5-{{checksum ".buildcache/cache-keys/package-1190f3163378179e6f91caad54cb4957600065a5"}}
          name: Restore package cache
      - restore_cache:
          key: package-cf266608b7e7ceb538b9f329dc381e8816f53711-{{checksum ".buildcache/cache-keys/package-cf266608b7e7ceb538b9f329dc381e8816f53711"}}
          name: Restore package cache
      - restore_cache:
          key: package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5-{{checksum ".buildcache/cache-keys/package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5"}}
          name: Restore package cache
      - restore_cache:
          key: package-2a3045722f56a18432d09d40fa1a254aed4e9584-{{checksum ".buildcache/cache-keys/package-2a3045722f56a18432d09d40fa1a254aed4e9584"}}
          name: Restore package cache
      - restore_cache:
          key: package-680b6fafd52162e6d95e0746a5da5cde8f4442cf-{{checksum ".buildcache/cache-keys/package-680b6fafd52162e6d95e0746a5da5cde8f4442cf"}}
          name: Restore package cache
      - restore_cache:
          key: package-1a8bed40dcf3bd562496005a7310f466241d93dd-{{checksum ".buildcache/cache-keys/package-1a8bed40dcf3bd562496005a7310f466241d93dd"}}
          name: Restore package cache
      - restore_cache:
          key: package-8727b7730582da12bd3e167489845a0d37223590-{{checksum ".buildcache/cache-keys/package-8727b7730582da12bd3e167489845a0d37223590"}}
          name: Restore package cache
      - restore_cache:
          key: package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59-{{checksum ".buildcache/cache-keys/package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-886f3991cdc98cfc.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-886f3991cdc98cfc.tar.gz .buildcache/packages lockfile-886f3991cdc98cfc.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-886f3991cdc98cfc.tar.gz .buildcache/packages/store/*.json lockfile-886f3991cdc98cfc.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-886f3991cdc98cfc.yml
      - store_artifacts:
          path: packages-886f3991cdc98cfc.tar.gz
      - store_artifacts:
          path: meta-886f3991cdc98cfc.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bf60e5a6c92bbac09e36727581a45718b6d4fca5-{{checksum ".buildcache/cache-keys/package-bf60e5a6c92bbac09e36727581a45718b6d4fca5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bf60e5a6c92bbac09e36727581a45718b6d4fca5-{{checksum ".buildcache/cache-keys/package-bf60e5a6c92bbac09e36727581a45718b6d4fca5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bf60e5a6c92bbac09e36727581a45718b6d4fca5
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146-{{checksum ".buildcache/cache-keys/package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146-{{checksum ".buildcache/cache-keys/package-fa082e65ac7e4436cb5d5ffd740fc1feaccf0146"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fa082e65ac7e4436cb5d5ffd740fc1feaccf0146
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7-{{checksum ".buildcache/cache-keys/package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7-{{checksum ".buildcache/cache-keys/package-2681ce0e7bb5c13b8dc4f15755fb70380f1196e7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2681ce0e7bb5c13b8dc4f15755fb70380f1196e7
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc-{{checksum ".buildcache/cache-keys/package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc-{{checksum ".buildcache/cache-keys/package-63b601f3a61eef1d6f23c8d4ceb138516c28bbcc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 63b601f3a61eef1d6f23c8d4ceb138516c28bbcc
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d600a41d58daf3775f219d449cff454f55cc3315-{{checksum ".buildcache/cache-keys/package-d600a41d58daf3775f219d449cff454f55cc3315"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d600a41d58daf3775f219d449cff454f55cc3315-{{checksum ".buildcache/cache-keys/package-d600a41d58daf3775f219d449cff454f55cc3315"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d600a41d58daf3775f219d449cff454f55cc3315
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6-{{checksum ".buildcache/cache-keys/package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6-{{checksum ".buildcache/cache-keys/package-bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bfe37f68c953bf9fcedbc5b4d9ca957c2e41efe6
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3ad0d065981f50f480fc8779d7f97342c8001c04-{{checksum ".buildcache/cache-keys/package-3ad0d065981f50f480fc8779d7f97342c8001c04"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3ad0d065981f50f480fc8779d7f97342c8001c04-{{checksum ".buildcache/cache-keys/package-3ad0d065981f50f480fc8779d7f97342c8001c04"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3ad0d065981f50f480fc8779d7f97342c8001c04
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1190f3163378179e6f91caad54cb4957600065a5-{{checksum ".buildcache/cache-keys/package-1190f3163378179e6f91caad54cb4957600065a5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1190f3163378179e6f91caad54cb4957600065a5-{{checksum ".buildcache/cache-keys/package-1190f3163378179e6f91caad54cb4957600065a5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1190f3163378179e6f91caad54cb4957600065a5
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cf266608b7e7ceb538b9f329dc381e8816f53711-{{checksum ".buildcache/cache-keys/package-cf266608b7e7ceb538b9f329dc381e8816f53711"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cf266608b7e7ceb538b9f329dc381e8816f53711-{{checksum ".buildcache/cache-keys/package-cf266608b7e7ceb538b9f329dc381e8816f53711"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cf266608b7e7ceb538b9f329dc381e8816f53711
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5-{{checksum ".buildcache/cache-keys/package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5-{{checksum ".buildcache/cache-keys/package-89368cf359ac5f9d269b06e796a6ba37fd46a4f5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 89368cf359ac5f9d269b06e796a6ba37fd46a4f5
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2a3045722f56a18432d09d40fa1a254aed4e9584-{{checksum ".buildcache/cache-keys/package-2a3045722f56a18432d09d40fa1a254aed4e9584"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2a3045722f56a18432d09d40fa1a254aed4e9584-{{checksum ".buildcache/cache-keys/package-2a3045722f56a18432d09d40fa1a254aed4e9584"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2a3045722f56a18432d09d40fa1a254aed4e9584
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-680b6fafd52162e6d95e0746a5da5cde8f4442cf-{{checksum ".buildcache/cache-keys/package-680b6fafd52162e6d95e0746a5da5cde8f4442cf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-680b6fafd52162e6d95e0746a5da5cde8f4442cf-{{checksum ".buildcache/cache-keys/package-680b6fafd52162e6d95e0746a5da5cde8f4442cf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 680b6fafd52162e6d95e0746a5da5cde8f4442cf
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1a8bed40dcf3bd562496005a7310f466241d93dd-{{checksum ".buildcache/cache-keys/package-1a8bed40dcf3bd562496005a7310f466241d93dd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1a8bed40dcf3bd562496005a7310f466241d93dd-{{checksum ".buildcache/cache-keys/package-1a8bed40dcf3bd562496005a7310f466241d93dd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1a8bed40dcf3bd562496005a7310f466241d93dd
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8727b7730582da12bd3e167489845a0d37223590-{{checksum ".buildcache/cache-keys/package-8727b7730582da12bd3e167489845a0d37223590"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8727b7730582da12bd3e167489845a0d37223590-{{checksum ".buildcache/cache-keys/package-8727b7730582da12bd3e167489845a0d37223590"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8727b7730582da12bd3e167489845a0d37223590
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59-{{checksum ".buildcache/cache-keys/package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e310_{{checksum ".buildcache/cache-keys/copy-source-e31072f4f4459081cd2f379940c0ec0d8218aff1"}}
          keys:
            - warm-go-build-vendor-cache_9c64_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9c64a7804b382828d0ad98bb3880cb6bccd8eecf"}}
            - build-static-assets_40ca_{{checksum ".buildcache/cache-keys/build-static-assets-40cac7cf5751466fad4c189ab66609f28bd6a95f"}}
            - build-ui_cf27_{{checksum ".buildcache/cache-keys/build-ui-cf2784ebc600cd712447fc24d3c79328316c6f7b"}}
            - ui-dependencies_cf4e_{{checksum ".buildcache/cache-keys/ui-dependencies-cf4e3e4d136494d8eea2176d2ebcf2566e3c76c1"}}
            - install-yarn_8961_{{checksum ".buildcache/cache-keys/install-yarn-8961b73c3f2888667991bca9c2ca2bc1232868cb"}}
            - set-workdir_12a0_{{checksum ".buildcache/cache-keys/set-workdir-12a0142eb6d9b27063a7535981c0876bc969df94"}}
            - install-go-tools_ca0c_{{checksum ".buildcache/cache-keys/install-go-tools-ca0c857045fe19c49a29dfffc4291a3868d857ec"}}
            - install-go_bb97_{{checksum ".buildcache/cache-keys/install-go-bb97eb8cf2d71163d84ba3f24aade19af30423e1"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59-{{checksum ".buildcache/cache-keys/package-1f4ce3e48c5131b9938c9d1e962e594f97e87e59"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1f4ce3e48c5131b9938c9d1e962e594f97e87e59
workflows:
  build-886f3991cdc98cfc:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
