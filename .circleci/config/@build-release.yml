version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
          keys:
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-1e9ce00414e9ccf6463786c1cd3856597500a804-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-7a8fa7798931d31140277f38b298daafba1620a8-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2.tar.gz
          key: build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e-{{checksum ".buildcache/cache-keys/package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e"}}
          name: Restore package cache
      - restore_cache:
          key: package-e888b202b65db4aa47e0ffa28c5f19bb50779a68-{{checksum ".buildcache/cache-keys/package-e888b202b65db4aa47e0ffa28c5f19bb50779a68"}}
          name: Restore package cache
      - restore_cache:
          key: package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c-{{checksum ".buildcache/cache-keys/package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c"}}
          name: Restore package cache
      - restore_cache:
          key: package-9ed58627060c57201c4ae85cea95deafe3cb5973-{{checksum ".buildcache/cache-keys/package-9ed58627060c57201c4ae85cea95deafe3cb5973"}}
          name: Restore package cache
      - restore_cache:
          key: package-d79e2aef821c2675534c557295d5d1aaf8fc2a77-{{checksum ".buildcache/cache-keys/package-d79e2aef821c2675534c557295d5d1aaf8fc2a77"}}
          name: Restore package cache
      - restore_cache:
          key: package-9040408edb24acca2a44c9c39b50f0069c6df8c9-{{checksum ".buildcache/cache-keys/package-9040408edb24acca2a44c9c39b50f0069c6df8c9"}}
          name: Restore package cache
      - restore_cache:
          key: package-cfc3b860443e1aba0e8587230416defaff8ad7f8-{{checksum ".buildcache/cache-keys/package-cfc3b860443e1aba0e8587230416defaff8ad7f8"}}
          name: Restore package cache
      - restore_cache:
          key: package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9-{{checksum ".buildcache/cache-keys/package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9"}}
          name: Restore package cache
      - restore_cache:
          key: package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3-{{checksum ".buildcache/cache-keys/package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3"}}
          name: Restore package cache
      - restore_cache:
          key: package-d44408f43f0544c9744f1b0be6a331026314e187-{{checksum ".buildcache/cache-keys/package-d44408f43f0544c9744f1b0be6a331026314e187"}}
          name: Restore package cache
      - restore_cache:
          key: package-85947e068fa765ae66c8afd53b4c430be86d8ee5-{{checksum ".buildcache/cache-keys/package-85947e068fa765ae66c8afd53b4c430be86d8ee5"}}
          name: Restore package cache
      - restore_cache:
          key: package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f-{{checksum ".buildcache/cache-keys/package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f"}}
          name: Restore package cache
      - restore_cache:
          key: package-049e835f39a046b5798d71ad4e9bf2156b67326a-{{checksum ".buildcache/cache-keys/package-049e835f39a046b5798d71ad4e9bf2156b67326a"}}
          name: Restore package cache
      - restore_cache:
          key: package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06-{{checksum ".buildcache/cache-keys/package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06"}}
          name: Restore package cache
      - restore_cache:
          key: package-a844190018c0b4d2df3d698cb502d607f8f45f4e-{{checksum ".buildcache/cache-keys/package-a844190018c0b4d2df3d698cb502d607f8f45f4e"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-428913a65798b1d4.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-428913a65798b1d4.tar.gz .buildcache/packages lockfile-428913a65798b1d4.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-428913a65798b1d4.tar.gz .buildcache/packages/store/*.json lockfile-428913a65798b1d4.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-428913a65798b1d4.yml
      - store_artifacts:
          path: packages-428913a65798b1d4.tar.gz
      - store_artifacts:
          path: meta-428913a65798b1d4.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e-{{checksum ".buildcache/cache-keys/package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e-{{checksum ".buildcache/cache-keys/package-eaf6c2402ec5b7337229bed41fc28b4f49d16b2e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eaf6c2402ec5b7337229bed41fc28b4f49d16b2e
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e888b202b65db4aa47e0ffa28c5f19bb50779a68-{{checksum ".buildcache/cache-keys/package-e888b202b65db4aa47e0ffa28c5f19bb50779a68"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e888b202b65db4aa47e0ffa28c5f19bb50779a68-{{checksum ".buildcache/cache-keys/package-e888b202b65db4aa47e0ffa28c5f19bb50779a68"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e888b202b65db4aa47e0ffa28c5f19bb50779a68
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c-{{checksum ".buildcache/cache-keys/package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c-{{checksum ".buildcache/cache-keys/package-b860ba5abc4e8a843d5c0aa82a533d62dde3b02c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b860ba5abc4e8a843d5c0aa82a533d62dde3b02c
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9ed58627060c57201c4ae85cea95deafe3cb5973-{{checksum ".buildcache/cache-keys/package-9ed58627060c57201c4ae85cea95deafe3cb5973"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9ed58627060c57201c4ae85cea95deafe3cb5973-{{checksum ".buildcache/cache-keys/package-9ed58627060c57201c4ae85cea95deafe3cb5973"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9ed58627060c57201c4ae85cea95deafe3cb5973
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d79e2aef821c2675534c557295d5d1aaf8fc2a77-{{checksum ".buildcache/cache-keys/package-d79e2aef821c2675534c557295d5d1aaf8fc2a77"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d79e2aef821c2675534c557295d5d1aaf8fc2a77-{{checksum ".buildcache/cache-keys/package-d79e2aef821c2675534c557295d5d1aaf8fc2a77"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d79e2aef821c2675534c557295d5d1aaf8fc2a77
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9040408edb24acca2a44c9c39b50f0069c6df8c9-{{checksum ".buildcache/cache-keys/package-9040408edb24acca2a44c9c39b50f0069c6df8c9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9040408edb24acca2a44c9c39b50f0069c6df8c9-{{checksum ".buildcache/cache-keys/package-9040408edb24acca2a44c9c39b50f0069c6df8c9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9040408edb24acca2a44c9c39b50f0069c6df8c9
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cfc3b860443e1aba0e8587230416defaff8ad7f8-{{checksum ".buildcache/cache-keys/package-cfc3b860443e1aba0e8587230416defaff8ad7f8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cfc3b860443e1aba0e8587230416defaff8ad7f8-{{checksum ".buildcache/cache-keys/package-cfc3b860443e1aba0e8587230416defaff8ad7f8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cfc3b860443e1aba0e8587230416defaff8ad7f8
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9-{{checksum ".buildcache/cache-keys/package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9-{{checksum ".buildcache/cache-keys/package-2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2d3279d5c35d54217fe9e7989b18f8cc6cafb2f9
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3-{{checksum ".buildcache/cache-keys/package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3-{{checksum ".buildcache/cache-keys/package-96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96220d3cb52cffc49c717d1c7cd71dc3dc9b12d3
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d44408f43f0544c9744f1b0be6a331026314e187-{{checksum ".buildcache/cache-keys/package-d44408f43f0544c9744f1b0be6a331026314e187"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d44408f43f0544c9744f1b0be6a331026314e187-{{checksum ".buildcache/cache-keys/package-d44408f43f0544c9744f1b0be6a331026314e187"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d44408f43f0544c9744f1b0be6a331026314e187
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-85947e068fa765ae66c8afd53b4c430be86d8ee5-{{checksum ".buildcache/cache-keys/package-85947e068fa765ae66c8afd53b4c430be86d8ee5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-85947e068fa765ae66c8afd53b4c430be86d8ee5-{{checksum ".buildcache/cache-keys/package-85947e068fa765ae66c8afd53b4c430be86d8ee5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 85947e068fa765ae66c8afd53b4c430be86d8ee5
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f-{{checksum ".buildcache/cache-keys/package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f-{{checksum ".buildcache/cache-keys/package-c58e12f1ddebc5e2568179b4e317c26c6dba7d5f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c58e12f1ddebc5e2568179b4e317c26c6dba7d5f
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-049e835f39a046b5798d71ad4e9bf2156b67326a-{{checksum ".buildcache/cache-keys/package-049e835f39a046b5798d71ad4e9bf2156b67326a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-049e835f39a046b5798d71ad4e9bf2156b67326a-{{checksum ".buildcache/cache-keys/package-049e835f39a046b5798d71ad4e9bf2156b67326a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 049e835f39a046b5798d71ad4e9bf2156b67326a
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06-{{checksum ".buildcache/cache-keys/package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06-{{checksum ".buildcache/cache-keys/package-6e083aebc7688ed5bcdd1d2cb06a4864a6679c06"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6e083aebc7688ed5bcdd1d2cb06a4864a6679c06
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a844190018c0b4d2df3d698cb502d607f8f45f4e-{{checksum ".buildcache/cache-keys/package-a844190018c0b4d2df3d698cb502d607f8f45f4e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2cbb_{{checksum ".buildcache/cache-keys/copy-source-2cbbe287425fda47d01da59daaf836105fc68f49"}}
          keys:
            - warm-go-build-vendor-cache_47e9_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-47e96fa1f2fecbef62e20be04ab615c6ce18e435"}}
            - build-static-assets_5bf7_{{checksum ".buildcache/cache-keys/build-static-assets-5bf75f2e04058a491836c56adab2f49569e86c98"}}
            - build-ui_fe07_{{checksum ".buildcache/cache-keys/build-ui-fe071d569088e82c6b2b90d97ba3361e9f5ca0b2"}}
            - ui-dependencies_2961_{{checksum ".buildcache/cache-keys/ui-dependencies-29619ac1698d61efb7cef7fc91a433876ea74546"}}
            - install-yarn_7a8f_{{checksum ".buildcache/cache-keys/install-yarn-7a8fa7798931d31140277f38b298daafba1620a8"}}
            - set-workdir_169b_{{checksum ".buildcache/cache-keys/set-workdir-169bcaa6b0a67fb561df65d1774b222bc620208b"}}
            - install-go-tools_cc16_{{checksum ".buildcache/cache-keys/install-go-tools-cc16abe6c142d269eb7a58af1b98458af93bb2b9"}}
            - install-go_1e9c_{{checksum ".buildcache/cache-keys/install-go-1e9ce00414e9ccf6463786c1cd3856597500a804"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a844190018c0b4d2df3d698cb502d607f8f45f4e-{{checksum ".buildcache/cache-keys/package-a844190018c0b4d2df3d698cb502d607f8f45f4e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a844190018c0b4d2df3d698cb502d607f8f45f4e
workflows:
  build-428913a65798b1d4:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
