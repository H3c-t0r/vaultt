syntax = "proto3";

option go_package = "github.com/hashicorp/vault/sdk/logical";

package logical;

// EventPluginInfo contains data related to the plugin that generated an event.
message EventPluginInfo {
    // The type of plugin this event originated from, i.e., "auth" or "secrets.
    string mount_class = 1;
    // Unique ID of the mount entry, e.g., "kv_957bb7d8"
    string mount_accessor = 2;
    // Mount path of the plugin this event originated from, e.g., "secret/"
    string mount_path = 3;
    // Plugin name that this event originated from, e.g., "kv"
    string plugin = 4;
    // Plugin version of the plugin this event originated from, e.g., "v0.13.3+builtin"
    string plugin_version = 5;
    // Mount version that this event originated from, i.e., if KVv2, then "2". Usually empty.
    string version = 6;
}

// EventData contains event data in a CloudEvents container.
message EventData {
    // EID identifies the event, cannot be an empty and is required. The
    // combination of Source + EID must be unique. Events with the same Source +
    // ID can be assumed to be duplicates by consumers.
    // (Named EID to avoid conflict with ID method.)
    string eid = 1;
    // If the event if plugin-generated, this contains information on the plugin.
    EventPluginInfo plugin_info = 2;
    // Arbitrary non-secret data. Optional.
    bytes metadata = 3;
    // Any IDs that the event relates to, i.e., UUIDs, paths.
    repeated string entity_ids = 4;
    // Human-readable note.
    string note = 5;
}
