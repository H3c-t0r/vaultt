/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

// ARG TODO return to file-name, used in two place and lots of css
.file-name {
  box-shadow: 0 4px 1px rgba(10, 10, 10, 0.06) inset;
  border: 1px solid #6f7682;
}

.control.has-icons-left .icon,
.control.has-icons-right .icon {
  height: 2.5rem;
}

.control {
  font-size: 1rem;
  max-width: 100%;
  position: relative;
  text-align: left;

  // Modifiers
  &.has-icons-left,
  &.has-icons-right {
    .input,
    .select select {
      padding-left: 2rem;

      &:focus,
      &.is-focused,
      &:active,
      &.is-active {
        & ~ .icon {
          color: currentColor;
        }
      }
    }
  }
  &.has-checkbox-right {
    label.checkbox {
      display: inline-flex;
      height: 2.5em;
      position: absolute;
      top: 0;
      right: 0;
      justify-content: flex-end;
      margin-left: auto;
    }
    .input,
    .select select {
      padding-right: 10em;
    }
  }

  &.is-align-end {
    display: flex;
    align-self: end;
  }
}

.label {
  color: $grey-darker;
  text-transform: uppercase;
  font-size: $size-small;
}

.is-label,
.b-checkbox .is-label {
  color: $grey-darker;
  display: inline-block;
  font-size: $body-size;
  font-weight: $font-weight-bold;

  &:not(:last-child) {
    margin-bottom: 0.25rem;
  }
  // Sizes
  &.is-small {
    font-size: $size-small;
  }
  &.is-medium {
    font-size: $size-medium;
  }
  &.is-large {
    font-size: $size-large;
  }

  &::before,
  &::after {
    transform: translateY(0.2em);
  }

  &::before {
    border-color: $grey-light;
  }
}

.b-checkbox .is-label {
  display: inline;
  margin-left: $size-10;
}

.b-checkbox > .sub-text {
  padding-left: 2rem;
}

.field:not(:last-child) {
  margin-bottom: 1.5rem;
}
.field-body .field {
  margin-bottom: 0;
}
.field {
  // cannot use :read-only selector because tag used for other purposes
  &.is-readOnly {
    background-color: $ui-gray-100;
    cursor: not-allowed;
  }
}
.field.has-addons {
  flex-wrap: wrap;
  .control {
    .button,
    .checkbox,
    .input,
    .select select {
      border-radius: 0;
      &:hover,
      &.is-hovered {
        z-index: 2;
      }
      &:focus,
      &.is-focused,
      &:active,
      &.is-active {
        z-index: 3;
        &:hover {
          z-index: 4;
        }
      }
    }
    &:first-of-type {
      flex-grow: 1;
      .button,
      .checkbox,
      .input,
      .select select {
        border-bottom-left-radius: $input-radius;
        border-top-left-radius: $input-radius;
      }
    }
    &:last-child {
      .button,
      .checkbox,
      .input,
      .select select {
        border-bottom-right-radius: $input-radius;
        border-top-right-radius: $input-radius;
      }
    }
  }
  & > .label {
    flex-grow: 1;
    flex-shrink: 0;
    width: 100%;
  }
  .checkbox {
    // ARG TODO return this
    // @include input;
    background-color: $grey-lightest;
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      &.is-#{$name} {
        border-color: $color;
      }
    }
    input {
      margin-right: 0.5em;
    }
  }
}

.file-label {
  overflow: visible;
}

.file-input {
  height: 0.01em;
  left: 0;
  outline: 0;
  position: absolute;
  top: 0;
  width: 0.01em;
  visibility: hidden;
}

.file-cta {
  border: 1px solid $ui-gray-300;
  border-radius: 2px;
  min-width: auto;
  position: relative;
  white-space: nowrap;

  .icon:first-child:last-child {
    display: inline-block;
    margin-right: 0.1rem;
    vertical-align: middle;
  }
}

.file-name {
  @extend .input;
  border: 1px solid $ui-gray-300;
  border-radius: 2px;
}

.file-delete-button {
  @extend .button;
  @extend .is-transparent;
  color: $grey;
  position: absolute;
  right: 8px;
}

fieldset.form-fieldset {
  border: none;
}

// ARG TODO move to helper
.has-error-border,
select.has-error-border {
  border: 1px solid $red-500;
}

.dropdown-has-error-border > div.ember-basic-dropdown-trigger {
  border: 1px solid $red-500;
}
