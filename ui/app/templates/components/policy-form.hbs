{{#if (and @isInline this.model.policyType)}}
  <nav class="tabs">
    <ul>
      <li class={{unless this.showExamplePolicy "active"}}>
        <button
          type="button"
          name="form"
          class="link link-plain tab has-text-weight-semibold {{unless this.showExamplePolicy ' is-active'}}"
          {{on "click" (fn (mut this.showExamplePolicy) false)}}
        >
          Your Policy
        </button>
      </li>
      <li class={{if this.showExamplePolicy "active"}}>
        <button
          type="button"
          name="form"
          class="link link-plain tab has-text-weight-semibold {{if this.showExamplePolicy ' is-active'}}"
          {{on "click" (fn (mut this.showExamplePolicy) true)}}
        >
          Example Policy
        </button>
      </li>
    </ul>
  </nav>
{{/if}}
{{#if this.showExamplePolicy}}
  <div class="has-bottom-margin-s">
    {{#if (eq this.model.policyType "acl")}}
      <p>
        ACL Policies are written in Hashicorp Configuration Language (
        <DocLink @host="https://github.com/hashicorp/hcl">HCL</DocLink>
        ) or JSON and describe which paths in Vault a user or machine is allowed to access. Here is an example policy:
      </p>
    {{else}}
      <p class="has-bottom-margin-s">
        Role Governing Policies (RGPs) are tied to client tokens or identities which is similar to
        <DocLink @host="https://developer.hashicorp.com" @path="/vault/tutorials/policies/policies">ACL policies</DocLink>.
        They use
        <DocLink @host="https://developer.hashicorp.com" @path="/vault/docs/enterprise/sentinel">Sentinel</DocLink>
        as a language framework to enable fine-grained policy decisions.
      </p>
      <p>
        Here is an example policy that uses RGP to restrict access to the
        <code class="tag is-marginless is-paddingless">admin</code>
        policy such that a user named James or has the
        <code class="tag is-marginless is-paddingless">Team Lead</code>
        role can manage the
        <code class="tag is-marginless is-paddingless">admin</code>
        policy:
      </p>
    {{/if}}
  </div>
  <JsonEditor
    @value={{get this.policyTemplates this.model.policyType}}
    @mode="ruby"
    @readOnly={{true}}
    @showToolbar={{true}}
  />
{{else}}
  {{#if @isInline}}
    <Select
      @label="Type"
      @options={{this.policyOptions}}
      @isFullwidth={{true}}
      @selectedValue={{this.model.policyType}}
      @onChange={{this.setPolicyType}}
      @noDefault={{true}}
    />
  {{/if}}
  {{! POLICY FORM STARTS HERE}}
  {{#if this.model.policyType}}
    <form {{on "submit" (perform this.save)}}>
      <div class="box is-bottomless is-fullwidth is-marginless">
        <MessageError @errorMessage={{this.errorBanner}} />
        <NamespaceReminder @mode={{if this.model.isNew "create" "edit"}} @noun="policy" />
        {{#if this.model.isNew}}
          <div class="field">
            <label for="policy-name" class="is-label">Name</label>
            <div class="control">
              <Input
                @type="text"
                @value={{lowercase this.model.name}}
                id="policy-name"
                class="input"
                {{on "input" this.setModelName}}
                data-test-policy-input="name"
              />
            </div>
          </div>
        {{/if}}
        <div class="field">
          {{#if this.model.isNew}}
            <Toolbar>
              <label class="is-label">Policy</label>
              <ToolbarActions>
                <div class="toolbar-separator"></div>
                <div class="control is-flex">
                  <Input
                    id="fileUploadToggle"
                    @type="checkbox"
                    name="fileUploadToggle"
                    class="switch is-rounded is-success is-small"
                    @checked={{this.showFileUpload}}
                    {{on "change" (fn (mut this.showFileUpload) (not this.showFileUpload))}}
                    data-test-policy-edit-toggle={{true}}
                  />
                  <label for="fileUploadToggle">Upload file</label>
                </div>
              </ToolbarActions>
            </Toolbar>
            {{#if this.showFileUpload}}
              <TextFile @inputOnly={{true}} @file={{this.file}} @onChange={{this.setPolicyFromFile}} />
            {{else}}
              <JsonEditor
                @title="Policy"
                @helpText="You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field"
                @showToolbar={{false}}
                @value={{this.model.policy}}
                @valueUpdated={{action (mut this.model.policy)}}
                @mode="ruby"
                @extraKeys={{hash Shift-Enter=(perform this.save)}}
              />
            {{/if}}
          {{else}}
            {{! EDITING - no file upload toggle}}
            <JsonEditor
              @title="Policy"
              @helpText="You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field"
              @value={{this.model.policy}}
              @valueUpdated={{action (mut this.model.policy)}}
              @mode="ruby"
              @extraKeys={{hash Shift-Enter=(perform this.save)}}
            />
          {{/if}}
        </div>
        {{#each this.model.additionalAttrs as |attr|}}
          <FormField data-test-field={{true}} @attr={{attr}} @model={{this.model}} />
        {{/each}}
      </div>
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            class="button is-primary {{if this.save.isRunning 'is-loading'}}"
            disabled={{this.save.isRunning}}
            data-test-policy-save
          >
            {{if this.model.isNew "Create policy" "Save"}}
          </button>
          <button type="button" class="button has-left-margin-s" disabled={{this.save.isRunning}} {{on "click" this.cancel}}>
            Cancel
          </button>
        </div>
      </div>
    </form>
  {{else}}
    <EmptyState @title="No policy type selected" @message="Select a policy type to continue creating." />
  {{/if}}
{{/if}}