<PageHeader as |p|>
  <p.top>
    <KeyValueHeader @baseKey={{baseKey}} @path="vault.cluster.secrets.backend.list" @mode={{mode}} @root={{root}} @showCurrent={{true}} />
  </p.top>
  <p.levelLeft>
    <h1 class="title is-3">
      {{#if (eq mode "create") }}
        Create secret
      {{else if (and isV2 (eq mode 'edit'))}}
        Create new version
      {{else if (eq mode 'edit')}}
        Edit secret
      {{else}}
        {{key.id}}
      {{/if}}
    </h1>
  </p.levelLeft>
</PageHeader>

<Toolbar>
  {{#unless (and (eq mode 'show') isWriteWithoutRead)}}
    <ToolbarFilters>
      <Toggle
        @name="json"
        @status="success"
        @size="small"
        @disabled={{and (eq mode 'show') secretDataIsAdvanced}}
        @checked={{showAdvancedMode}}
        @onChange={{action "toggleAdvanced"}}
        >
        <span class="has-text-grey">JSON</span>
      </Toggle>
    </ToolbarFilters>
  {{/unless}}
  <ToolbarActions>
    {{#if (and (eq mode 'show') canDelete)}}
    {{!-- ARG TODO check this against permissions, for canUndeleteVersion --}}
      {{#if (and showUndeleteOption canUndeleteVersion)}}
        <button
            type="button"
            class="toolbar-link"
            onclick={{action "handleDelete" "undelete"}}
          >
          Undelete
        </button>
      {{/if}}
      {{#if canDestroyVersion}}
        <button
            type="button"
            class="toolbar-link"
            onclick={{action (mut this.showDeleteModal) true}}
          >
            {{if (and (not this.modelForData.deleted) (not this.modelForData.destroyed)) "Delete" "Destroy"}}
          </button>
      {{else}}
        <ConfirmAction
          @buttonClasses="link is-destroy"
          @confirmTitle="Delete version?"
          @confirmMessage="This version will no longer be able to be read, but the underlying data will not be removed and can still be undeleted."
          @onConfirmAction={{action "handleDelete" "delete"}}
          data-test-secret-v2-delete="true"
        >
          Delete version
        </ConfirmAction>
      {{/if}}
      <div class="toolbar-separator"/>
    {{/if}}

    {{#if (and (eq mode 'show') (or canEditV2Secret canEdit))}}
      {{#let (concat 'vault.cluster.secrets.backend.' (if (eq mode 'show') 'edit' 'show')) as |targetRoute|}}
        {{#unless (and isV2 (or isWriteWithoutRead modelForData.destroyed modelForData.deleted))}}
          <BasicDropdown
            @class="popup-menu"
            @horizontalPosition="auto-right"
            @verticalPosition="below"
            @onClose={{action "clearWrappedData"}}
            as |D|
          >
            <D.trigger
              data-test-popup-menu-trigger="true"
              @class={{concat "toolbar-link" (if D.isOpen " is-active")}}
              @tagName="button"
            >
              Copy
              <Chevron @direction="down" @isButton={{true}} />
            </D.trigger>
            <D.content @class="popup-menu-content is-wide">
              <nav class="box menu">
                <ul class="menu-list">
                  <li class="action">
                    <CopyButton
                      @class="link link-plain has-text-weight-semibold is-ghost"
                      @clipboardText={{codemirrorString}}
                      @success={{action (set-flash-message "JSON Copied!")}}
                      data-test-copy-button
                    >
                      Copy JSON
                    </CopyButton>
                  </li>
                  <li class="action">
                    {{#if showWrapButton}}
                      <button
                        class="link link-plain has-text-weight-semibold is-ghost {{if isWrapping "is-loading"}}"
                        type="button"
                        {{action "handleWrapClick"}}
                        data-test-wrap-button
                        disabled={{isWrapping}}
                      >
                        Wrap secret
                      </button>
                    {{else}}
                      <MaskedInput
                        @class="has-padding"
                        @displayOnly={{true}}
                        @allowCopy={{true}}
                        @value={{wrappedData}}
                        @success={{action "handleCopySuccess"}}
                        @error={{action "handleCopyError"}}
                      />
                    {{/if}}
                  </li>
                </ul>
              </nav>
            </D.content>
          </BasicDropdown>
        {{/unless}}
      {{/let}}
    {{/if}}

    {{#if (and (eq @mode "show") this.isV2 (not @model.failedServerRead))}}
      <SecretVersionMenu
        @version={{this.modelForData}}
        @onRefresh={{action 'refresh'}}
        @model={{this.model}}
      />
    {{/if}}

    {{#if (and (eq mode 'show') (or canEditV2Secret canEdit))}}
      {{#let (concat 'vault.cluster.secrets.backend.' (if (eq mode 'show') 'edit' 'show')) as |targetRoute|}}
        {{#if isV2}}
          <ToolbarLink
            @params={{array targetRoute model.id (query-params version=this.modelForData.version)}}
            @data-test-secret-edit="true"
            @replace={{true}}
            @type="add"
          >
            Create new version
          </ToolbarLink>
        {{else}}
          <ToolbarLink
            @params={{array targetRoute model.id}}
            @data-test-secret-edit="true"
            @replace={{true}}
          >
            Edit secret
          </ToolbarLink>
        {{/if}}
      {{/let}}
    {{/if}}
  </ToolbarActions>
</Toolbar>

<Modal
  @title="Delete Secret?"
  @onClose={{action (mut this.showDeleteModal) false}}
  @isActive={{this.showDeleteModal}}
  @type="warning"
  @showCloseButton={{true}}
>
  <section class="modal-card-body">
    <p class="has-bottom-margin-s">There are three ways to delete or destroy the <strong>{{this.model.id}}</strong> secret. Each is different, so be sure to read the below carefully.</p>
    <p class="has-bottom-margin-s"><strong>How would you like to proceed?</strong></p>
    {{!-- ARG TODO add permissions to each button --}}
    {{#unless this.modelForData.destroyed}}
      {{#unless this.modelForData.deleted}}
        <div class="modal-radio-button">
          <RadioButton
            @value="delete"
            @radioClass="radio"
            @groupValue={{this.deleteType}}
            @changed={{action (mut this.deleteType)}}
            @name="setup-deleteType"
            @radioId="delete-version"
          />
          <div class="helper-text">
            <label for="dr" data-test-replication-type-select="dr"><strong>Delete this version</strong></label>
            <p>This deletes Version {{this.modelForData.version}} of the secret. It can be un-deleted later.</p>
          </div>
        </div>
      {{/unless}}
      <div class="modal-radio-button">
        <RadioButton
          @value="destroy"
          @radioClass="radio"
          @groupValue={{this.deleteType}}
          @changed={{action (mut this.deleteType)}}
          @name="setup-deleteType"
          @radioId="destroy-version"
        />
        <div class="helper-text">
          <label for="dr" data-test-replication-type-select="dr"><strong>Destroy this version</strong></label>
          <p>Version {{this.modelForData.version}} is permanently destroyed and cannot be read or recovered later.</p>
        </div>
      </div>
    {{/unless}}
    <div class="modal-radio-button">
      <RadioButton
        @value="destroy-all-versions"
        @radioClass="radio"
        @groupValue={{this.deleteType}}
        @changed={{action (mut this.deleteType)}}
        @name="setup-deleteType"
        @radioId="destroy-all-versions"
      />
      <div class="helper-text">
        <label for="dr" data-test-replication-type-select="dr"><strong>Destroy all versions</strong></label>
        <p>All secret versions and metadata are permanently destroyed and cannot be read or recovered later.</p>
      </div>
    </div>
  </section>
  <footer class="modal-card-foot modal-card-foot-outlined">
    <button
      type="button"
      class="button has-text-danger"
      onclick={{action "handleDelete" this.deleteType}}
      disabled={{if this.deleteType false true}}
    >
      Delete
    </button>
    <button
      type="button"
      class="button is-secondary"
      onclick={{action (mut this.showDeleteModal) false}}
    >
      Cancel
    </button>
  </footer>
</Modal>

{{partial partialName}}
