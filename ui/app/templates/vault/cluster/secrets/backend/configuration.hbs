{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

<SecretListHeader
  @model={{this.model}}
  @backendCrumb={{hash
    label=this.model.id
    text=this.model.id
    path="vault.cluster.secrets.backend.list-root"
    model=this.model.id
  }}
  @isConfigure={{true}}
/>

{{#if this.isConfigurable}}
  {{! only relevant to SSH and AWS, eventually Azure and GCP }}
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink
        @route="vault.cluster.settings.configure-secret-backend"
        @model={{this.model.id}}
        data-test-secret-backend-configure
      >
        Configure
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>

  {{! ARG TODO when in component handle the return of the title display }}
  {{#if this.model.configError}}
    <EmptyState data-test-config-error @title="Something went wrong" @message={{this.model.configError}} />
  {{else if this.model.configModel}}
    {{! display configured fields }}
    {{#each this.model.configModel.attrs as |attr|}}
      <InfoTableRow
        @alwaysRender={{(not (is-empty-value (get this.model attr.name)))}}
        @label={{or attr.options.label (to-label attr.name)}}
        @value={{get this.model.configModel (or attr.options.fieldValue attr.name)}}
        @maskInput={{attr.options.sensitive}}
      />
    {{/each}}
  {{else}}
    <EmptyState
      data-test-config-cta
      @title="{{this.model.type}} not configured"
      @message="Get started by setting up the connection with your existing {{this.model.type}} account."
    >
      <Hds::Link::Standalone
        @icon="chevron-right"
        @iconPosition="trailing"
        @text="Configure {{this.model.type}}"
        @route="vault.cluster.settings.configure-secret-backend"
        @model={{this.model.id}}
      />
    </EmptyState>
  {{/if}}

  <SecretsEngineMountConfig @model={{this.model}} class="has-top-margin-xl has-bottom-margin-xl" data-test-mount-config />

{{else}}
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    {{#each this.model.attrs as |attr|}}
      {{#if (eq attr.type "object")}}
        <InfoTableRow
          @alwaysRender={{not (is-empty-value (get this.model attr.name))}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{stringify (get this.model (or attr.options.fieldValue attr.name))}}
        />
      {{else}}
        <InfoTableRow
          @alwaysRender={{and (not (is-empty-value (get this.model attr.name))) (not-eq attr.name "version")}}
          @formatTtl={{eq attr.options.editType "ttl"}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{get this.model (or attr.options.fieldValue attr.name)}}
        />
      {{/if}}
    {{/each}}
  </div>
{{/if}}